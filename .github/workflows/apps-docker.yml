name: Docker

on:
  push:
    branches:
      - docker**
  # # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onschedule
  # schedule:
  #   - cron:  '0 7 * * 1-5' # every work night (delayed 1 hr)
  repository_dispatch:
    types:
      - all
      - docker


jobs:

  config:
    uses: ./.github/workflows/apps-config.yml

  docker:
    needs: config
    name: ${{ matrix.docker.type }}-${{ matrix.r_version }}${{ matrix.flavor.extra_base_tag }}
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:

        flavor:
          # - shinycoreci_sha: main
          - shinycoreci_sha: docker_new
            extra_base_tag: ""
          # - shinycoreci_sha: shiny-1.4.0.1
          #   extra_base_tag: "-rc_v1.4.0.1"

        r_version:
          - ${{ needs.config.outputs.release }}
          # - ${{ needs.config.outputs.oldrel1 }}
          # - ${{ needs.config.outputs.oldrel2 }}
          # - ${{ needs.config.outputs.oldrel3 }}
          # - ${{ needs.config.outputs.oldrel4 }}

        docker:
          - workdir: inst/Docker/debug
            type: debug
          # - workdir: inst/Docker/centos
          #   type: centos7
          # # Focal has trouble installing R 3.4, 3.5
          # - workdir: inst/Docker/ubuntu
          #   type: focal
          # - workdir: inst/Docker/ubuntu
          #   type: bionic
          # # Xenial has trouble installing R 3.5
          # - workdir: inst/Docker/ubuntu
          #   type: xenial

    steps:

    - name: Short R version and SHA
      id: short
      run: |
        # keep only the major.minor values
        RVERSION=`echo '${{ matrix.r_version }}' | sed 's/\([0-9]\.[0-9]\).*/\1/'`
        echo "r-version: $RVERSION"
        echo "::set-output name=r-version::$RVERSION"

        SHA="${{github.event.pull_request.head.sha}}${{ github.sha }}"
        if [[ -z "$SHA" ]]; then
          SHA=${{ github.sha }}
        fi
        SHORT_SHA=${SHA:0:7}
        echo "sha: $SHORT_SHA"
        echo "::set-output name=sha::$SHORT_SHA"
    # - name: Should install
    #   id: can-build
    #   if: |
    #     !(
    #       ( steps.short.outputs.r-version == '3.5' && matrix.docker.type == 'bionic' ) ||
    #       ( matrix.docker.type == 'focal' &&
    #         ( steps.short.outputs.r-version == '3.4' || steps.short.outputs.r-version == '3.5' )
    #       )
    #     )
    #   run: |
    #     echo "If this step did not run, then we are unable to install this version of R on this Linux distro"

    - uses: actions/checkout@v2
      if: steps.can-build.conclusion != 'skipped'

    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Base
      uses: docker/build-push-action@v2
      with:
        context: ${{ matrix.docker.workdir }}
        push: true
        tags: |
          rstudio/shinycoreci:base-${{ steps.short.outputs.r-version }}-${{ matrix.docker.type }}${{ matrix.flavor.extra_base_tag }}
        build-args: |
          R_VERSION=${{ steps.short.outputs.r-version }}
          RELEASE=${{ matrix.docker.type }}
          SHINYCORECI_SHA=${{ matrix.flavor.shinycoreci_sha }}
          GITHUB_PAT=${{ secrets.GITHUB_TOKEN }}

    # - name: Build SSO
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: "${{ matrix.docker.workdir }}_sso"
    #     push: true
    #     tags: |
    #       rstudio/shinycoreci:sso-${{ steps.short.outputs.r-version }}-${{ matrix.docker.type }}${{ matrix.flavor.extra_base_tag }}
    #     build-args: |
    #       R_VERSION=${{ steps.short.outputs.r-version }}
    #       RELEASE=${{ matrix.docker.type }}
    #       EXTRA_BASE_TAG=${{ matrix.flavor.extra_base_tag }}

    #     # Note: Store the license as a single line string with new lines as visible '\n' characters.
    # - name: Store SSP License
    #   if: steps.can-build.conclusion != 'skipped'
    #   shell: bash
    #   run: |
    #     printf "%b" "${{ secrets.SSP_LICENSE_FILE }}" > ${{ matrix.docker.workdir }}_ssp/ssp.lic 2>/dev/null
    #     wc -l ${{ matrix.docker.workdir }}_ssp/ssp.lic
    # # https://github.com/marketplace/actions/publish-docker
    # - name: Build SSP
    #   if: steps.can-build.conclusion != 'skipped'
    #   uses: elgohr/Publish-Docker-Github-Action@2.12
    #   with:
    #     name: rstudio/shinycoreci
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    #     cache: ${{ github.event_name == 'push' }}
    #     workdir: ${{ matrix.docker.workdir }}_ssp
    #     # ignoring build arg *_AWS_BUILD_MACHINE as it's consistent within file
    #     buildargs: "R_VERSION=${{ steps.short.outputs.r-version }},RELEASE=${{ matrix.docker.type }},SSP_LICENSE_FILE=ssp.lic,EXTRA_BASE_TAG=${{ matrix.flavor.extra_base_tag }}"
    #     tags: "ssp-${{ steps.short.outputs.r-version }}-${{ matrix.docker.type }}${{ matrix.flavor.extra_base_tag }}"
    # - name: Remove SSP License
    #   if: ${{ always() && steps.can-build.conclusion != 'skipped' }}
    #   run: |
    #     rm ${{ matrix.docker.workdir }}_ssp/ssp.lic
