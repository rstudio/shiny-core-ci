on:
  push:
    branches:
      - master
      - ghactions
  pull_request:
    branches:
      - master
  # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onschedule
  schedule:
    - cron:  '0 0 * * 1' # every monday at midnight

name: R-CMD-check

jobs:
  # # added so that the workflow doesn't fail.
  # always_runner:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Always run
  #       run: echo "This job is used to prevent the workflow status from showing as failed when all other jobs are skipped"

  R-CMD-check:
    # if: false
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: macOS-latest, r: '4.0'}
        # - { os: macOS-latest, r: 'devel'}
        - { os: windows-latest, r: '4.0'}
        # - { os: ubuntu-18.04, r: '3.4', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
        # - { os: ubuntu-18.04, r: '3.5', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
        # - { os: ubuntu-18.04, r: '3.6', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
        - { os: ubuntu-18.04, r: '4.0', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Create cache ID from time
        id: cache_id
        run: |
          echo "::set-output name=value::$(Rscript -e 'cat(as.numeric(Sys.time()))')"
      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-libs-rcmdcheck-${{ steps.cache_id.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-r-${{ matrix.config.r }}-libs-rcmdcheck-

      - name: Install remotes
        run: >
          Rscript
          -e "if (system.file(package = 'remotes') == '') install.packages('remotes')"

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: >
          Rscript
          -e "update.packages(ask = FALSE, lib.loc = .libPaths()[1])"
          -e "remotes::install_deps(dependencies = TRUE)"
          -e "remotes::install_cran('rcmdcheck')"

      - name: Check
        run: >
          Rscript
          -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'note', check_dir = 'check')"

      - name: Upload check results
        if: failure() # only for previous step
        uses: actions/upload-artifact@v1
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Fix path for Windows caching
        if: runner.os == 'Windows'
        # This is needed because if you use the default tar at this stage,
        # C:/Rtools/bin/tar.exe, it will say that it can't find gzip.exe. So
        # we'll just set the path so that the original tar that would be
        # found, will be found.
        run: echo "::add-path::C:/Program Files/Git/usr/bin"
