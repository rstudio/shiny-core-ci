% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fix_snaps.R
\name{fix_snaps}
\alias{fix_snaps}
\title{Fix all \verb{_snaps} files and merge all \verb{gha-} branches}
\usage{
fix_snaps(
  sha = git_sha(repo_dir),
  ...,
  ask_apps = FALSE,
  ask_branches = TRUE,
  ask_if_not_main = TRUE,
  repo_dir = rprojroot::find_package_root_file()
)
}
\arguments{
\item{sha}{git sha of base branch to look for}

\item{...}{Extra arguments passed to \code{shinytest::viewTestDiff}}

\item{ask_apps, ask_branches}{Logical which allows for particular apps or branches are to be inspected}

\item{ask_if_not_main}{Logical which will check if \code{main} is the base branch}

\item{repo_dir}{Root repo folder path}
}
\description{
This method will apply patches from corresponding GitHub branches for each R and Operating System combination. Changes will not be committed or pushed back to GitHub. The user will need to perform this action manually.
}
\details{
Note: This function will NOT fix \code{shinyjster} failures.

Outline of steps performed:
\enumerate{
\item Validate the current git branch is \code{main}
\item Validate there are no git changes or untracked files in the current base branch
\item Validate there are \code{.new} _snaps files
\item Create patch files for each corresponding \verb{gha-} branch in \code{./patches}
\item Ask which branches should be applied. Filter patch files accordingly
\item Ask which app changes should be kept
\item Apply patch files
\item Call \code{\link[=accept_snaps]{accept_snaps()}} on all app folders
\item Undo changes to app that were not selected
\item Prompt user to commit and push changes back to GitHub
}
}
