{"results":[{"app_name":"000-all","status":"pass","result":"\n###\nRunning tests for app: 000-all\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | true                                                            \n✔ |         1 | true\n\n══ Results ═════════════════════════════════════════════════════════════════════\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 000-all\n###"},{"app_name":"000-manual","status":"pass","result":"\n###\nRunning tests for app: 000-manual\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | true                                                            \n✔ |         1 | true\n\n══ Results ═════════════════════════════════════════════════════════════════════\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\n🔥 Your tests are lit 🔥\n\nStopping tests for app: 000-manual\n###"},{"app_name":"001-hello","status":"fail","result":"\n###\nRunning tests for app: 001-hello\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n⠸ |         4 | mytest                                                          \n⠼ |         5 | mytest                                                          \n⠴ |         6 | mytest                                                          \n✔ |         6 | mytest [3.5s]\n\n⠏ |         0 | server                                                          \n⠋ |         1 | server                                                          \n✔ |         1 | server\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 001-hello\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:23602/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 20554\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x56444486e4e3 <unknown>\npxjava - #1 0x56444459dc76 <unknown>\npxjava - #2 0x5644445cb04a <unknown>\npxjava - #3 0x5644445c64a1 <unknown>\npxjava - #4 0x5644445c3029 <unknown>\npxjava - #5 0x564444601ccc <unknown>\npxjava - #6 0x56444460147f <unknown>\npxjava - #7 0x5644445f8de3 <unknown>\npxjava - #8 0x5644445ce2dd <unknown>\npxjava - #9 0x5644445cf34e <unknown>\npxjava - #10 0x56444482e3e4 <unknown>\npxjava - #11 0x5644448323d7 <unknown>\npxjava - #12 0x56444483cb20 <unknown>\npxjava - #13 0x564444833023 <unknown>\npxjava - #14 0x5644448011aa <unknown>\npxjava - #15 0x5644448576b8 <unknown>\npxjava - #16 0x564444857847 <unknown>\npxjava - #17 0x564444867243 <unknown>\npxjava - #18 0x7f0478c99609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 001-hello\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/001-hello\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f2cf6475\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f2cf6475\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55651a591f38> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 001-hello - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/001-hello - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.8 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 001-hello - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/001-hello - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 9 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 001-hello\n###"},{"app_name":"002-text","status":"fail","result":"\n###\nRunning tests for app: 002-text\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 4       4 | mytest                                                          \n✖ | 4       4 | mytest [4.0s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.1 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 002-text\n###"},{"app_name":"003-reactivity","status":"fail","result":"\n###\nRunning tests for app: 003-reactivity\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠙ |   1     1 | mytest                                                          \n⠹ | 1 1     1 | mytest                                                          \n⠸ | 1 1     2 | mytest                                                          \n⠼ | 2 1     2 | mytest                                                          \n⠴ | 2 1     3 | mytest                                                          \n⠦ | 3 1     3 | mytest                                                          \n✖ | 3 1     3 | mytest [3.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:4:3'): Migrated shinytest test: mytest.R\n! Shiny inputs and outputs should have unique HTML id values.\nℹ The following HTML id values are not unique:\n• caption\nℹ Do you have a Shiny input and output value with the same name?\nBacktrace:\n    ▆\n 1. └─AppDriver$new(...) at test-mytest.R:4:2\n 2.   └─shinytest2 (local) initialize(...)\n 3.     └─shinytest2:::app_initialize(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─shinytest2:::app_initialize_(self, private, ..., view = view)\n 6.         └─shinytest2:::app_check_unique_names(self, private)\n 7.           └─shinytest2:::app_warn(...)\n\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.7 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 3 | WARN 1 | SKIP 0 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 003-reactivity\n###"},{"app_name":"004-mpg","status":"fail","result":"\n###\nRunning tests for app: 004-mpg\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 4       4 | mytest                                                          \n✖ | 4       4 | mytest [4.0s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:22:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.1 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:22:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 004-mpg\n###"},{"app_name":"005-sliders","status":"pass","result":"\n###\nRunning tests for app: 005-sliders\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n⠹ |   5     8 | mytest                                                          \n⠼ |   5    10 | mytest                                                          \n✔ |   5    10 | mytest [4.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/009_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | server                                                          \n⠋ |         1 | server                                                          \n✔ |         4 | server\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.7 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 14 ]\n\nStopping tests for app: 005-sliders\n###"},{"app_name":"006-tabsets","status":"pass","result":"\n###\nRunning tests for app: 006-tabsets\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n⠹ |   5     8 | mytest                                                          \n⠼ |   5    10 | mytest                                                          \n⠴ |   6    10 | mytest                                                          \n⠧ |   6    12 | mytest                                                          \n⠇ |   7    12 | mytest                                                          \n⠋ |   7    14 | mytest                                                          \n⠙ |   8    14 | mytest                                                          \n⠸ |   8    16 | mytest                                                          \n⠼ |   9    16 | mytest                                                          \n⠦ |   9    18 | mytest                                                          \n✔ |   9    18 | mytest [6.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/009_.png'\n\nWarning ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/011_.png'\n\nWarning ('test-mytest.R:31:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/013_.png'\n\nWarning ('test-mytest.R:34:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/015_.png'\n\nWarning ('test-mytest.R:37:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/017_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.2 s\n\n[ FAIL 0 | WARN 9 | SKIP 0 | PASS 18 ]\n\nStopping tests for app: 006-tabsets\n###"},{"app_name":"007-widgets","status":"fail","result":"\n###\nRunning tests for app: 007-widgets\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 4       4 | mytest                                                          \n✖ | 4       4 | mytest [4.1s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:29:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:29:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.2 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:29:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:29:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 007-widgets\n###"},{"app_name":"008-html","status":"pass","result":"\n###\nRunning tests for app: 008-html\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     2 | mytest [2.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.4 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nYou rock!\n\nStopping tests for app: 008-html\n###"},{"app_name":"009-upload","status":"pass","result":"\n###\nRunning tests for app: 009-upload\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [4.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.3 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 009-upload\n###"},{"app_name":"010-download","status":"fail","result":"\n###\nRunning tests for app: 010-download\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠼ | 1       4 | mytest                                                          \n⠴ | 2       4 | mytest                                                          \n⠦ | 2       5 | mytest                                                          \n⠧ | 3       5 | mytest                                                          \n✖ | 3       7 | mytest [3.8s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/007.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.9 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/007.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 3 | WARN 0 | SKIP 0 | PASS 7 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 010-download\n###"},{"app_name":"012-datatables","status":"pass","result":"\n###\nRunning tests for app: 012-datatables\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n✔ |   4     8 | mytest [7.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:43:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:47:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.2 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\n🧿 Your tests look perfect 🧿\n\nStopping tests for app: 012-datatables\n###"},{"app_name":"013-selectize","status":"fail","result":"\n###\nRunning tests for app: 013-selectize\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠙ |   1     1 | mytest                                                          \n⠹ | 1 1     1 | mytest                                                          \n⠸ | 1 1     2 | mytest                                                          \n⠼ | 2 1     2 | mytest                                                          \n⠴ | 2 1     3 | mytest                                                          \n⠦ | 3 1     3 | mytest                                                          \n✖ | 3 1     3 | mytest [3.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:4:3'): Migrated shinytest test: mytest.R\n! Shiny inputs and outputs should have unique HTML id values.\nℹ The following HTML id values are not unique:\n• github\nℹ Do you have a Shiny input and output value with the same name?\nBacktrace:\n    ▆\n 1. └─AppDriver$new(...) at test-mytest.R:4:2\n 2.   └─shinytest2 (local) initialize(...)\n 3.     └─shinytest2:::app_initialize(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─shinytest2:::app_initialize_(self, private, ..., view = view)\n 6.         └─shinytest2:::app_check_unique_names(self, private)\n 7.           └─shinytest2:::app_warn(...)\n\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.0 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 3 | WARN 1 | SKIP 0 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 013-selectize\n###"},{"app_name":"014-onflushed","status":"pass","result":"\n###\nRunning tests for app: 014-onflushed\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [5.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.2 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 014-onflushed\n###"},{"app_name":"016-knitr-pdf","status":"fail","result":"\n###\nRunning tests for app: 016-knitr-pdf\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n✖ | 2       4 | mytest [3.7s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.8 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 2 | WARN 0 | SKIP 0 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 016-knitr-pdf\n###"},{"app_name":"017-select-vs-selectize","status":"fail","result":"\n###\nRunning tests for app: 017-select-vs-selectize\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n⠸ | 1       3 | mytest                                                          \n✖ | 1       3 | mytest [3.9s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.9 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 1 | WARN 0 | SKIP 0 | PASS 3 ]\n\nNo one gets it right on their first try\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 017-select-vs-selectize\n###"},{"app_name":"018-datatable-options","status":"pass","result":"\n###\nRunning tests for app: 018-datatable-options\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n⠹ |   5     8 | mytest                                                          \n⠼ |   5    10 | mytest                                                          \n✔ |   5    10 | mytest [6.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n\nWarning ('test-mytest.R:28:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/009_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.8 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 10 ]\n\nStopping tests for app: 018-datatable-options\n###"},{"app_name":"019-mathjax","status":"pass","result":"\n###\nRunning tests for app: 019-mathjax\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [8.0s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 8.1 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 019-mathjax\n###"},{"app_name":"020-knit-html","status":"fail","result":"\n###\nRunning tests for app: 020-knit-html\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n✖ | 2       2 | mytest [8.4s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 8.5 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 2 | WARN 0 | SKIP 0 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 020-knit-html\n###"},{"app_name":"021-selectize-plot","status":"fail","result":"\n###\nRunning tests for app: 021-selectize-plot\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ | 1       0 | mytest                                                          \n⠙ | 2       0 | mytest                                                          \n⠹ | 3       0 | mytest                                                          \n✖ | 3       0 | mytest [7.2s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:17:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nError in `app_wait_for_value(self, private, input = input, output = output, \n    export = export, ..., ignore = ignore, timeout = timeout, \n    interval = interval)`: timeout reached when waiting for output: parcoord\nBacktrace:\n    ▆\n 1. └─app$wait_for_value(output = \"parcoord\", ignore = list(init_parcoord)) at test-mytest.R:22:2\n 2.   └─shinytest2:::app_wait_for_value(...)\n 3.     └─shinytest2:::app_abort(...)\n 4.       └─rlang::abort(..., app = self, call = call)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.4 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:17:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nError in `app_wait_for_value(self, private, input = input, output = output, \n    export = export, ..., ignore = ignore, timeout = timeout, \n    interval = interval)`: timeout reached when waiting for output: parcoord\nBacktrace:\n    ▆\n 1. └─app$wait_for_value(output = \"parcoord\", ignore = list(init_parcoord)) at test-mytest.R:22:2\n 2.   └─shinytest2:::app_wait_for_value(...)\n 3.     └─shinytest2:::app_abort(...)\n 4.       └─rlang::abort(..., app = self, call = call)\n\n[ FAIL 3 | WARN 0 | SKIP 0 | PASS 0 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 021-selectize-plot\n###"},{"app_name":"022-unicode-chinese","status":"fail","result":"\n###\nRunning tests for app: 022-unicode-chinese\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ | 1       0 | mytest                                                          \n⠙ | 2       0 | mytest                                                          \n⠹ | 3       0 | mytest                                                          \n⠸ | 4       0 | mytest                                                          \n⠼ | 5       0 | mytest                                                          \n⠴ | 6       0 | mytest                                                          \n⠦ | 6       1 | mytest                                                          \n⠧ | 7       1 | mytest                                                          \n⠇ | 7       2 | mytest                                                          \n⠏ | 8       2 | mytest                                                          \n✖ | 8       2 | mytest [4.6s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/010.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:26:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 022-unicode-chinese\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:47140/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 7389\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x563b154b94e3 <unknown>\npxjava - #1 0x563b151e8c76 <unknown>\npxjava - #2 0x563b1521604a <unknown>\npxjava - #3 0x563b152114a1 <unknown>\npxjava - #4 0x563b1520e029 <unknown>\npxjava - #5 0x563b1524cccc <unknown>\npxjava - #6 0x563b1524c47f <unknown>\npxjava - #7 0x563b15243de3 <unknown>\npxjava - #8 0x563b152192dd <unknown>\npxjava - #9 0x563b1521a34e <unknown>\npxjava - #10 0x563b154793e4 <unknown>\npxjava - #11 0x563b1547d3d7 <unknown>\npxjava - #12 0x563b15487b20 <unknown>\npxjava - #13 0x563b1547e023 <unknown>\npxjava - #14 0x563b1544c1aa <unknown>\npxjava - #15 0x563b154a26b8 <unknown>\npxjava - #16 0x563b154a2847 <unknown>\npxjava - #17 0x563b154b2243 <unknown>\npxjava - #18 0x7f33cad57609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 022-unicode-chinese\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/022-unicode-chinese\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f4d8834b0\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f4d8834b0\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x560ab3746418> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 022-unicode-chinese - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/022-unicode-chinese - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.9 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/010.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:26:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError (???): 022-unicode-chinese - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/022-unicode-chinese - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 9 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 022-unicode-chinese\n###"},{"app_name":"023-optgroup-server","status":"fail","result":"\n###\nRunning tests for app: 023-optgroup-server\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n✖ | 3       3 | mytest [5.3s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:9:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:26:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.4 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:9:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:26:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 3 | WARN 0 | SKIP 0 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 023-optgroup-server\n###"},{"app_name":"024-optgroup-selectize","status":"fail","result":"\n###\nRunning tests for app: 024-optgroup-selectize\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ | 1       0 | mytest                                                          \n⠙ | 2       0 | mytest                                                          \n⠹ | 3       0 | mytest                                                          \n⠸ | 4       0 | mytest                                                          \n⠼ | 5       0 | mytest                                                          \n⠴ | 6       0 | mytest                                                          \n✖ | 6       0 | mytest [3.5s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.6 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 6 | WARN 0 | SKIP 0 | PASS 0 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 024-optgroup-selectize\n###"},{"app_name":"025-loop-ui","status":"fail","result":"\n###\nRunning tests for app: 025-loop-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n✖ | 2       2 | mytest [3.3s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 025-loop-ui\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:9865/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 29712\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5597e8e344e3 <unknown>\npxjava - #1 0x5597e8b63c76 <unknown>\npxjava - #2 0x5597e8b9104a <unknown>\npxjava - #3 0x5597e8b8c4a1 <unknown>\npxjava - #4 0x5597e8b89029 <unknown>\npxjava - #5 0x5597e8bc7ccc <unknown>\npxjava - #6 0x5597e8bc747f <unknown>\npxjava - #7 0x5597e8bbede3 <unknown>\npxjava - #8 0x5597e8b942dd <unknown>\npxjava - #9 0x5597e8b9534e <unknown>\npxjava - #10 0x5597e8df43e4 <unknown>\npxjava - #11 0x5597e8df83d7 <unknown>\npxjava - #12 0x5597e8e02b20 <unknown>\npxjava - #13 0x5597e8df9023 <unknown>\npxjava - #14 0x5597e8dc71aa <unknown>\npxjava - #15 0x5597e8e1d6b8 <unknown>\npxjava - #16 0x5597e8e1d847 <unknown>\npxjava - #17 0x5597e8e2d243 <unknown>\npxjava - #18 0x7f5f5efc8609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 025-loop-ui\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/025-loop-ui\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f2977b6d9\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f2977b6d9\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x555e6e4c9688> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 025-loop-ui - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/025-loop-ui - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError (???): 025-loop-ui - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/025-loop-ui - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 3 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 025-loop-ui\n###"},{"app_name":"026-shiny-inline","status":"fail","result":"\n###\nRunning tests for app: 026-shiny-inline\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ | 1       0 | mytest                                                          \n⠙ | 2       0 | mytest                                                          \n⠹ | 3       0 | mytest                                                          \n⠸ | 4       0 | mytest                                                          \n⠼ | 5       0 | mytest                                                          \n⠴ | 6       0 | mytest                                                          \n✖ | 6       0 | mytest [4.8s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:17:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:24:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:24:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:25:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:25:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.9 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:17:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:24:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:24:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:25:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:25:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 6 | WARN 0 | SKIP 0 | PASS 0 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 026-shiny-inline\n###"},{"app_name":"027-absolutely-positioned-panels","status":"pass","result":"\n###\nRunning tests for app: 027-absolutely-positioned-panels\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [3.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.7 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 027-absolutely-positioned-panels\n###"},{"app_name":"032-client-data-and-query-string","status":"fail","result":"\n###\nRunning tests for app: 032-client-data-and-query-string\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [2.5s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 032-client-data-and-query-string\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:19970/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 19168\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x556e9ff114e3 <unknown>\npxjava - #1 0x556e9fc40c76 <unknown>\npxjava - #2 0x556e9fc6e04a <unknown>\npxjava - #3 0x556e9fc694a1 <unknown>\npxjava - #4 0x556e9fc66029 <unknown>\npxjava - #5 0x556e9fca4ccc <unknown>\npxjava - #6 0x556e9fca447f <unknown>\npxjava - #7 0x556e9fc9bde3 <unknown>\npxjava - #8 0x556e9fc712dd <unknown>\npxjava - #9 0x556e9fc7234e <unknown>\npxjava - #10 0x556e9fed13e4 <unknown>\npxjava - #11 0x556e9fed53d7 <unknown>\npxjava - #12 0x556e9fedfb20 <unknown>\npxjava - #13 0x556e9fed6023 <unknown>\npxjava - #14 0x556e9fea41aa <unknown>\npxjava - #15 0x556e9fefa6b8 <unknown>\npxjava - #16 0x556e9fefa847 <unknown>\npxjava - #17 0x556e9ff0a243 <unknown>\npxjava - #18 0x7fd9128e4609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 032-client-data-and-query-string\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/032-client-data-and-query-string\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fd066e6\"),      list(envir = .GlobalEnv, quote =| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fd066e6\"), list(envir = .GlobalEnv,      quote = TRUE)),| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55f0122bc298> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 032-client-data-and-query-string - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/032-client-data-and-query-string - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 032-client-data-and-query-string - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/032-client-data-and-query-string - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 032-client-data-and-query-string\n###"},{"app_name":"033-conditionalpanel-demo","status":"pass","result":"\n###\nRunning tests for app: 033-conditionalpanel-demo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [3.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.4 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 033-conditionalpanel-demo\n###"},{"app_name":"037-date-and-date-range","status":"pass","result":"\n###\nRunning tests for app: 037-date-and-date-range\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [3.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.4 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 037-date-and-date-range\n###"},{"app_name":"039-download-file","status":"fail","result":"\n###\nRunning tests for app: 039-download-file\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠸ | 1       3 | mytest                                                          \n⠼ | 1       4 | mytest                                                          \n⠴ | 2       4 | mytest                                                          \n✖ | 2       6 | mytest [3.4s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.5 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 2 | WARN 0 | SKIP 0 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 039-download-file\n###"},{"app_name":"041-dynamic-ui","status":"fail","result":"\n###\nRunning tests for app: 041-dynamic-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 4       4 | mytest                                                          \n⠇ | 4       5 | mytest                                                          \n⠏ | 5       5 | mytest                                                          \n⠋ | 5       6 | mytest                                                          \n⠙ | 6       6 | mytest                                                          \n⠹ | 6       7 | mytest                                                          \n⠸ | 7       7 | mytest                                                          \n⠼ | 8       7 | mytest                                                          \n⠴ | 9       7 | mytest                                                          \n⠦ | 10       7 | mytest                                                         \n⠧ | 11       7 | mytest                                                         \n⠇ | 12       7 | mytest                                                         \n⠏ | 13       7 | mytest                                                         \n⠋ | 13       8 | mytest                                                         \n⠙ | 14       8 | mytest                                                         \n⠹ | 14       9 | mytest                                                         \n⠸ | 15       9 | mytest                                                         \n✖ | 15       9 | mytest [9.8s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:9:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:26:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:31:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/010.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:31:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:36:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/012.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:36:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:41:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/014.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:41:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:45:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/015.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:45:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:46:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/016.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:46:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:49:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/017.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:49:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:50:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/018.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:50:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:54:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/019.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:54:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:55:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/020.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:55:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:62:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/022.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:62:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:67:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/024.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:67:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\nMaximum number of failures exceeded; quitting at end of file.\nℹ Increase this number with (e.g.) `testthat::set_max_fails(Inf)` \n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:9:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:26:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:31:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/010.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:31:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:36:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/012.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:36:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:41:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/014.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:41:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:45:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/015.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:45:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:46:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/016.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:46:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:49:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/017.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:49:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:50:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/018.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:50:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:54:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/019.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:54:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:55:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/020.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:55:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:62:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/022.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:62:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:67:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/024.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:67:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 15 | WARN 0 | SKIP 0 | PASS 9 ]\n══ Terminated early ════════════════════════════════════════════════════════════\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 041-dynamic-ui\n###"},{"app_name":"047-image-output","status":"pass","result":"\n###\nRunning tests for app: 047-image-output\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [3.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.6 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 047-image-output\n###"},{"app_name":"048-including-html-text-and-markdown-files","status":"pass","result":"\n###\nRunning tests for app: 048-including-html-text-and-markdown-files\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     2 | mytest [2.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.3 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 048-including-html-text-and-markdown-files\n###"},{"app_name":"050-kmeans-example","status":"fail","result":"\n###\nRunning tests for app: 050-kmeans-example\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n✖ | 2       2 | mytest [3.5s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | server                                                          \n⠋ |         1 | server                                                          \n✔ |         3 | server\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.8 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 2 | WARN 0 | SKIP 0 | PASS 5 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 050-kmeans-example\n###"},{"app_name":"051-movie-explorer","status":"pass","result":"\n###\nRunning tests for app: 051-movie-explorer\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n✔ |     1   0 | mytest\n\n══ Results ═════════════════════════════════════════════════════════════════════\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Can not consistently pass on all builds...there some sort of timing issue\n  where shinytest doesn't know how long to wait before taking a snapshot (1):\n  'test-mytest.R:5:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 051-movie-explorer\n###"},{"app_name":"054-nvd3-line-chart-output","status":"pass","result":"\n###\nRunning tests for app: 054-nvd3-line-chart-output\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [9.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.9 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 054-nvd3-line-chart-output\n###"},{"app_name":"060-retirement-simulation","status":"pass","result":"\n###\nRunning tests for app: 060-retirement-simulation\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [5.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:30:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.4 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 060-retirement-simulation\n###"},{"app_name":"061-server-to-client-custom-messages","status":"pass","result":"\n###\nRunning tests for app: 061-server-to-client-custom-messages\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [2.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.8 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nYou rock!\n\nStopping tests for app: 061-server-to-client-custom-messages\n###"},{"app_name":"062-submitbutton-demo","status":"pass","result":"\n###\nRunning tests for app: 062-submitbutton-demo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [3.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:27:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.4 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 062-submitbutton-demo\n###"},{"app_name":"063-superzip-example","status":"fail","result":"\n###\nRunning tests for app: 063-superzip-example\n\nLoading required package: shiny\nLoading required package: testthat\n\nAttaching package: ‘dplyr’\n\nThe following object is masked from ‘package:testthat’:\n\n    matches\n\nThe following objects are masked from ‘package:stats’:\n\n    filter, lag\n\nThe following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 4       4 | mytest                                                          \n✖ | 4       4 | mytest [16.5s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:29:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:29:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:41:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:41:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:52:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:52:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:67:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:67:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 16.6 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:29:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:29:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:41:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:41:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:52:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:52:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:67:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:67:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 063-superzip-example\n###"},{"app_name":"065-update-input-demo","status":"fail","result":"\n###\nRunning tests for app: 065-update-input-demo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ | 1       0 | mytest                                                          \n⠙ | 2       0 | mytest                                                          \n⠹ | 3       0 | mytest                                                          \n⠸ | 4       0 | mytest                                                          \n✖ | 4       0 | mytest [3.3s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:9:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.4 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:9:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:12:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 0 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 065-update-input-demo\n###"},{"app_name":"066-upload-file","status":"pass","result":"\n###\nRunning tests for app: 066-upload-file\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     2 | mytest [3.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.4 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\n🌈 Your tests are over the rainbow 🌈\n\nStopping tests for app: 066-upload-file\n###"},{"app_name":"081-widgets-gallery","status":"pass","result":"\n###\nRunning tests for app: 081-widgets-gallery\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n✔ |   4     8 | mytest [9.0s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:40:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:61:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.1 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 081-widgets-gallery\n###"},{"app_name":"082-word-cloud","status":"fail","result":"\n###\nRunning tests for app: 082-word-cloud\n\nLoading required package: shiny\nLoading required package: testthat\nLoading required package: NLP\nLoading required package: RColorBrewer\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 4       4 | mytest                                                          \n✖ | 4       4 | mytest [7.2s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:28:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:28:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.3 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:28:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:28:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 082-word-cloud\n###"},{"app_name":"108-module-output","status":"pass","result":"\n###\nRunning tests for app: 108-module-output\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     2 | mytest [4.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.3 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 108-module-output\n###"},{"app_name":"109-render-table","status":"fail","result":"\n###\nRunning tests for app: 109-render-table\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ | 1       0 | mytest                                                          \n⠙ | 2       0 | mytest                                                          \n⠹ | 3       0 | mytest                                                          \n⠸ | 4       0 | mytest                                                          \n⠼ | 5       0 | mytest                                                          \n⠴ | 6       0 | mytest                                                          \n⠦ | 7       0 | mytest                                                          \n⠧ | 8       0 | mytest                                                          \n✖ | 8       0 | mytest [4.5s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:17:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/007.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:22:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.7 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:16:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:17:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/007.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:22:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 8 | WARN 0 | SKIP 0 | PASS 0 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 109-render-table\n###\nWarning messages:\n1: In readLines(f, n) :\n  incomplete final line found on '/home/runner/work/shinycoreci/shinycoreci/inst/apps/109-render-table/DESCRIPTION'\n2: In readLines(f, n) :\n  incomplete final line found on '/home/runner/work/shinycoreci/shinycoreci/inst/apps/109-render-table/DESCRIPTION'\n3: In readLines(f, n) :\n  incomplete final line found on '/home/runner/work/shinycoreci/shinycoreci/inst/apps/109-render-table/DESCRIPTION'\n4: In readLines(f, n) :\n  incomplete final line found on '/home/runner/work/shinycoreci/shinycoreci/inst/apps/109-render-table/DESCRIPTION'"},{"app_name":"110-error-sanitization","status":"pass","result":"\n###\nRunning tests for app: 110-error-sanitization\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n✔ |   4     8 | mytest [3.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.9 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 110-error-sanitization\n###"},{"app_name":"111-insert-ui","status":"pass","result":"\n###\nRunning tests for app: 111-insert-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [3.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.7 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 111-insert-ui\n###"},{"app_name":"112-generate-report","status":"pass","result":"\n###\nRunning tests for app: 112-generate-report\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠼ |   1     4 | mytest                                                          \n✔ |   1     4 | mytest [3.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.1 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 112-generate-report\n###"},{"app_name":"114-modal-dialog","status":"fail","result":"\n###\nRunning tests for app: 114-modal-dialog\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          ! Maximum screenshot convolution value `51.1764705882353` > `2` (threshold).\n• `old`:/home/runner/work/shinycoreci/shinycoreci/inst/apps/114-modal-dialog/tests/testthat/_snaps/linux-4.2/mytest/002.png\n• `new`:/tmp/RtmptOi8nh/st2-ad6d1c4d4446/002.png\nℹ (To remove this message, increase `threshold`, or set `quiet = TRUE`)\n\n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          ! Maximum screenshot convolution value `51.1764705882353` > `2` (threshold).\n• `old`:/home/runner/work/shinycoreci/shinycoreci/inst/apps/114-modal-dialog/tests/testthat/_snaps/linux-4.2/mytest/004.png\n• `new`:/tmp/RtmptOi8nh/st2-ad6d1c4d4446/004.png\nℹ (To remove this message, increase `threshold`, or set `quiet = TRUE`)\n\n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          ! Maximum screenshot convolution value `51.1764705882353` > `2` (threshold).\n• `old`:/home/runner/work/shinycoreci/shinycoreci/inst/apps/114-modal-dialog/tests/testthat/_snaps/linux-4.2/mytest/006.png\n• `new`:/tmp/RtmptOi8nh/st2-ad6d1c4d4446/006.png\nℹ (To remove this message, increase `threshold`, or set `quiet = TRUE`)\n\n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 3       5 | mytest                                                          \n✖ | 3       5 | mytest [6.0s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot(threshold = 2) at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot(threshold = 2) at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot(threshold = 2) at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.0 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot(threshold = 2) at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot(threshold = 2) at test-mytest.R:15:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot(threshold = 2) at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 3 | WARN 0 | SKIP 0 | PASS 5 ]\n\nNo one gets it right on their first try\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 114-modal-dialog\n###"},{"app_name":"115-remove-modal","status":"pass","result":"\n###\nRunning tests for app: 115-remove-modal\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [4.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.7 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 115-remove-modal\n###"},{"app_name":"117-shinythemes","status":"pass","result":"\n###\nRunning tests for app: 117-shinythemes\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n✔ |   4     8 | mytest [9.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.9 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 117-shinythemes\n###"},{"app_name":"118-highcharter-births","status":"fail","result":"\n###\nRunning tests for app: 118-highcharter-births\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n✖ | 2       2 | mytest [9.1s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:21:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.2 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:21:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 2 | WARN 0 | SKIP 0 | PASS 2 ]\n\nFrustration is a natural part of programming :)\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 118-highcharter-births\n###"},{"app_name":"119-namespaced-conditionalpanel-demo","status":"pass","result":"\n###\nRunning tests for app: 119-namespaced-conditionalpanel-demo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [5.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | server                                                          \n⠋ |         1 | server                                                          \n✔ |         3 | server\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.5 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 9 ]\n\nStopping tests for app: 119-namespaced-conditionalpanel-demo\n###"},{"app_name":"121-async-timer","status":"fail","result":"\n###\nRunning tests for app: 121-async-timer\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 121-async-timer\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:9947/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 23672\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5589d12324e3 <unknown>\npxjava - #1 0x5589d0f61c76 <unknown>\npxjava - #2 0x5589d0f8f04a <unknown>\npxjava - #3 0x5589d0f8a4a1 <unknown>\npxjava - #4 0x5589d0f87029 <unknown>\npxjava - #5 0x5589d0fc5ccc <unknown>\npxjava - #6 0x5589d0fc547f <unknown>\npxjava - #7 0x5589d0fbcde3 <unknown>\npxjava - #8 0x5589d0f922dd <unknown>\npxjava - #9 0x5589d0f9334e <unknown>\npxjava - #10 0x5589d11f23e4 <unknown>\npxjava - #11 0x5589d11f63d7 <unknown>\npxjava - #12 0x5589d1200b20 <unknown>\npxjava - #13 0x5589d11f7023 <unknown>\npxjava - #14 0x5589d11c51aa <unknown>\npxjava - #15 0x5589d121b6b8 <unknown>\npxjava - #16 0x5589d121b847 <unknown>\npxjava - #17 0x5589d122b243 <unknown>\npxjava - #18 0x7f3c40592609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 121-async-timer\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/121-async-timer\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f30a0712d\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f30a0712d\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55a6ea0cced0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 121-async-timer - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/121-async-timer - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 121-async-timer - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/121-async-timer - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 121-async-timer\n###"},{"app_name":"122-async-outputs","status":"fail","result":"\n###\nRunning tests for app: 122-async-outputs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n✔ |        20 | mytest [7.8s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 122-async-outputs\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:41049/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 10755\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x559e8fdb84e3 <unknown>\npxjava - #1 0x559e8fae7c76 <unknown>\npxjava - #2 0x559e8fb1504a <unknown>\npxjava - #3 0x559e8fb104a1 <unknown>\npxjava - #4 0x559e8fb0d029 <unknown>\npxjava - #5 0x559e8fb4bccc <unknown>\npxjava - #6 0x559e8fb4b47f <unknown>\npxjava - #7 0x559e8fb42de3 <unknown>\npxjava - #8 0x559e8fb182dd <unknown>\npxjava - #9 0x559e8fb1934e <unknown>\npxjava - #10 0x559e8fd783e4 <unknown>\npxjava - #11 0x559e8fd7c3d7 <unknown>\npxjava - #12 0x559e8fd86b20 <unknown>\npxjava - #13 0x559e8fd7d023 <unknown>\npxjava - #14 0x559e8fd4b1aa <unknown>\npxjava - #15 0x559e8fda16b8 <unknown>\npxjava - #16 0x559e8fda1847 <unknown>\npxjava - #17 0x559e8fdb1243 <unknown>\npxjava - #18 0x7f960f5a8609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 122-async-outputs\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/122-async-outputs\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6ff1b2de\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6ff1b2de\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5641bcc1fdc0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 122-async-outputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/122-async-outputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 17.9 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 122-async-outputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/122-async-outputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 22 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 122-async-outputs\n###"},{"app_name":"123-async-renderprint","status":"fail","result":"\n###\nRunning tests for app: 123-async-renderprint\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [4.1s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 123-async-renderprint\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:10913/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 31017\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55a6f1a524e3 <unknown>\npxjava - #1 0x55a6f1781c76 <unknown>\npxjava - #2 0x55a6f17af04a <unknown>\npxjava - #3 0x55a6f17aa4a1 <unknown>\npxjava - #4 0x55a6f17a7029 <unknown>\npxjava - #5 0x55a6f17e5ccc <unknown>\npxjava - #6 0x55a6f17e547f <unknown>\npxjava - #7 0x55a6f17dcde3 <unknown>\npxjava - #8 0x55a6f17b22dd <unknown>\npxjava - #9 0x55a6f17b334e <unknown>\npxjava - #10 0x55a6f1a123e4 <unknown>\npxjava - #11 0x55a6f1a163d7 <unknown>\npxjava - #12 0x55a6f1a20b20 <unknown>\npxjava - #13 0x55a6f1a17023 <unknown>\npxjava - #14 0x55a6f19e51aa <unknown>\npxjava - #15 0x55a6f1a3b6b8 <unknown>\npxjava - #16 0x55a6f1a3b847 <unknown>\npxjava - #17 0x55a6f1a4b243 <unknown>\npxjava - #18 0x7f24d8489609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 123-async-renderprint\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/123-async-renderprint\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f16adfde9\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f16adfde9\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x560ea3147fb0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 123-async-renderprint - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/123-async-renderprint - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 123-async-renderprint - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/123-async-renderprint - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 123-async-renderprint\n###"},{"app_name":"124-async-download","status":"fail","result":"\n###\nRunning tests for app: 124-async-download\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n✔ |     1   0 | mytest\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 124-async-download\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:15266/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 8092\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5618de5bf4e3 <unknown>\npxjava - #1 0x5618de2eec76 <unknown>\npxjava - #2 0x5618de31c04a <unknown>\npxjava - #3 0x5618de3174a1 <unknown>\npxjava - #4 0x5618de314029 <unknown>\npxjava - #5 0x5618de352ccc <unknown>\npxjava - #6 0x5618de35247f <unknown>\npxjava - #7 0x5618de349de3 <unknown>\npxjava - #8 0x5618de31f2dd <unknown>\npxjava - #9 0x5618de32034e <unknown>\npxjava - #10 0x5618de57f3e4 <unknown>\npxjava - #11 0x5618de5833d7 <unknown>\npxjava - #12 0x5618de58db20 <unknown>\npxjava - #13 0x5618de584023 <unknown>\npxjava - #14 0x5618de5521aa <unknown>\npxjava - #15 0x5618de5a86b8 <unknown>\npxjava - #16 0x5618de5a8847 <unknown>\npxjava - #17 0x5618de5b8243 <unknown>\npxjava - #18 0x7f0d9bd27609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 124-async-download\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/124-async-download\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fd834c30\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fd834c30\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5635e9d30c00> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 124-async-download - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/124-async-download - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (3) ───────────────────────────────────────────────────────────\n• (LEGACY) This app has issues about a URL being loaded. Testing manually\n  instead. (1): 'test-mytest.R:4:3'\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 124-async-download - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/124-async-download - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 3 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 124-async-download\n###"},{"app_name":"125-async-req","status":"fail","result":"\n###\nRunning tests for app: 125-async-req\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n⠸ |         4 | mytest                                                          \n✔ |         4 | mytest [4.8s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 125-async-req\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:27593/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 24191\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55ac806d64e3 <unknown>\npxjava - #1 0x55ac80405c76 <unknown>\npxjava - #2 0x55ac8043304a <unknown>\npxjava - #3 0x55ac8042e4a1 <unknown>\npxjava - #4 0x55ac8042b029 <unknown>\npxjava - #5 0x55ac80469ccc <unknown>\npxjava - #6 0x55ac8046947f <unknown>\npxjava - #7 0x55ac80460de3 <unknown>\npxjava - #8 0x55ac804362dd <unknown>\npxjava - #9 0x55ac8043734e <unknown>\npxjava - #10 0x55ac806963e4 <unknown>\npxjava - #11 0x55ac8069a3d7 <unknown>\npxjava - #12 0x55ac806a4b20 <unknown>\npxjava - #13 0x55ac8069b023 <unknown>\npxjava - #14 0x55ac806691aa <unknown>\npxjava - #15 0x55ac806bf6b8 <unknown>\npxjava - #16 0x55ac806bf847 <unknown>\npxjava - #17 0x55ac806cf243 <unknown>\npxjava - #18 0x7f53f996e609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 125-async-req\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/125-async-req\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f75be8130\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f75be8130\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5625492152d8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 125-async-req - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/125-async-req - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.0 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 125-async-req - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/125-async-req - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 125-async-req\n###"},{"app_name":"126-async-ticks","status":"fail","result":"\n###\nRunning tests for app: 126-async-ticks\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [3.6s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 126-async-ticks\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:29549/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 18707\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55fe9609c4e3 <unknown>\npxjava - #1 0x55fe95dcbc76 <unknown>\npxjava - #2 0x55fe95df904a <unknown>\npxjava - #3 0x55fe95df44a1 <unknown>\npxjava - #4 0x55fe95df1029 <unknown>\npxjava - #5 0x55fe95e2fccc <unknown>\npxjava - #6 0x55fe95e2f47f <unknown>\npxjava - #7 0x55fe95e26de3 <unknown>\npxjava - #8 0x55fe95dfc2dd <unknown>\npxjava - #9 0x55fe95dfd34e <unknown>\npxjava - #10 0x55fe9605c3e4 <unknown>\npxjava - #11 0x55fe960603d7 <unknown>\npxjava - #12 0x55fe9606ab20 <unknown>\npxjava - #13 0x55fe96061023 <unknown>\npxjava - #14 0x55fe9602f1aa <unknown>\npxjava - #15 0x55fe960856b8 <unknown>\npxjava - #16 0x55fe96085847 <unknown>\npxjava - #17 0x55fe96095243 <unknown>\npxjava - #18 0x7fc0b38be609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 126-async-ticks\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/126-async-ticks\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f25990bc9\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f25990bc9\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55784ed20278> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 126-async-ticks - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/126-async-ticks - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 126-async-ticks - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/126-async-ticks - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 126-async-ticks\n###"},{"app_name":"128-plot-dim-error","status":"fail","result":"\n###\nRunning tests for app: 128-plot-dim-error\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n⠸ |         4 | mytest                                                          \n✔ |         4 | mytest [2.8s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 128-plot-dim-error\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:29006/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 15774\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x56012285a4e3 <unknown>\npxjava - #1 0x560122589c76 <unknown>\npxjava - #2 0x5601225b704a <unknown>\npxjava - #3 0x5601225b24a1 <unknown>\npxjava - #4 0x5601225af029 <unknown>\npxjava - #5 0x5601225edccc <unknown>\npxjava - #6 0x5601225ed47f <unknown>\npxjava - #7 0x5601225e4de3 <unknown>\npxjava - #8 0x5601225ba2dd <unknown>\npxjava - #9 0x5601225bb34e <unknown>\npxjava - #10 0x56012281a3e4 <unknown>\npxjava - #11 0x56012281e3d7 <unknown>\npxjava - #12 0x560122828b20 <unknown>\npxjava - #13 0x56012281f023 <unknown>\npxjava - #14 0x5601227ed1aa <unknown>\npxjava - #15 0x5601228436b8 <unknown>\npxjava - #16 0x560122843847 <unknown>\npxjava - #17 0x560122853243 <unknown>\npxjava - #18 0x7f67d6ae4609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 128-plot-dim-error\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/128-plot-dim-error\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f174e5083\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f174e5083\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5603fae81080> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 128-plot-dim-error - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/128-plot-dim-error - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.0 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 128-plot-dim-error - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/128-plot-dim-error - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 128-plot-dim-error\n###"},{"app_name":"129-async-perf","status":"fail","result":"\n###\nRunning tests for app: 129-async-perf\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 129-async-perf\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:32694/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 11617\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5620d0de34e3 <unknown>\npxjava - #1 0x5620d0b12c76 <unknown>\npxjava - #2 0x5620d0b4004a <unknown>\npxjava - #3 0x5620d0b3b4a1 <unknown>\npxjava - #4 0x5620d0b38029 <unknown>\npxjava - #5 0x5620d0b76ccc <unknown>\npxjava - #6 0x5620d0b7647f <unknown>\npxjava - #7 0x5620d0b6dde3 <unknown>\npxjava - #8 0x5620d0b432dd <unknown>\npxjava - #9 0x5620d0b4434e <unknown>\npxjava - #10 0x5620d0da33e4 <unknown>\npxjava - #11 0x5620d0da73d7 <unknown>\npxjava - #12 0x5620d0db1b20 <unknown>\npxjava - #13 0x5620d0da8023 <unknown>\npxjava - #14 0x5620d0d761aa <unknown>\npxjava - #15 0x5620d0dcc6b8 <unknown>\npxjava - #16 0x5620d0dcc847 <unknown>\npxjava - #17 0x5620d0ddc243 <unknown>\npxjava - #18 0x7fdcd36f5609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 129-async-perf\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/129-async-perf\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f77fbe5e1\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f77fbe5e1\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55ca9937aed0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 129-async-perf - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/129-async-perf - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 129-async-perf - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/129-async-perf - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 129-async-perf\n###"},{"app_name":"130-output-null","status":"fail","result":"\n###\nRunning tests for app: 130-output-null\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n⠸ |         4 | mytest                                                          \n✔ |         4 | mytest [3.0s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 130-output-null\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:5486/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 25460\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55fffb99a4e3 <unknown>\npxjava - #1 0x55fffb6c9c76 <unknown>\npxjava - #2 0x55fffb6f704a <unknown>\npxjava - #3 0x55fffb6f24a1 <unknown>\npxjava - #4 0x55fffb6ef029 <unknown>\npxjava - #5 0x55fffb72dccc <unknown>\npxjava - #6 0x55fffb72d47f <unknown>\npxjava - #7 0x55fffb724de3 <unknown>\npxjava - #8 0x55fffb6fa2dd <unknown>\npxjava - #9 0x55fffb6fb34e <unknown>\npxjava - #10 0x55fffb95a3e4 <unknown>\npxjava - #11 0x55fffb95e3d7 <unknown>\npxjava - #12 0x55fffb968b20 <unknown>\npxjava - #13 0x55fffb95f023 <unknown>\npxjava - #14 0x55fffb92d1aa <unknown>\npxjava - #15 0x55fffb9836b8 <unknown>\npxjava - #16 0x55fffb983847 <unknown>\npxjava - #17 0x55fffb993243 <unknown>\npxjava - #18 0x7f9192a15609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 130-output-null\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/130-output-null\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f856a2af\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f856a2af\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x563232be4268> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 130-output-null - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/130-output-null - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 130-output-null - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/130-output-null - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 130-output-null\n###"},{"app_name":"131-renderplot-args","status":"fail","result":"\n###\nRunning tests for app: 131-renderplot-args\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [2.4s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 131-renderplot-args\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:19095/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 32200\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x557ecf04a4e3 <unknown>\npxjava - #1 0x557eced79c76 <unknown>\npxjava - #2 0x557eceda704a <unknown>\npxjava - #3 0x557eceda24a1 <unknown>\npxjava - #4 0x557eced9f029 <unknown>\npxjava - #5 0x557ecedddccc <unknown>\npxjava - #6 0x557eceddd47f <unknown>\npxjava - #7 0x557ecedd4de3 <unknown>\npxjava - #8 0x557ecedaa2dd <unknown>\npxjava - #9 0x557ecedab34e <unknown>\npxjava - #10 0x557ecf00a3e4 <unknown>\npxjava - #11 0x557ecf00e3d7 <unknown>\npxjava - #12 0x557ecf018b20 <unknown>\npxjava - #13 0x557ecf00f023 <unknown>\npxjava - #14 0x557ecefdd1aa <unknown>\npxjava - #15 0x557ecf0336b8 <unknown>\npxjava - #16 0x557ecf033847 <unknown>\npxjava - #17 0x557ecf043243 <unknown>\npxjava - #18 0x7f5fcc8da609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 131-renderplot-args\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/131-renderplot-args\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f3f8bdcb8\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f3f8bdcb8\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fb8b81bb60> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 131-renderplot-args - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/131-renderplot-args - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 131-renderplot-args - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/131-renderplot-args - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 131-renderplot-args\n###"},{"app_name":"132-async-events","status":"fail","result":"\n###\nRunning tests for app: 132-async-events\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n⠸ |         4 | mytest                                                          \n⠼ |         5 | mytest                                                          \n⠴ |         6 | mytest                                                          \n⠦ |         7 | mytest                                                          \n⠧ |         8 | mytest                                                          \n⠇ |         9 | mytest                                                          \n⠏ |        10 | mytest                                                          \n⠋ |        11 | mytest                                                          \n⠙ |        12 | mytest                                                          \n⠹ |        13 | mytest                                                          \n⠸ |        14 | mytest                                                          \n✔ |        14 | mytest [8.0s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 132-async-events\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:39508/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 4941\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5570c8fe04e3 <unknown>\npxjava - #1 0x5570c8d0fc76 <unknown>\npxjava - #2 0x5570c8d3d04a <unknown>\npxjava - #3 0x5570c8d384a1 <unknown>\npxjava - #4 0x5570c8d35029 <unknown>\npxjava - #5 0x5570c8d73ccc <unknown>\npxjava - #6 0x5570c8d7347f <unknown>\npxjava - #7 0x5570c8d6ade3 <unknown>\npxjava - #8 0x5570c8d402dd <unknown>\npxjava - #9 0x5570c8d4134e <unknown>\npxjava - #10 0x5570c8fa03e4 <unknown>\npxjava - #11 0x5570c8fa43d7 <unknown>\npxjava - #12 0x5570c8faeb20 <unknown>\npxjava - #13 0x5570c8fa5023 <unknown>\npxjava - #14 0x5570c8f731aa <unknown>\npxjava - #15 0x5570c8fc96b8 <unknown>\npxjava - #16 0x5570c8fc9847 <unknown>\npxjava - #17 0x5570c8fd9243 <unknown>\npxjava - #18 0x7f4daeb68609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 132-async-events\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/132-async-events\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5d368683\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5d368683\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55749a168b18> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 132-async-events - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/132-async-events - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 18.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 132-async-events - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/132-async-events - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 16 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 132-async-events\n###"},{"app_name":"133-async-hold-inputs","status":"fail","result":"\n###\nRunning tests for app: 133-async-hold-inputs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n✔ |         3 | mytest [5.7s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 133-async-hold-inputs\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:24500/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 21144\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x56413575f4e3 <unknown>\npxjava - #1 0x56413548ec76 <unknown>\npxjava - #2 0x5641354bc04a <unknown>\npxjava - #3 0x5641354b74a1 <unknown>\npxjava - #4 0x5641354b4029 <unknown>\npxjava - #5 0x5641354f2ccc <unknown>\npxjava - #6 0x5641354f247f <unknown>\npxjava - #7 0x5641354e9de3 <unknown>\npxjava - #8 0x5641354bf2dd <unknown>\npxjava - #9 0x5641354c034e <unknown>\npxjava - #10 0x56413571f3e4 <unknown>\npxjava - #11 0x5641357233d7 <unknown>\npxjava - #12 0x56413572db20 <unknown>\npxjava - #13 0x564135724023 <unknown>\npxjava - #14 0x5641356f21aa <unknown>\npxjava - #15 0x5641357486b8 <unknown>\npxjava - #16 0x564135748847 <unknown>\npxjava - #17 0x564135758243 <unknown>\npxjava - #18 0x7f11c7eec609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 133-async-hold-inputs\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/133-async-hold-inputs\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f332f3ac6\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f332f3ac6\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x56144edc06c0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 133-async-hold-inputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/133-async-hold-inputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.9 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 133-async-hold-inputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/133-async-hold-inputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 5 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 133-async-hold-inputs\n###"},{"app_name":"134-async-hold-timers","status":"fail","result":"\n###\nRunning tests for app: 134-async-hold-timers\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n✔ |         1 | mytest [14.2s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 134-async-hold-timers\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:29205/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 10733\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x557bc2e834e3 <unknown>\npxjava - #1 0x557bc2bb2c76 <unknown>\npxjava - #2 0x557bc2be004a <unknown>\npxjava - #3 0x557bc2bdb4a1 <unknown>\npxjava - #4 0x557bc2bd8029 <unknown>\npxjava - #5 0x557bc2c16ccc <unknown>\npxjava - #6 0x557bc2c1647f <unknown>\npxjava - #7 0x557bc2c0dde3 <unknown>\npxjava - #8 0x557bc2be32dd <unknown>\npxjava - #9 0x557bc2be434e <unknown>\npxjava - #10 0x557bc2e433e4 <unknown>\npxjava - #11 0x557bc2e473d7 <unknown>\npxjava - #12 0x557bc2e51b20 <unknown>\npxjava - #13 0x557bc2e48023 <unknown>\npxjava - #14 0x557bc2e161aa <unknown>\npxjava - #15 0x557bc2e6c6b8 <unknown>\npxjava - #16 0x557bc2e6c847 <unknown>\npxjava - #17 0x557bc2e7c243 <unknown>\npxjava - #18 0x7f173e873609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 134-async-hold-timers\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/134-async-hold-timers\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7baabd0c\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7baabd0c\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x559e0c6d2d58> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 134-async-hold-timers - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/134-async-hold-timers - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 24.3 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 134-async-hold-timers - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/134-async-hold-timers - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 134-async-hold-timers\n###"},{"app_name":"135-bookmark-uioutput","status":"pass","result":"\n###\nRunning tests for app: 135-bookmark-uioutput\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n✔ |   4     8 | mytest [5.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.6 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 135-bookmark-uioutput\n###"},{"app_name":"136-plot-cache","status":"pass","result":"\n###\nRunning tests for app: 136-plot-cache\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [7.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.3 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 136-plot-cache\n###"},{"app_name":"137-plot-cache-key","status":"pass","result":"\n###\nRunning tests for app: 137-plot-cache-key\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n⠏ |   4     6 | mytest                                                          \n⠙ |   4     8 | mytest                                                          \n⠹ |   5     8 | mytest                                                          \n⠼ |   5    10 | mytest                                                          \n✔ |   5    10 | mytest [12.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n\nWarning ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/007_.png'\n\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/009_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.3 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 10 ]\n\nStopping tests for app: 137-plot-cache-key\n###"},{"app_name":"138-icon-fontawesome","status":"pass","result":"\n###\nRunning tests for app: 138-icon-fontawesome\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     5 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 5 ]\n\nStopping tests for app: 138-icon-fontawesome\n###"},{"app_name":"140-selectize-inputs","status":"fail","result":"\n###\nRunning tests for app: 140-selectize-inputs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ | 1       0 | mytest                                                          \n⠙ | 2       0 | mytest                                                          \n✖ | 2       0 | mytest [5.9s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 140-selectize-inputs\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:39454/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 16909\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5592e14744e3 <unknown>\npxjava - #1 0x5592e11a3c76 <unknown>\npxjava - #2 0x5592e11d104a <unknown>\npxjava - #3 0x5592e11cc4a1 <unknown>\npxjava - #4 0x5592e11c9029 <unknown>\npxjava - #5 0x5592e1207ccc <unknown>\npxjava - #6 0x5592e120747f <unknown>\npxjava - #7 0x5592e11fede3 <unknown>\npxjava - #8 0x5592e11d42dd <unknown>\npxjava - #9 0x5592e11d534e <unknown>\npxjava - #10 0x5592e14343e4 <unknown>\npxjava - #11 0x5592e14383d7 <unknown>\npxjava - #12 0x5592e1442b20 <unknown>\npxjava - #13 0x5592e1439023 <unknown>\npxjava - #14 0x5592e14071aa <unknown>\npxjava - #15 0x5592e145d6b8 <unknown>\npxjava - #16 0x5592e145d847 <unknown>\npxjava - #17 0x5592e146d243 <unknown>\npxjava - #18 0x7f1632291609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 140-selectize-inputs\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/140-selectize-inputs\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5f6fd4c1\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5f6fd4c1\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x564d4ff8c3e8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 140-selectize-inputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/140-selectize-inputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 16.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:20:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError (???): 140-selectize-inputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/140-selectize-inputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 3 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 140-selectize-inputs\n###"},{"app_name":"142-reactive-timer","status":"fail","result":"\n###\nRunning tests for app: 142-reactive-timer\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 142-reactive-timer\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:18483/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 8182\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55638cc814e3 <unknown>\npxjava - #1 0x55638c9b0c76 <unknown>\npxjava - #2 0x55638c9de04a <unknown>\npxjava - #3 0x55638c9d94a1 <unknown>\npxjava - #4 0x55638c9d6029 <unknown>\npxjava - #5 0x55638ca14ccc <unknown>\npxjava - #6 0x55638ca1447f <unknown>\npxjava - #7 0x55638ca0bde3 <unknown>\npxjava - #8 0x55638c9e12dd <unknown>\npxjava - #9 0x55638c9e234e <unknown>\npxjava - #10 0x55638cc413e4 <unknown>\npxjava - #11 0x55638cc453d7 <unknown>\npxjava - #12 0x55638cc4fb20 <unknown>\npxjava - #13 0x55638cc46023 <unknown>\npxjava - #14 0x55638cc141aa <unknown>\npxjava - #15 0x55638cc6a6b8 <unknown>\npxjava - #16 0x55638cc6a847 <unknown>\npxjava - #17 0x55638cc7a243 <unknown>\npxjava - #18 0x7fbf269cc609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 142-reactive-timer\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/142-reactive-timer\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f61152c14\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f61152c14\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5638df6f86b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 142-reactive-timer - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/142-reactive-timer - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 142-reactive-timer - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/142-reactive-timer - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 142-reactive-timer\n###"},{"app_name":"143-async-plot-caching","status":"fail","result":"\n###\nRunning tests for app: 143-async-plot-caching\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [5.1s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 143-async-plot-caching\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:3894/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 18355\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x558f25deb4e3 <unknown>\npxjava - #1 0x558f25b1ac76 <unknown>\npxjava - #2 0x558f25b4804a <unknown>\npxjava - #3 0x558f25b434a1 <unknown>\npxjava - #4 0x558f25b40029 <unknown>\npxjava - #5 0x558f25b7eccc <unknown>\npxjava - #6 0x558f25b7e47f <unknown>\npxjava - #7 0x558f25b75de3 <unknown>\npxjava - #8 0x558f25b4b2dd <unknown>\npxjava - #9 0x558f25b4c34e <unknown>\npxjava - #10 0x558f25dab3e4 <unknown>\npxjava - #11 0x558f25daf3d7 <unknown>\npxjava - #12 0x558f25db9b20 <unknown>\npxjava - #13 0x558f25db0023 <unknown>\npxjava - #14 0x558f25d7e1aa <unknown>\npxjava - #15 0x558f25dd46b8 <unknown>\npxjava - #16 0x558f25dd4847 <unknown>\npxjava - #17 0x558f25de4243 <unknown>\npxjava - #18 0x7f22d5903609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 143-async-plot-caching\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/143-async-plot-caching\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5f0147cc\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5f0147cc\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x564c54909f90> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 143-async-plot-caching - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/143-async-plot-caching - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 143-async-plot-caching - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/143-async-plot-caching - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 143-async-plot-caching\n###"},{"app_name":"145-dt-replacedata","status":"fail","result":"\n###\nRunning tests for app: 145-dt-replacedata\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 145-dt-replacedata\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:23138/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 14461\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5631259b84e3 <unknown>\npxjava - #1 0x5631256e7c76 <unknown>\npxjava - #2 0x56312571504a <unknown>\npxjava - #3 0x5631257104a1 <unknown>\npxjava - #4 0x56312570d029 <unknown>\npxjava - #5 0x56312574bccc <unknown>\npxjava - #6 0x56312574b47f <unknown>\npxjava - #7 0x563125742de3 <unknown>\npxjava - #8 0x5631257182dd <unknown>\npxjava - #9 0x56312571934e <unknown>\npxjava - #10 0x5631259783e4 <unknown>\npxjava - #11 0x56312597c3d7 <unknown>\npxjava - #12 0x563125986b20 <unknown>\npxjava - #13 0x56312597d023 <unknown>\npxjava - #14 0x56312594b1aa <unknown>\npxjava - #15 0x5631259a16b8 <unknown>\npxjava - #16 0x5631259a1847 <unknown>\npxjava - #17 0x5631259b1243 <unknown>\npxjava - #18 0x7fba07498609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 145-dt-replacedata\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/145-dt-replacedata\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f57b024a1\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f57b024a1\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55add98596b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 145-dt-replacedata - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/145-dt-replacedata - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 145-dt-replacedata - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/145-dt-replacedata - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 145-dt-replacedata\n###"},{"app_name":"147-websocket","status":"fail","result":"\n###\nRunning tests for app: 147-websocket\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 147-websocket\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:5996/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 27065\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55ab06e1a4e3 <unknown>\npxjava - #1 0x55ab06b49c76 <unknown>\npxjava - #2 0x55ab06b7704a <unknown>\npxjava - #3 0x55ab06b724a1 <unknown>\npxjava - #4 0x55ab06b6f029 <unknown>\npxjava - #5 0x55ab06badccc <unknown>\npxjava - #6 0x55ab06bad47f <unknown>\npxjava - #7 0x55ab06ba4de3 <unknown>\npxjava - #8 0x55ab06b7a2dd <unknown>\npxjava - #9 0x55ab06b7b34e <unknown>\npxjava - #10 0x55ab06dda3e4 <unknown>\npxjava - #11 0x55ab06dde3d7 <unknown>\npxjava - #12 0x55ab06de8b20 <unknown>\npxjava - #13 0x55ab06ddf023 <unknown>\npxjava - #14 0x55ab06dad1aa <unknown>\npxjava - #15 0x55ab06e036b8 <unknown>\npxjava - #16 0x55ab06e03847 <unknown>\npxjava - #17 0x55ab06e13243 <unknown>\npxjava - #18 0x7fc7e99c0609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 147-websocket\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/147-websocket\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f267c0965\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f267c0965\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x557e7b1f7ed0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 147-websocket - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/147-websocket - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 147-websocket - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/147-websocket - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\n\nDon't worry, you'll get it.\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 147-websocket\n###"},{"app_name":"148-addresourcepath-deleted","status":"fail","result":"\n###\nRunning tests for app: 148-addresourcepath-deleted\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [2.4s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 148-addresourcepath-deleted\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:2223/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 23313\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5562075c24e3 <unknown>\npxjava - #1 0x5562072f1c76 <unknown>\npxjava - #2 0x55620731f04a <unknown>\npxjava - #3 0x55620731a4a1 <unknown>\npxjava - #4 0x556207317029 <unknown>\npxjava - #5 0x556207355ccc <unknown>\npxjava - #6 0x55620735547f <unknown>\npxjava - #7 0x55620734cde3 <unknown>\npxjava - #8 0x5562073222dd <unknown>\npxjava - #9 0x55620732334e <unknown>\npxjava - #10 0x5562075823e4 <unknown>\npxjava - #11 0x5562075863d7 <unknown>\npxjava - #12 0x556207590b20 <unknown>\npxjava - #13 0x556207587023 <unknown>\npxjava - #14 0x5562075551aa <unknown>\npxjava - #15 0x5562075ab6b8 <unknown>\npxjava - #16 0x5562075ab847 <unknown>\npxjava - #17 0x5562075bb243 <unknown>\npxjava - #18 0x7f88b37d0609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 148-addresourcepath-deleted\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/148-addresourcepath-deleted\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7f5aed8\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7f5aed8\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fcd55a7a48> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 148-addresourcepath-deleted - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/148-addresourcepath-deleted - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 148-addresourcepath-deleted - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/148-addresourcepath-deleted - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 148-addresourcepath-deleted\n###"},{"app_name":"149-onRender","status":"fail","result":"\n###\nRunning tests for app: 149-onRender\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 149-onRender\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:42602/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 6631\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55efcf1824e3 <unknown>\npxjava - #1 0x55efceeb1c76 <unknown>\npxjava - #2 0x55efceedf04a <unknown>\npxjava - #3 0x55efceeda4a1 <unknown>\npxjava - #4 0x55efceed7029 <unknown>\npxjava - #5 0x55efcef15ccc <unknown>\npxjava - #6 0x55efcef1547f <unknown>\npxjava - #7 0x55efcef0cde3 <unknown>\npxjava - #8 0x55efceee22dd <unknown>\npxjava - #9 0x55efceee334e <unknown>\npxjava - #10 0x55efcf1423e4 <unknown>\npxjava - #11 0x55efcf1463d7 <unknown>\npxjava - #12 0x55efcf150b20 <unknown>\npxjava - #13 0x55efcf147023 <unknown>\npxjava - #14 0x55efcf1151aa <unknown>\npxjava - #15 0x55efcf16b6b8 <unknown>\npxjava - #16 0x55efcf16b847 <unknown>\npxjava - #17 0x55efcf17b243 <unknown>\npxjava - #18 0x7fdca7ad7609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 149-onRender\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/149-onRender\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1ff8b9c3\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1ff8b9c3\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5602c5c74ed0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 149-onRender - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/149-onRender - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 149-onRender - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/149-onRender - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 149-onRender\n###"},{"app_name":"150-networkD3-sankey","status":"pass","result":"\n###\nRunning tests for app: 150-networkD3-sankey\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [4.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.6 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 150-networkD3-sankey\n###"},{"app_name":"151-reactr-input","status":"fail","result":"\n###\nRunning tests for app: 151-reactr-input\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n⠸ |         4 | mytest                                                          \n✔ |         4 | mytest [4.4s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 151-reactr-input\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:12261/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 2045\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x561556caf4e3 <unknown>\npxjava - #1 0x5615569dec76 <unknown>\npxjava - #2 0x561556a0c04a <unknown>\npxjava - #3 0x561556a074a1 <unknown>\npxjava - #4 0x561556a04029 <unknown>\npxjava - #5 0x561556a42ccc <unknown>\npxjava - #6 0x561556a4247f <unknown>\npxjava - #7 0x561556a39de3 <unknown>\npxjava - #8 0x561556a0f2dd <unknown>\npxjava - #9 0x561556a1034e <unknown>\npxjava - #10 0x561556c6f3e4 <unknown>\npxjava - #11 0x561556c733d7 <unknown>\npxjava - #12 0x561556c7db20 <unknown>\npxjava - #13 0x561556c74023 <unknown>\npxjava - #14 0x561556c421aa <unknown>\npxjava - #15 0x561556c986b8 <unknown>\npxjava - #16 0x561556c98847 <unknown>\npxjava - #17 0x561556ca8243 <unknown>\npxjava - #18 0x7f8d44fe0609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 151-reactr-input\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/151-reactr-input\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f707d8aa\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f707d8aa\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x559001792c90> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 151-reactr-input - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/151-reactr-input - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 151-reactr-input - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/151-reactr-input - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 151-reactr-input\n###"},{"app_name":"152-set-reactivevalue","status":"fail","result":"\n###\nRunning tests for app: 152-set-reactivevalue\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 152-set-reactivevalue\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:6443/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 5936\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5595845fb4e3 <unknown>\npxjava - #1 0x55958432ac76 <unknown>\npxjava - #2 0x55958435804a <unknown>\npxjava - #3 0x5595843534a1 <unknown>\npxjava - #4 0x559584350029 <unknown>\npxjava - #5 0x55958438eccc <unknown>\npxjava - #6 0x55958438e47f <unknown>\npxjava - #7 0x559584385de3 <unknown>\npxjava - #8 0x55958435b2dd <unknown>\npxjava - #9 0x55958435c34e <unknown>\npxjava - #10 0x5595845bb3e4 <unknown>\npxjava - #11 0x5595845bf3d7 <unknown>\npxjava - #12 0x5595845c9b20 <unknown>\npxjava - #13 0x5595845c0023 <unknown>\npxjava - #14 0x55958458e1aa <unknown>\npxjava - #15 0x5595845e46b8 <unknown>\npxjava - #16 0x5595845e4847 <unknown>\npxjava - #17 0x5595845f4243 <unknown>\npxjava - #18 0x7f8924455609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 152-set-reactivevalue\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/152-set-reactivevalue\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f3d57a4bf\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f3d57a4bf\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x563aa29333a0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n⠼ | 1   2   2 | shinyjster                                                      \n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 152-set-reactivevalue - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/152-set-reactivevalue - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 152-set-reactivevalue - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/152-set-reactivevalue - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 152-set-reactivevalue\n###"},{"app_name":"153-connection-header","status":"fail","result":"\n###\nRunning tests for app: 153-connection-header\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [3.7s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 153-connection-header\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:7912/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 29143\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55cb7eb474e3 <unknown>\npxjava - #1 0x55cb7e876c76 <unknown>\npxjava - #2 0x55cb7e8a404a <unknown>\npxjava - #3 0x55cb7e89f4a1 <unknown>\npxjava - #4 0x55cb7e89c029 <unknown>\npxjava - #5 0x55cb7e8daccc <unknown>\npxjava - #6 0x55cb7e8da47f <unknown>\npxjava - #7 0x55cb7e8d1de3 <unknown>\npxjava - #8 0x55cb7e8a72dd <unknown>\npxjava - #9 0x55cb7e8a834e <unknown>\npxjava - #10 0x55cb7eb073e4 <unknown>\npxjava - #11 0x55cb7eb0b3d7 <unknown>\npxjava - #12 0x55cb7eb15b20 <unknown>\npxjava - #13 0x55cb7eb0c023 <unknown>\npxjava - #14 0x55cb7eada1aa <unknown>\npxjava - #15 0x55cb7eb306b8 <unknown>\npxjava - #16 0x55cb7eb30847 <unknown>\npxjava - #17 0x55cb7eb40243 <unknown>\npxjava - #18 0x7fd51dbd3609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 153-connection-header\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/153-connection-header\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f75cfaeb5\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f75cfaeb5\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55b6ea8a0d58> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 153-connection-header - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/153-connection-header - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.9 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 153-connection-header - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/153-connection-header - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 153-connection-header\n###"},{"app_name":"154-index-html-server-r","status":"fail","result":"\n###\nRunning tests for app: 154-index-html-server-r\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [2.3s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 154-index-html-server-r\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:9340/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 1170\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5603f66e34e3 <unknown>\npxjava - #1 0x5603f6412c76 <unknown>\npxjava - #2 0x5603f644004a <unknown>\npxjava - #3 0x5603f643b4a1 <unknown>\npxjava - #4 0x5603f6438029 <unknown>\npxjava - #5 0x5603f6476ccc <unknown>\npxjava - #6 0x5603f647647f <unknown>\npxjava - #7 0x5603f646dde3 <unknown>\npxjava - #8 0x5603f64432dd <unknown>\npxjava - #9 0x5603f644434e <unknown>\npxjava - #10 0x5603f66a33e4 <unknown>\npxjava - #11 0x5603f66a73d7 <unknown>\npxjava - #12 0x5603f66b1b20 <unknown>\npxjava - #13 0x5603f66a8023 <unknown>\npxjava - #14 0x5603f66761aa <unknown>\npxjava - #15 0x5603f66cc6b8 <unknown>\npxjava - #16 0x5603f66cc847 <unknown>\npxjava - #17 0x5603f66dc243 <unknown>\npxjava - #18 0x7fed04248609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 154-index-html-server-r\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/154-index-html-server-r\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7839915a\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7839915a\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5587f360e988> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 154-index-html-server-r - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/154-index-html-server-r - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.4 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 154-index-html-server-r - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/154-index-html-server-r - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\n\nKeep trying!\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 154-index-html-server-r\n###"},{"app_name":"155-index-html-app-r","status":"fail","result":"\n###\nRunning tests for app: 155-index-html-app-r\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [2.3s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 155-index-html-app-r\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:38211/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 1207\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x556d77fc34e3 <unknown>\npxjava - #1 0x556d77cf2c76 <unknown>\npxjava - #2 0x556d77d2004a <unknown>\npxjava - #3 0x556d77d1b4a1 <unknown>\npxjava - #4 0x556d77d18029 <unknown>\npxjava - #5 0x556d77d56ccc <unknown>\npxjava - #6 0x556d77d5647f <unknown>\npxjava - #7 0x556d77d4dde3 <unknown>\npxjava - #8 0x556d77d232dd <unknown>\npxjava - #9 0x556d77d2434e <unknown>\npxjava - #10 0x556d77f833e4 <unknown>\npxjava - #11 0x556d77f873d7 <unknown>\npxjava - #12 0x556d77f91b20 <unknown>\npxjava - #13 0x556d77f88023 <unknown>\npxjava - #14 0x556d77f561aa <unknown>\npxjava - #15 0x556d77fac6b8 <unknown>\npxjava - #16 0x556d77fac847 <unknown>\npxjava - #17 0x556d77fbc243 <unknown>\npxjava - #18 0x7fd852f4f609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 155-index-html-app-r\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/155-index-html-app-r\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f269939d\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f269939d\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55b40fda96d0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 155-index-html-app-r - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/155-index-html-app-r - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.4 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 155-index-html-app-r - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/155-index-html-app-r - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 155-index-html-app-r\n###"},{"app_name":"156-subapps","status":"fail","result":"\n###\nRunning tests for app: 156-subapps\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n✖ | 1       1 | mytest [11.5s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:9:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 156-subapps\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:27532/index.Rmd?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 6557\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x562290c0b4e3 <unknown>\npxjava - #1 0x56229093ac76 <unknown>\npxjava - #2 0x56229096804a <unknown>\npxjava - #3 0x5622909634a1 <unknown>\npxjava - #4 0x562290960029 <unknown>\npxjava - #5 0x56229099eccc <unknown>\npxjava - #6 0x56229099e47f <unknown>\npxjava - #7 0x562290995de3 <unknown>\npxjava - #8 0x56229096b2dd <unknown>\npxjava - #9 0x56229096c34e <unknown>\npxjava - #10 0x562290bcb3e4 <unknown>\npxjava - #11 0x562290bcf3d7 <unknown>\npxjava - #12 0x562290bd9b20 <unknown>\npxjava - #13 0x562290bd0023 <unknown>\npxjava - #14 0x562290b9e1aa <unknown>\npxjava - #15 0x562290bf46b8 <unknown>\npxjava - #16 0x562290bf4847 <unknown>\npxjava - #17 0x562290c04243 <unknown>\npxjava - #18 0x7f2a6470f609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 156-subapps\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/156-subapps\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f3a2144fc\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f3a2144fc\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x562a6829d2e0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language rmarkdown::run(appDir, shiny_args = list(port = port, host = host, launch.browser = FALSE))\n  .. .. ..$ : language do.call(shiny::runApp, shiny_args)\n  .. .. ..$ : language (function (appDir = getwd(), port = getOption(\"shiny.port\"), launch.browser = getOption(\"shiny.launch.browser\",  | __truncated__ ...\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 156-subapps - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/156-subapps - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 21.6 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:9:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError (???): 156-subapps - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/156-subapps - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 2 | WARN 0 | SKIP 2 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 156-subapps\n###"},{"app_name":"157-date-format","status":"fail","result":"\n###\nRunning tests for app: 157-date-format\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 157-date-format\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:21900/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 22115\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55cce76154e3 <unknown>\npxjava - #1 0x55cce7344c76 <unknown>\npxjava - #2 0x55cce737204a <unknown>\npxjava - #3 0x55cce736d4a1 <unknown>\npxjava - #4 0x55cce736a029 <unknown>\npxjava - #5 0x55cce73a8ccc <unknown>\npxjava - #6 0x55cce73a847f <unknown>\npxjava - #7 0x55cce739fde3 <unknown>\npxjava - #8 0x55cce73752dd <unknown>\npxjava - #9 0x55cce737634e <unknown>\npxjava - #10 0x55cce75d53e4 <unknown>\npxjava - #11 0x55cce75d93d7 <unknown>\npxjava - #12 0x55cce75e3b20 <unknown>\npxjava - #13 0x55cce75da023 <unknown>\npxjava - #14 0x55cce75a81aa <unknown>\npxjava - #15 0x55cce75fe6b8 <unknown>\npxjava - #16 0x55cce75fe847 <unknown>\npxjava - #17 0x55cce760e243 <unknown>\npxjava - #18 0x7f535c9da609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 157-date-format\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/157-date-format\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1533ed30\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1533ed30\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55d05e540ed0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 157-date-format - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/157-date-format - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 157-date-format - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/157-date-format - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 157-date-format\n###"},{"app_name":"158-input-labels","status":"fail","result":"\n###\nRunning tests for app: 158-input-labels\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n✖ | 2       2 | mytest [3.3s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 158-input-labels\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:2411/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 25269\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x56208d8aa4e3 <unknown>\npxjava - #1 0x56208d5d9c76 <unknown>\npxjava - #2 0x56208d60704a <unknown>\npxjava - #3 0x56208d6024a1 <unknown>\npxjava - #4 0x56208d5ff029 <unknown>\npxjava - #5 0x56208d63dccc <unknown>\npxjava - #6 0x56208d63d47f <unknown>\npxjava - #7 0x56208d634de3 <unknown>\npxjava - #8 0x56208d60a2dd <unknown>\npxjava - #9 0x56208d60b34e <unknown>\npxjava - #10 0x56208d86a3e4 <unknown>\npxjava - #11 0x56208d86e3d7 <unknown>\npxjava - #12 0x56208d878b20 <unknown>\npxjava - #13 0x56208d86f023 <unknown>\npxjava - #14 0x56208d83d1aa <unknown>\npxjava - #15 0x56208d8936b8 <unknown>\npxjava - #16 0x56208d893847 <unknown>\npxjava - #17 0x56208d8a3243 <unknown>\npxjava - #18 0x7fead4d42609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 158-input-labels\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/158-input-labels\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f748f7cb3\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f748f7cb3\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55af83065680> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 158-input-labels - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/158-input-labels - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError (???): 158-input-labels - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/158-input-labels - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 3 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 158-input-labels\n###"},{"app_name":"159-rate-policy","status":"pass","result":"\n###\nRunning tests for app: 159-rate-policy\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 159-rate-policy\n###"},{"app_name":"160-select-input","status":"fail","result":"\n###\nRunning tests for app: 160-select-input\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n✖ | 1       1 | mytest [2.5s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 160-select-input\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:36314/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 14686\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5649e832a4e3 <unknown>\npxjava - #1 0x5649e8059c76 <unknown>\npxjava - #2 0x5649e808704a <unknown>\npxjava - #3 0x5649e80824a1 <unknown>\npxjava - #4 0x5649e807f029 <unknown>\npxjava - #5 0x5649e80bdccc <unknown>\npxjava - #6 0x5649e80bd47f <unknown>\npxjava - #7 0x5649e80b4de3 <unknown>\npxjava - #8 0x5649e808a2dd <unknown>\npxjava - #9 0x5649e808b34e <unknown>\npxjava - #10 0x5649e82ea3e4 <unknown>\npxjava - #11 0x5649e82ee3d7 <unknown>\npxjava - #12 0x5649e82f8b20 <unknown>\npxjava - #13 0x5649e82ef023 <unknown>\npxjava - #14 0x5649e82bd1aa <unknown>\npxjava - #15 0x5649e83136b8 <unknown>\npxjava - #16 0x5649e8313847 <unknown>\npxjava - #17 0x5649e8323243 <unknown>\npxjava - #18 0x7fda12f04609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 160-select-input\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/160-select-input\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6e443c62\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6e443c62\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5606669a9730> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 160-select-input - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/160-select-input - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError (???): 160-select-input - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/160-select-input - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 2 | WARN 0 | SKIP 2 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 160-select-input\n###"},{"app_name":"163-select-factor","status":"fail","result":"\n###\nRunning tests for app: 163-select-factor\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n✖ | 2       2 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 163-select-factor\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:32811/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 5997\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55ab37a6b4e3 <unknown>\npxjava - #1 0x55ab3779ac76 <unknown>\npxjava - #2 0x55ab377c804a <unknown>\npxjava - #3 0x55ab377c34a1 <unknown>\npxjava - #4 0x55ab377c0029 <unknown>\npxjava - #5 0x55ab377feccc <unknown>\npxjava - #6 0x55ab377fe47f <unknown>\npxjava - #7 0x55ab377f5de3 <unknown>\npxjava - #8 0x55ab377cb2dd <unknown>\npxjava - #9 0x55ab377cc34e <unknown>\npxjava - #10 0x55ab37a2b3e4 <unknown>\npxjava - #11 0x55ab37a2f3d7 <unknown>\npxjava - #12 0x55ab37a39b20 <unknown>\npxjava - #13 0x55ab37a30023 <unknown>\npxjava - #14 0x55ab379fe1aa <unknown>\npxjava - #15 0x55ab37a546b8 <unknown>\npxjava - #16 0x55ab37a54847 <unknown>\npxjava - #17 0x55ab37a64243 <unknown>\npxjava - #18 0x7f9a0f17e609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 163-select-factor\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/163-select-factor\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f58627352\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f58627352\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55c761792e88> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 163-select-factor - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/163-select-factor - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError (???): 163-select-factor - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/163-select-factor - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 3 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 163-select-factor\n###"},{"app_name":"164-no-whitespace","status":"fail","result":"\n###\nRunning tests for app: 164-no-whitespace\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [2.3s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 164-no-whitespace\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:27975/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 22478\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55aae3e3d4e3 <unknown>\npxjava - #1 0x55aae3b6cc76 <unknown>\npxjava - #2 0x55aae3b9a04a <unknown>\npxjava - #3 0x55aae3b954a1 <unknown>\npxjava - #4 0x55aae3b92029 <unknown>\npxjava - #5 0x55aae3bd0ccc <unknown>\npxjava - #6 0x55aae3bd047f <unknown>\npxjava - #7 0x55aae3bc7de3 <unknown>\npxjava - #8 0x55aae3b9d2dd <unknown>\npxjava - #9 0x55aae3b9e34e <unknown>\npxjava - #10 0x55aae3dfd3e4 <unknown>\npxjava - #11 0x55aae3e013d7 <unknown>\npxjava - #12 0x55aae3e0bb20 <unknown>\npxjava - #13 0x55aae3e02023 <unknown>\npxjava - #14 0x55aae3dd01aa <unknown>\npxjava - #15 0x55aae3e266b8 <unknown>\npxjava - #16 0x55aae3e26847 <unknown>\npxjava - #17 0x55aae3e36243 <unknown>\npxjava - #18 0x7f067ac0c609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 164-no-whitespace\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/164-no-whitespace\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6305d407\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6305d407\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55573e17c570> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 164-no-whitespace - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/164-no-whitespace - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.4 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 164-no-whitespace - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/164-no-whitespace - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\n\nKeep trying!\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 164-no-whitespace\n###"},{"app_name":"165-trailing-comma","status":"fail","result":"\n###\nRunning tests for app: 165-trailing-comma\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [2.3s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 165-trailing-comma\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:48080/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 21146\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5560928054e3 <unknown>\npxjava - #1 0x556092534c76 <unknown>\npxjava - #2 0x55609256204a <unknown>\npxjava - #3 0x55609255d4a1 <unknown>\npxjava - #4 0x55609255a029 <unknown>\npxjava - #5 0x556092598ccc <unknown>\npxjava - #6 0x55609259847f <unknown>\npxjava - #7 0x55609258fde3 <unknown>\npxjava - #8 0x5560925652dd <unknown>\npxjava - #9 0x55609256634e <unknown>\npxjava - #10 0x5560927c53e4 <unknown>\npxjava - #11 0x5560927c93d7 <unknown>\npxjava - #12 0x5560927d3b20 <unknown>\npxjava - #13 0x5560927ca023 <unknown>\npxjava - #14 0x5560927981aa <unknown>\npxjava - #15 0x5560927ee6b8 <unknown>\npxjava - #16 0x5560927ee847 <unknown>\npxjava - #17 0x5560927fe243 <unknown>\npxjava - #18 0x7f7ce6290609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 165-trailing-comma\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/165-trailing-comma\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f24054e25\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f24054e25\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5568eb3bf7f0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 165-trailing-comma - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/165-trailing-comma - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 165-trailing-comma - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/165-trailing-comma - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 165-trailing-comma\n###"},{"app_name":"166-dynamic-hosted-tab","status":"fail","result":"\n###\nRunning tests for app: 166-dynamic-hosted-tab\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 166-dynamic-hosted-tab\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:38316/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 8329\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x564c7c2ec4e3 <unknown>\npxjava - #1 0x564c7c01bc76 <unknown>\npxjava - #2 0x564c7c04904a <unknown>\npxjava - #3 0x564c7c0444a1 <unknown>\npxjava - #4 0x564c7c041029 <unknown>\npxjava - #5 0x564c7c07fccc <unknown>\npxjava - #6 0x564c7c07f47f <unknown>\npxjava - #7 0x564c7c076de3 <unknown>\npxjava - #8 0x564c7c04c2dd <unknown>\npxjava - #9 0x564c7c04d34e <unknown>\npxjava - #10 0x564c7c2ac3e4 <unknown>\npxjava - #11 0x564c7c2b03d7 <unknown>\npxjava - #12 0x564c7c2bab20 <unknown>\npxjava - #13 0x564c7c2b1023 <unknown>\npxjava - #14 0x564c7c27f1aa <unknown>\npxjava - #15 0x564c7c2d56b8 <unknown>\npxjava - #16 0x564c7c2d5847 <unknown>\npxjava - #17 0x564c7c2e5243 <unknown>\npxjava - #18 0x7fc586ca1609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 166-dynamic-hosted-tab\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/166-dynamic-hosted-tab\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f676bd8f2\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f676bd8f2\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5560555cb6b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 166-dynamic-hosted-tab - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/166-dynamic-hosted-tab - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 166-dynamic-hosted-tab - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/166-dynamic-hosted-tab - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 166-dynamic-hosted-tab\n###"},{"app_name":"168-supporting-r-dir","status":"fail","result":"\n###\nRunning tests for app: 168-supporting-r-dir\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n⠹ |         3 | mytest                                                          \n⠸ |         4 | mytest                                                          \n✔ |         4 | mytest [2.9s]\n\n⠏ |         0 | server                                                          \n⠹ |         3 | server                                                          \n✔ |         4 | server\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 168-supporting-r-dir\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:3011/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 11019\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x560f0e55e4e3 <unknown>\npxjava - #1 0x560f0e28dc76 <unknown>\npxjava - #2 0x560f0e2bb04a <unknown>\npxjava - #3 0x560f0e2b64a1 <unknown>\npxjava - #4 0x560f0e2b3029 <unknown>\npxjava - #5 0x560f0e2f1ccc <unknown>\npxjava - #6 0x560f0e2f147f <unknown>\npxjava - #7 0x560f0e2e8de3 <unknown>\npxjava - #8 0x560f0e2be2dd <unknown>\npxjava - #9 0x560f0e2bf34e <unknown>\npxjava - #10 0x560f0e51e3e4 <unknown>\npxjava - #11 0x560f0e5223d7 <unknown>\npxjava - #12 0x560f0e52cb20 <unknown>\npxjava - #13 0x560f0e523023 <unknown>\npxjava - #14 0x560f0e4f11aa <unknown>\npxjava - #15 0x560f0e5476b8 <unknown>\npxjava - #16 0x560f0e547847 <unknown>\npxjava - #17 0x560f0e557243 <unknown>\npxjava - #18 0x7fd15b8d7609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 168-supporting-r-dir\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/168-supporting-r-dir\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fd972b34\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fd972b34\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language withr:::with_options(list(shiny.autoload.r = TRUE), {     shinyjster::testthat_shinyjster() ...\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 3 2 1 2 1 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x560631791a20> \n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 2 3 2 35 3 35 2 2\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x560631791a20> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 168-supporting-r-dir - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/168-supporting-r-dir - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 168-supporting-r-dir - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/168-supporting-r-dir - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 10 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 168-supporting-r-dir\n###"},{"app_name":"169-prerender","status":"fail","result":"\n###\nRunning tests for app: 169-prerender\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster-custom                                               shinyjster - starting app: index.Rmd\n1/6                  \n2/6 [unnamed-chunk-1]\n3/6                  \n4/6 [shinyjster]     \n5/6                  \n6/6 [unnamed-chunk-2]\n/usr/bin/pandoc +RTS -K512m -RTS index.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output index.html --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/pagebreak.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/latex-div.lua --variable bs3=TRUE --standalone --section-divs --template /home/runner/work/_temp/Library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --id-prefix section- --variable theme=bootstrap --mathjax --variable 'mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' --include-in-header /home/runner/work/_temp/Library/rmarkdown/rmd/h/shiny-header.html \nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:43143/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 8457\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55cce34ac4e3 <unknown>\npxjava - #1 0x55cce31dbc76 <unknown>\npxjava - #2 0x55cce320904a <unknown>\npxjava - #3 0x55cce32044a1 <unknown>\npxjava - #4 0x55cce3201029 <unknown>\npxjava - #5 0x55cce323fccc <unknown>\npxjava - #6 0x55cce323f47f <unknown>\npxjava - #7 0x55cce3236de3 <unknown>\npxjava - #8 0x55cce320c2dd <unknown>\npxjava - #9 0x55cce320d34e <unknown>\npxjava - #10 0x55cce346c3e4 <unknown>\npxjava - #11 0x55cce34703d7 <unknown>\npxjava - #12 0x55cce347ab20 <unknown>\npxjava - #13 0x55cce3471023 <unknown>\npxjava - #14 0x55cce343f1aa <unknown>\npxjava - #15 0x55cce34956b8 <unknown>\npxjava - #16 0x55cce3495847 <unknown>\npxjava - #17 0x55cce34a5243 <unknown>\npxjava - #18 0x7fcc8b029609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: index.Rmd\nshinyjster - starting app: 169-prerender-b\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:29494/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 8373\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55da44a574e3 <unknown>\npxjava - #1 0x55da44786c76 <unknown>\npxjava - #2 0x55da447b404a <unknown>\npxjava - #3 0x55da447af4a1 <unknown>\npxjava - #4 0x55da447ac029 <unknown>\npxjava - #5 0x55da447eaccc <unknown>\npxjava - #6 0x55da447ea47f <unknown>\npxjava - #7 0x55da447e1de3 <unknown>\npxjava - #8 0x55da447b72dd <unknown>\npxjava - #9 0x55da447b834e <unknown>\npxjava - #10 0x55da44a173e4 <unknown>\npxjava - #11 0x55da44a1b3d7 <unknown>\npxjava - #12 0x55da44a25b20 <unknown>\npxjava - #13 0x55da44a1c023 <unknown>\npxjava - #14 0x55da449ea1aa <unknown>\npxjava - #15 0x55da44a406b8 <unknown>\npxjava - #16 0x55da44a40847 <unknown>\npxjava - #17 0x55da44a50243 <unknown>\npxjava - #18 0x7f384bb06609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 169-prerender-b\n\n⠋ |         1 | shinyjster-custom                                               List of 4\n $ appDir     : chr [1:2] \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-a/index.Rmd\" \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-b\"\n $ successful : logi [1:2] FALSE FALSE\n $ returnValue:List of 2\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 92\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1752689a\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1752689a\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_that(\"169 clears registered paths between apps\", {     app <- \"../../\" ...\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 25 2 1 2 3 25\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5645ab2ea6a0> \n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::test_jster(apps = c(file.path(app, \"169-prerender-a\", \"index.Rmd\"),      file.path(app, \"169-prerende| __truncated__\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 17 3 24 3 3 3 17 24\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5645ab2ea6a0> \n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language rmarkdown::run(appDir, shiny_args = list(port = port, host = host, launch.browser = FALSE))\n  .. .. ..$ : language do.call(shiny::runApp, shiny_args)\n  .. .. ..$ : language (function (appDir = getwd(), port = getOption(\"shiny.port\"), launch.browser = getOption(\"shiny.launch.browser\",  | __truncated__ ...\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:92] 0 1 2 3 2 5 6 0 0 0 ...\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 90\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1752689a\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1752689a\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_that(\"169 clears registered paths between apps\", {     app <- \"../../\" ...\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 25 2 1 2 3 25\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5645ab2ea6a0> \n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::test_jster(apps = c(file.path(app, \"169-prerender-a\", \"index.Rmd\"),      file.path(app, \"169-prerende| __truncated__\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 17 3 24 3 3 3 17 24\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5645ab2ea6a0> \n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:90] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr [1:2] \"chrome\" \"chrome\"\n\n⠹ | 1       2 | shinyjster-custom                                               \n✖ | 1       2 | shinyjster-custom [20.2s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster-custom.R:17:3'): 169 clears registered paths between apps\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-a/index.Rmd - chrome\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-b - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...) at test-shinyjster-custom.R:17:2\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 20.2 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster-custom.R:17:3'): 169 clears registered paths between apps\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-a/index.Rmd - chrome\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-b - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...) at test-shinyjster-custom.R:17:2\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 0 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 169-prerender\n###"},{"app_name":"170-date-range-max","status":"fail","result":"\n###\nRunning tests for app: 170-date-range-max\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 170-date-range-max\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:32671/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 26536\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55a712c4f4e3 <unknown>\npxjava - #1 0x55a71297ec76 <unknown>\npxjava - #2 0x55a7129ac04a <unknown>\npxjava - #3 0x55a7129a74a1 <unknown>\npxjava - #4 0x55a7129a4029 <unknown>\npxjava - #5 0x55a7129e2ccc <unknown>\npxjava - #6 0x55a7129e247f <unknown>\npxjava - #7 0x55a7129d9de3 <unknown>\npxjava - #8 0x55a7129af2dd <unknown>\npxjava - #9 0x55a7129b034e <unknown>\npxjava - #10 0x55a712c0f3e4 <unknown>\npxjava - #11 0x55a712c133d7 <unknown>\npxjava - #12 0x55a712c1db20 <unknown>\npxjava - #13 0x55a712c14023 <unknown>\npxjava - #14 0x55a712be21aa <unknown>\npxjava - #15 0x55a712c386b8 <unknown>\npxjava - #16 0x55a712c38847 <unknown>\npxjava - #17 0x55a712c48243 <unknown>\npxjava - #18 0x7f1dddc4c609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 170-date-range-max\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/170-date-range-max\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f498d1c3c\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f498d1c3c\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5569ef6f26b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 170-date-range-max - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/170-date-range-max - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 170-date-range-max - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/170-date-range-max - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 170-date-range-max\n###"},{"app_name":"171-path-traversal","status":"fail","result":"\n###\nRunning tests for app: 171-path-traversal\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 171-path-traversal\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:34429/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 18173\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55fda20834e3 <unknown>\npxjava - #1 0x55fda1db2c76 <unknown>\npxjava - #2 0x55fda1de004a <unknown>\npxjava - #3 0x55fda1ddb4a1 <unknown>\npxjava - #4 0x55fda1dd8029 <unknown>\npxjava - #5 0x55fda1e16ccc <unknown>\npxjava - #6 0x55fda1e1647f <unknown>\npxjava - #7 0x55fda1e0dde3 <unknown>\npxjava - #8 0x55fda1de32dd <unknown>\npxjava - #9 0x55fda1de434e <unknown>\npxjava - #10 0x55fda20433e4 <unknown>\npxjava - #11 0x55fda20473d7 <unknown>\npxjava - #12 0x55fda2051b20 <unknown>\npxjava - #13 0x55fda2048023 <unknown>\npxjava - #14 0x55fda20161aa <unknown>\npxjava - #15 0x55fda206c6b8 <unknown>\npxjava - #16 0x55fda206c847 <unknown>\npxjava - #17 0x55fda207c243 <unknown>\npxjava - #18 0x7fd5bac95609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 171-path-traversal\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/171-path-traversal\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f4cf8e252\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f4cf8e252\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55e4f54ec6b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 171-path-traversal - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/171-path-traversal - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 171-path-traversal - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/171-path-traversal - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 171-path-traversal\n###"},{"app_name":"173-invalidatelater-leak","status":"fail","result":"\n###\nRunning tests for app: 173-invalidatelater-leak\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 173-invalidatelater-leak\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:26208/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 29196\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x557c6ae4e4e3 <unknown>\npxjava - #1 0x557c6ab7dc76 <unknown>\npxjava - #2 0x557c6abab04a <unknown>\npxjava - #3 0x557c6aba64a1 <unknown>\npxjava - #4 0x557c6aba3029 <unknown>\npxjava - #5 0x557c6abe1ccc <unknown>\npxjava - #6 0x557c6abe147f <unknown>\npxjava - #7 0x557c6abd8de3 <unknown>\npxjava - #8 0x557c6abae2dd <unknown>\npxjava - #9 0x557c6abaf34e <unknown>\npxjava - #10 0x557c6ae0e3e4 <unknown>\npxjava - #11 0x557c6ae123d7 <unknown>\npxjava - #12 0x557c6ae1cb20 <unknown>\npxjava - #13 0x557c6ae13023 <unknown>\npxjava - #14 0x557c6ade11aa <unknown>\npxjava - #15 0x557c6ae376b8 <unknown>\npxjava - #16 0x557c6ae37847 <unknown>\npxjava - #17 0x557c6ae47243 <unknown>\npxjava - #18 0x7fe3874e7609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 173-invalidatelater-leak\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/173-invalidatelater-leak\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f56e76f4c\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f56e76f4c\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5566ed27e6b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 173-invalidatelater-leak - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/173-invalidatelater-leak - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 173-invalidatelater-leak - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/173-invalidatelater-leak - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 173-invalidatelater-leak\n###"},{"app_name":"174-throttle-debounce","status":"fail","result":"\n###\nRunning tests for app: 174-throttle-debounce\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 174-throttle-debounce\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:24983/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 16937\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5600760b64e3 <unknown>\npxjava - #1 0x560075de5c76 <unknown>\npxjava - #2 0x560075e1304a <unknown>\npxjava - #3 0x560075e0e4a1 <unknown>\npxjava - #4 0x560075e0b029 <unknown>\npxjava - #5 0x560075e49ccc <unknown>\npxjava - #6 0x560075e4947f <unknown>\npxjava - #7 0x560075e40de3 <unknown>\npxjava - #8 0x560075e162dd <unknown>\npxjava - #9 0x560075e1734e <unknown>\npxjava - #10 0x5600760763e4 <unknown>\npxjava - #11 0x56007607a3d7 <unknown>\npxjava - #12 0x560076084b20 <unknown>\npxjava - #13 0x56007607b023 <unknown>\npxjava - #14 0x5600760491aa <unknown>\npxjava - #15 0x56007609f6b8 <unknown>\npxjava - #16 0x56007609f847 <unknown>\npxjava - #17 0x5600760af243 <unknown>\npxjava - #18 0x7f408db37609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 174-throttle-debounce\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/174-throttle-debounce\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f2a9b18ec\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f2a9b18ec\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55a6871a66b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 174-throttle-debounce - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/174-throttle-debounce - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 174-throttle-debounce - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/174-throttle-debounce - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 174-throttle-debounce\n###"},{"app_name":"175-setInputValue","status":"fail","result":"\n###\nRunning tests for app: 175-setInputValue\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [4.5s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 175-setInputValue\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:34846/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 17136\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55ea90e7f4e3 <unknown>\npxjava - #1 0x55ea90baec76 <unknown>\npxjava - #2 0x55ea90bdc04a <unknown>\npxjava - #3 0x55ea90bd74a1 <unknown>\npxjava - #4 0x55ea90bd4029 <unknown>\npxjava - #5 0x55ea90c12ccc <unknown>\npxjava - #6 0x55ea90c1247f <unknown>\npxjava - #7 0x55ea90c09de3 <unknown>\npxjava - #8 0x55ea90bdf2dd <unknown>\npxjava - #9 0x55ea90be034e <unknown>\npxjava - #10 0x55ea90e3f3e4 <unknown>\npxjava - #11 0x55ea90e433d7 <unknown>\npxjava - #12 0x55ea90e4db20 <unknown>\npxjava - #13 0x55ea90e44023 <unknown>\npxjava - #14 0x55ea90e121aa <unknown>\npxjava - #15 0x55ea90e686b8 <unknown>\npxjava - #16 0x55ea90e68847 <unknown>\npxjava - #17 0x55ea90e78243 <unknown>\npxjava - #18 0x7fb56b749609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 175-setInputValue\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/175-setInputValue\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f71e548b5\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f71e548b5\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55d7abab6240> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 175-setInputValue - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/175-setInputValue - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.6 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 175-setInputValue - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/175-setInputValue - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 175-setInputValue\n###"},{"app_name":"178-delayed-widget","status":"fail","result":"\n###\nRunning tests for app: 178-delayed-widget\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [5.6s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 178-delayed-widget\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:20340/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 7943\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55e0dac0c4e3 <unknown>\npxjava - #1 0x55e0da93bc76 <unknown>\npxjava - #2 0x55e0da96904a <unknown>\npxjava - #3 0x55e0da9644a1 <unknown>\npxjava - #4 0x55e0da961029 <unknown>\npxjava - #5 0x55e0da99fccc <unknown>\npxjava - #6 0x55e0da99f47f <unknown>\npxjava - #7 0x55e0da996de3 <unknown>\npxjava - #8 0x55e0da96c2dd <unknown>\npxjava - #9 0x55e0da96d34e <unknown>\npxjava - #10 0x55e0dabcc3e4 <unknown>\npxjava - #11 0x55e0dabd03d7 <unknown>\npxjava - #12 0x55e0dabdab20 <unknown>\npxjava - #13 0x55e0dabd1023 <unknown>\npxjava - #14 0x55e0dab9f1aa <unknown>\npxjava - #15 0x55e0dabf56b8 <unknown>\npxjava - #16 0x55e0dabf5847 <unknown>\npxjava - #17 0x55e0dac05243 <unknown>\npxjava - #18 0x7fec4f74c609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 178-delayed-widget\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/178-delayed-widget\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f23629e84\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f23629e84\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x560c8cbc33d0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 178-delayed-widget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/178-delayed-widget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.8 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 178-delayed-widget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/178-delayed-widget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 178-delayed-widget\n###"},{"app_name":"179-nondelayed-widget","status":"fail","result":"\n###\nRunning tests for app: 179-nondelayed-widget\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [5.6s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 179-nondelayed-widget\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:29489/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 3846\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55a41dec34e3 <unknown>\npxjava - #1 0x55a41dbf2c76 <unknown>\npxjava - #2 0x55a41dc2004a <unknown>\npxjava - #3 0x55a41dc1b4a1 <unknown>\npxjava - #4 0x55a41dc18029 <unknown>\npxjava - #5 0x55a41dc56ccc <unknown>\npxjava - #6 0x55a41dc5647f <unknown>\npxjava - #7 0x55a41dc4dde3 <unknown>\npxjava - #8 0x55a41dc232dd <unknown>\npxjava - #9 0x55a41dc2434e <unknown>\npxjava - #10 0x55a41de833e4 <unknown>\npxjava - #11 0x55a41de873d7 <unknown>\npxjava - #12 0x55a41de91b20 <unknown>\npxjava - #13 0x55a41de88023 <unknown>\npxjava - #14 0x55a41de561aa <unknown>\npxjava - #15 0x55a41deac6b8 <unknown>\npxjava - #16 0x55a41deac847 <unknown>\npxjava - #17 0x55a41debc243 <unknown>\npxjava - #18 0x7f6ccbff6609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 179-nondelayed-widget\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/179-nondelayed-widget\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6d6f353d\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6d6f353d\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55ff72f50518> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 179-nondelayed-widget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/179-nondelayed-widget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 179-nondelayed-widget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/179-nondelayed-widget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 179-nondelayed-widget\n###"},{"app_name":"180-delayed-staticwidget","status":"fail","result":"\n###\nRunning tests for app: 180-delayed-staticwidget\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ |         2 | mytest                                                          \n✔ |         2 | mytest [5.3s]\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 180-delayed-staticwidget\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:32174/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 26384\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x559d4e0044e3 <unknown>\npxjava - #1 0x559d4dd33c76 <unknown>\npxjava - #2 0x559d4dd6104a <unknown>\npxjava - #3 0x559d4dd5c4a1 <unknown>\npxjava - #4 0x559d4dd59029 <unknown>\npxjava - #5 0x559d4dd97ccc <unknown>\npxjava - #6 0x559d4dd9747f <unknown>\npxjava - #7 0x559d4dd8ede3 <unknown>\npxjava - #8 0x559d4dd642dd <unknown>\npxjava - #9 0x559d4dd6534e <unknown>\npxjava - #10 0x559d4dfc43e4 <unknown>\npxjava - #11 0x559d4dfc83d7 <unknown>\npxjava - #12 0x559d4dfd2b20 <unknown>\npxjava - #13 0x559d4dfc9023 <unknown>\npxjava - #14 0x559d4df971aa <unknown>\npxjava - #15 0x559d4dfed6b8 <unknown>\npxjava - #16 0x559d4dfed847 <unknown>\npxjava - #17 0x559d4dffd243 <unknown>\npxjava - #18 0x7f8134c90609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 180-delayed-staticwidget\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/180-delayed-staticwidget\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f2ee30538\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f2ee30538\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55ce7dd683a0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 180-delayed-staticwidget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/180-delayed-staticwidget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 180-delayed-staticwidget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/180-delayed-staticwidget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 180-delayed-staticwidget\n###"},{"app_name":"181-report-image","status":"pass","result":"\n###\nRunning tests for app: 181-report-image\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     2 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 181-report-image\n###"},{"app_name":"182-report-png","status":"pass","result":"\n###\nRunning tests for app: 182-report-png\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     2 | mytest [2.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.6 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 182-report-png\n###"},{"app_name":"183-report-cairo","status":"pass","result":"\n###\nRunning tests for app: 183-report-cairo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     2 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.6 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 183-report-cairo\n###"},{"app_name":"184-report-ragg","status":"pass","result":"\n###\nRunning tests for app: 184-report-ragg\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n✔ |   1     2 | mytest [2.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 184-report-ragg\n###"},{"app_name":"185-report-theme","status":"fail","result":"\n###\nRunning tests for app: 185-report-theme\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 185-report-theme\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:7441/index.Rmd?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 3254\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55d6d2a834e3 <unknown>\npxjava - #1 0x55d6d27b2c76 <unknown>\npxjava - #2 0x55d6d27e004a <unknown>\npxjava - #3 0x55d6d27db4a1 <unknown>\npxjava - #4 0x55d6d27d8029 <unknown>\npxjava - #5 0x55d6d2816ccc <unknown>\npxjava - #6 0x55d6d281647f <unknown>\npxjava - #7 0x55d6d280dde3 <unknown>\npxjava - #8 0x55d6d27e32dd <unknown>\npxjava - #9 0x55d6d27e434e <unknown>\npxjava - #10 0x55d6d2a433e4 <unknown>\npxjava - #11 0x55d6d2a473d7 <unknown>\npxjava - #12 0x55d6d2a51b20 <unknown>\npxjava - #13 0x55d6d2a48023 <unknown>\npxjava - #14 0x55d6d2a161aa <unknown>\npxjava - #15 0x55d6d2a6c6b8 <unknown>\npxjava - #16 0x55d6d2a6c847 <unknown>\npxjava - #17 0x55d6d2a7c243 <unknown>\npxjava - #18 0x7fd912ccd609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 185-report-theme\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/185-report-theme\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f117af02f\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f117af02f\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5594131b65a8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language rmarkdown::run(appDir, shiny_args = list(port = port, host = host, launch.browser = FALSE))\n  .. .. ..$ : language do.call(shiny::runApp, shiny_args)\n  .. .. ..$ : language (function (appDir = getwd(), port = getOption(\"shiny.port\"), launch.browser = getOption(\"shiny.launch.browser\",  | __truncated__ ...\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 185-report-theme - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/185-report-theme - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 185-report-theme - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/185-report-theme - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 185-report-theme\n###"},{"app_name":"186-rdir-sortc","status":"fail","result":"\n###\nRunning tests for app: 186-rdir-sortc\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | server                                                          \n⠋ |         1 | server                                                          \n✔ |         1 | server\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 186-rdir-sortc\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:17953/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 29486\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5629198ec4e3 <unknown>\npxjava - #1 0x56291961bc76 <unknown>\npxjava - #2 0x56291964904a <unknown>\npxjava - #3 0x5629196444a1 <unknown>\npxjava - #4 0x562919641029 <unknown>\npxjava - #5 0x56291967fccc <unknown>\npxjava - #6 0x56291967f47f <unknown>\npxjava - #7 0x562919676de3 <unknown>\npxjava - #8 0x56291964c2dd <unknown>\npxjava - #9 0x56291964d34e <unknown>\npxjava - #10 0x5629198ac3e4 <unknown>\npxjava - #11 0x5629198b03d7 <unknown>\npxjava - #12 0x5629198bab20 <unknown>\npxjava - #13 0x5629198b1023 <unknown>\npxjava - #14 0x56291987f1aa <unknown>\npxjava - #15 0x5629198d56b8 <unknown>\npxjava - #16 0x5629198d5847 <unknown>\npxjava - #17 0x5629198e5243 <unknown>\npxjava - #18 0x7f76c1455609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 186-rdir-sortc\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/186-rdir-sortc\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f46189136\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f46189136\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x56354d0779d0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 186-rdir-sortc - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/186-rdir-sortc - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.3 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 186-rdir-sortc - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/186-rdir-sortc - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 186-rdir-sortc\n###"},{"app_name":"187-navbar-collapse","status":"fail","result":"\n###\nRunning tests for app: 187-navbar-collapse\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 187-navbar-collapse\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  550x700 'http://127.0.0.1:47754/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 6433\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x56235d4b34e3 <unknown>\npxjava - #1 0x56235d1e2c76 <unknown>\npxjava - #2 0x56235d21004a <unknown>\npxjava - #3 0x56235d20b4a1 <unknown>\npxjava - #4 0x56235d208029 <unknown>\npxjava - #5 0x56235d246ccc <unknown>\npxjava - #6 0x56235d24647f <unknown>\npxjava - #7 0x56235d23dde3 <unknown>\npxjava - #8 0x56235d2132dd <unknown>\npxjava - #9 0x56235d21434e <unknown>\npxjava - #10 0x56235d4733e4 <unknown>\npxjava - #11 0x56235d4773d7 <unknown>\npxjava - #12 0x56235d481b20 <unknown>\npxjava - #13 0x56235d478023 <unknown>\npxjava - #14 0x56235d4461aa <unknown>\npxjava - #15 0x56235d49c6b8 <unknown>\npxjava - #16 0x56235d49c847 <unknown>\npxjava - #17 0x56235d4ac243 <unknown>\npxjava - #18 0x7f090cf0d609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 187-navbar-collapse\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f61a32490\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f61a32490\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(\"No theme\", dimensions = \"550x700\", browsers = browsers)\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 4 1 4 88 1 88 4 4\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x56350d3156b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\nshinyjster - starting app: 187-navbar-collapse\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  550x700 'http://127.0.0.1:7529/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 6818\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x555b702d94e3 <unknown>\npxjava - #1 0x555b70008c76 <unknown>\npxjava - #2 0x555b7003604a <unknown>\npxjava - #3 0x555b700314a1 <unknown>\npxjava - #4 0x555b7002e029 <unknown>\npxjava - #5 0x555b7006cccc <unknown>\npxjava - #6 0x555b7006c47f <unknown>\npxjava - #7 0x555b70063de3 <unknown>\npxjava - #8 0x555b700392dd <unknown>\npxjava - #9 0x555b7003a34e <unknown>\npxjava - #10 0x555b702993e4 <unknown>\npxjava - #11 0x555b7029d3d7 <unknown>\npxjava - #12 0x555b702a7b20 <unknown>\npxjava - #13 0x555b7029e023 <unknown>\npxjava - #14 0x555b7026c1aa <unknown>\npxjava - #15 0x555b702c26b8 <unknown>\npxjava - #16 0x555b702c2847 <unknown>\npxjava - #17 0x555b702d2243 <unknown>\npxjava - #18 0x7fe215e64609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 187-navbar-collapse\n\n⠴ | 1   2   3 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 99\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f61a32490\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f61a32490\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language local({     old_theme <- bs_global_set(bs_theme()) ...\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 6 1 10 2 1 2 6 10\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x56350d3156b0> \n  .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))\n  .. .. ..$ : language eval(expr, p)\n  .. .. ..$ : language eval(expr, p)\n  .. .. ..$ : language eval(quote({     old_theme <- bs_global_set(bs_theme()) ...\n  .. .. ..$ : language eval(quote({     old_theme <- bs_global_set(bs_theme()) ...\n  .. .. ..$ : language shinyjster::testthat_shinyjster(\"bs4\", dimensions = \"550x700\", browsers = browsers)\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 9 3 9 85 3 85 9 9\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x56350d3156b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:99] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 2   4   4 | shinyjster [20.3s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 187-navbar-collapse - shinyjster - chrome - No theme\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\nError (???): 187-navbar-collapse - shinyjster - chrome - bs4\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 20.4 s\n\n── Skipped tests (4) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (2): ???, ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (2): ???,\n  ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 187-navbar-collapse - shinyjster - chrome - No theme\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\nError (???): 187-navbar-collapse - shinyjster - chrome - bs4\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 2 | WARN 0 | SKIP 4 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 187-navbar-collapse\n###"},{"app_name":"188-encoding","status":"fail","result":"\n###\nRunning tests for app: 188-encoding\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n✖ | 2       2 | mytest [3.0s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:7:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:10:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 2 | WARN 0 | SKIP 0 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 188-encoding\n###"},{"app_name":"189-ui-http-response","status":"fail","result":"\n###\nRunning tests for app: 189-ui-http-response\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 189-ui-http-response\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:21016/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 30447\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55651f9aa4e3 <unknown>\npxjava - #1 0x55651f6d9c76 <unknown>\npxjava - #2 0x55651f70704a <unknown>\npxjava - #3 0x55651f7024a1 <unknown>\npxjava - #4 0x55651f6ff029 <unknown>\npxjava - #5 0x55651f73dccc <unknown>\npxjava - #6 0x55651f73d47f <unknown>\npxjava - #7 0x55651f734de3 <unknown>\npxjava - #8 0x55651f70a2dd <unknown>\npxjava - #9 0x55651f70b34e <unknown>\npxjava - #10 0x55651f96a3e4 <unknown>\npxjava - #11 0x55651f96e3d7 <unknown>\npxjava - #12 0x55651f978b20 <unknown>\npxjava - #13 0x55651f96f023 <unknown>\npxjava - #14 0x55651f93d1aa <unknown>\npxjava - #15 0x55651f9936b8 <unknown>\npxjava - #16 0x55651f993847 <unknown>\npxjava - #17 0x55651f9a3243 <unknown>\npxjava - #18 0x7f5d0ed26609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 189-ui-http-response\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/189-ui-http-response\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1b73a06d\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f1b73a06d\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5651770876e8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 189-ui-http-response - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/189-ui-http-response - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 189-ui-http-response - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/189-ui-http-response - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 189-ui-http-response\n###"},{"app_name":"190-reactlog-module-ex1","status":"pass","result":"\n###\nRunning tests for app: 190-reactlog-module-ex1\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   2     1 | mytest                                                          \n✔ |   2     2 | mytest [9.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.5 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 190-reactlog-module-ex1\n###"},{"app_name":"191-reactlog-pythagoras","status":"pass","result":"\n###\nRunning tests for app: 191-reactlog-pythagoras\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   2     1 | mytest                                                          \n✔ |   2     2 | mytest [9.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.3 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 191-reactlog-pythagoras\n###"},{"app_name":"192-reactlog-hello","status":"pass","result":"\n###\nRunning tests for app: 192-reactlog-hello\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   2     1 | mytest                                                          \n✔ |   2     2 | mytest [11.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:31:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 11.7 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 192-reactlog-hello\n###"},{"app_name":"193-reactlog-dynamic-ui","status":"pass","result":"\n###\nRunning tests for app: 193-reactlog-dynamic-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |     1   0 | mytest                                                          \n✔ |     1   0 | mytest [2.2s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.2 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-mytest.R:14:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 193-reactlog-dynamic-ui\n###"},{"app_name":"194-reactlog-plot-cache-key","status":"pass","result":"\n###\nRunning tests for app: 194-reactlog-plot-cache-key\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   2     1 | mytest                                                          \n⠼ |   3     2 | mytest                                                          \n⠦ |   4     3 | mytest                                                          \n⠇ |   5     4 | mytest                                                          \n✔ |   5     5 | mytest [28.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/002_.png'\n\nWarning ('test-mytest.R:24:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:27:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/004_.png'\n\nWarning ('test-mytest.R:30:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 28.3 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 5 ]\n\nStopping tests for app: 194-reactlog-plot-cache-key\n###"},{"app_name":"195-radio-empty","status":"pass","result":"\n###\nRunning tests for app: 195-radio-empty\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n⠦ |   3     4 | mytest                                                          \n⠇ |   3     6 | mytest                                                          \n✔ |   3     6 | mytest [3.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.5 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 195-radio-empty\n###"},{"app_name":"200-flexdashboard-render-text","status":"pass","result":"\n###\nRunning tests for app: 200-flexdashboard-render-text\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      \n✔ |     1   0 | shinyjster\n\n══ Results ═════════════════════════════════════════════════════════════════════\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• .Platform$OS.type != \"windows\" is TRUE (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 200-flexdashboard-render-text\n###"},{"app_name":"205-dynamic-tabs-compat","status":"fail","result":"\n###\nRunning tests for app: 205-dynamic-tabs-compat\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | themes                                                          \n⠋ |         1 | themes                                                          \n⠙ |         2 | themes                                                          \n⠹ |         3 | themes                                                          \n⠸ |         4 | themes                                                          \n⠼ |         5 | themes                                                          \n⠴ |         6 | themes                                                          \n⠦ |         7 | themes                                                          \n⠧ |         8 | themes                                                          \n⠇ |         9 | themes                                                          \n⠏ | 1       9 | themes                                                          \n⠋ | 1      10 | themes                                                          \n⠙ | 2      10 | themes                                                          \n⠹ | 2      11 | themes                                                          \n⠸ | 3      11 | themes                                                          \n⠼ | 3      12 | themes                                                          \n⠴ | 4      12 | themes                                                          \n✖ | 4      12 | themes [16.9s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-themes.R:29:7'): cosmo5\nSnapshot of `file` to 'themes/cosmo5-002.png' has changed\nRun `testthat::snapshot_review('themes/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-themes.R:29:6\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-themes.R:41:7'): cosmo5\nSnapshot of `file` to 'themes/cosmo5-004.png' has changed\nRun `testthat::snapshot_review('themes/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-themes.R:41:6\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-themes.R:49:7'): cosmo5\nSnapshot of `file` to 'themes/cosmo5-006.png' has changed\nRun `testthat::snapshot_review('themes/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-themes.R:49:6\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-themes.R:54:7'): cosmo5\nSnapshot of `file` to 'themes/cosmo5-008.png' has changed\nRun `testthat::snapshot_review('themes/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-themes.R:54:6\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 17.0 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-themes.R:29:7'): cosmo5\nSnapshot of `file` to 'themes/cosmo5-002.png' has changed\nRun `testthat::snapshot_review('themes/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-themes.R:29:6\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-themes.R:41:7'): cosmo5\nSnapshot of `file` to 'themes/cosmo5-004.png' has changed\nRun `testthat::snapshot_review('themes/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-themes.R:41:6\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-themes.R:49:7'): cosmo5\nSnapshot of `file` to 'themes/cosmo5-006.png' has changed\nRun `testthat::snapshot_review('themes/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-themes.R:49:6\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-themes.R:54:7'): cosmo5\nSnapshot of `file` to 'themes/cosmo5-008.png' has changed\nRun `testthat::snapshot_review('themes/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-themes.R:54:6\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 12 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 205-dynamic-tabs-compat\n###"},{"app_name":"206-freeze-thaw","status":"fail","result":"\n###\nRunning tests for app: 206-freeze-thaw\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 206-freeze-thaw\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:7257/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 14102\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x562298ff14e3 <unknown>\npxjava - #1 0x562298d20c76 <unknown>\npxjava - #2 0x562298d4e04a <unknown>\npxjava - #3 0x562298d494a1 <unknown>\npxjava - #4 0x562298d46029 <unknown>\npxjava - #5 0x562298d84ccc <unknown>\npxjava - #6 0x562298d8447f <unknown>\npxjava - #7 0x562298d7bde3 <unknown>\npxjava - #8 0x562298d512dd <unknown>\npxjava - #9 0x562298d5234e <unknown>\npxjava - #10 0x562298fb13e4 <unknown>\npxjava - #11 0x562298fb53d7 <unknown>\npxjava - #12 0x562298fbfb20 <unknown>\npxjava - #13 0x562298fb6023 <unknown>\npxjava - #14 0x562298f841aa <unknown>\npxjava - #15 0x562298fda6b8 <unknown>\npxjava - #16 0x562298fda847 <unknown>\npxjava - #17 0x562298fea243 <unknown>\npxjava - #18 0x7fb72f3c3609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 206-freeze-thaw\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/206-freeze-thaw\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485ffe50027\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485ffe50027\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55b813476ed0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 206-freeze-thaw - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/206-freeze-thaw - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 206-freeze-thaw - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/206-freeze-thaw - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 206-freeze-thaw\n###"},{"app_name":"207-freeze-invalidate","status":"fail","result":"\n###\nRunning tests for app: 207-freeze-invalidate\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 207-freeze-invalidate\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:45405/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 21471\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x555af5f544e3 <unknown>\npxjava - #1 0x555af5c83c76 <unknown>\npxjava - #2 0x555af5cb104a <unknown>\npxjava - #3 0x555af5cac4a1 <unknown>\npxjava - #4 0x555af5ca9029 <unknown>\npxjava - #5 0x555af5ce7ccc <unknown>\npxjava - #6 0x555af5ce747f <unknown>\npxjava - #7 0x555af5cdede3 <unknown>\npxjava - #8 0x555af5cb42dd <unknown>\npxjava - #9 0x555af5cb534e <unknown>\npxjava - #10 0x555af5f143e4 <unknown>\npxjava - #11 0x555af5f183d7 <unknown>\npxjava - #12 0x555af5f22b20 <unknown>\npxjava - #13 0x555af5f19023 <unknown>\npxjava - #14 0x555af5ee71aa <unknown>\npxjava - #15 0x555af5f3d6b8 <unknown>\npxjava - #16 0x555af5f3d847 <unknown>\npxjava - #17 0x555af5f4d243 <unknown>\npxjava - #18 0x7f45a0612609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 207-freeze-invalidate\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/207-freeze-invalidate\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6764054d\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f6764054d\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55bf380c76b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n⠼ | 1   2   2 | shinyjster                                                      \n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 207-freeze-invalidate - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/207-freeze-invalidate - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 207-freeze-invalidate - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/207-freeze-invalidate - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 207-freeze-invalidate\n###"},{"app_name":"208-bind-cache-event","status":"fail","result":"\n###\nRunning tests for app: 208-bind-cache-event\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 208-bind-cache-event\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:20467/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 12172\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x556f095fa4e3 <unknown>\npxjava - #1 0x556f09329c76 <unknown>\npxjava - #2 0x556f0935704a <unknown>\npxjava - #3 0x556f093524a1 <unknown>\npxjava - #4 0x556f0934f029 <unknown>\npxjava - #5 0x556f0938dccc <unknown>\npxjava - #6 0x556f0938d47f <unknown>\npxjava - #7 0x556f09384de3 <unknown>\npxjava - #8 0x556f0935a2dd <unknown>\npxjava - #9 0x556f0935b34e <unknown>\npxjava - #10 0x556f095ba3e4 <unknown>\npxjava - #11 0x556f095be3d7 <unknown>\npxjava - #12 0x556f095c8b20 <unknown>\npxjava - #13 0x556f095bf023 <unknown>\npxjava - #14 0x556f0958d1aa <unknown>\npxjava - #15 0x556f095e36b8 <unknown>\npxjava - #16 0x556f095e3847 <unknown>\npxjava - #17 0x556f095f3243 <unknown>\npxjava - #18 0x7f7fd831d609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 208-bind-cache-event\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/208-bind-cache-event\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f66f83020\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f66f83020\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55fb0a1876b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 208-bind-cache-event - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/208-bind-cache-event - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 208-bind-cache-event - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/208-bind-cache-event - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 208-bind-cache-event\n###"},{"app_name":"209-datepicker","status":"fail","result":"\n###\nRunning tests for app: 209-datepicker\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 209-datepicker\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:3204/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 28837\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55c34ddd64e3 <unknown>\npxjava - #1 0x55c34db05c76 <unknown>\npxjava - #2 0x55c34db3304a <unknown>\npxjava - #3 0x55c34db2e4a1 <unknown>\npxjava - #4 0x55c34db2b029 <unknown>\npxjava - #5 0x55c34db69ccc <unknown>\npxjava - #6 0x55c34db6947f <unknown>\npxjava - #7 0x55c34db60de3 <unknown>\npxjava - #8 0x55c34db362dd <unknown>\npxjava - #9 0x55c34db3734e <unknown>\npxjava - #10 0x55c34dd963e4 <unknown>\npxjava - #11 0x55c34dd9a3d7 <unknown>\npxjava - #12 0x55c34dda4b20 <unknown>\npxjava - #13 0x55c34dd9b023 <unknown>\npxjava - #14 0x55c34dd691aa <unknown>\npxjava - #15 0x55c34ddbf6b8 <unknown>\npxjava - #16 0x55c34ddbf847 <unknown>\npxjava - #17 0x55c34ddcf243 <unknown>\npxjava - #18 0x7f62b9c0e609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 209-datepicker\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/209-datepicker\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7235a3\"),      list(envir = .GlobalEnv, quote =| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7235a3\"), list(envir = .GlobalEnv,      quote = TRUE)),| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55e17c855ed0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 209-datepicker - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/209-datepicker - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 209-datepicker - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/209-datepicker - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 209-datepicker\n###"},{"app_name":"210-future_promise","status":"fail","result":"\n###\nRunning tests for app: 210-future_promise\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 210-future_promise\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:7672/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 16818\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x56382f2e54e3 <unknown>\npxjava - #1 0x56382f014c76 <unknown>\npxjava - #2 0x56382f04204a <unknown>\npxjava - #3 0x56382f03d4a1 <unknown>\npxjava - #4 0x56382f03a029 <unknown>\npxjava - #5 0x56382f078ccc <unknown>\npxjava - #6 0x56382f07847f <unknown>\npxjava - #7 0x56382f06fde3 <unknown>\npxjava - #8 0x56382f0452dd <unknown>\npxjava - #9 0x56382f04634e <unknown>\npxjava - #10 0x56382f2a53e4 <unknown>\npxjava - #11 0x56382f2a93d7 <unknown>\npxjava - #12 0x56382f2b3b20 <unknown>\npxjava - #13 0x56382f2aa023 <unknown>\npxjava - #14 0x56382f2781aa <unknown>\npxjava - #15 0x56382f2ce6b8 <unknown>\npxjava - #16 0x56382f2ce847 <unknown>\npxjava - #17 0x56382f2de243 <unknown>\npxjava - #18 0x7f66d4854609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 210-future_promise\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/210-future_promise\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f714ba22e\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f714ba22e\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55e9aec6d6b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n⠹ | 1       2 | shinyjster                                                      \n✖ | 1   2   2 | shinyjster [10.3s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 210-future_promise - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/210-future_promise - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.3 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 210-future_promise - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/210-future_promise - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 210-future_promise\n###"},{"app_name":"211-sv-custom-inputs","status":"fail","result":"\n###\nRunning tests for app: 211-sv-custom-inputs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 211-sv-custom-inputs\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:6736/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 6185\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x558ee38594e3 <unknown>\npxjava - #1 0x558ee3588c76 <unknown>\npxjava - #2 0x558ee35b604a <unknown>\npxjava - #3 0x558ee35b14a1 <unknown>\npxjava - #4 0x558ee35ae029 <unknown>\npxjava - #5 0x558ee35ecccc <unknown>\npxjava - #6 0x558ee35ec47f <unknown>\npxjava - #7 0x558ee35e3de3 <unknown>\npxjava - #8 0x558ee35b92dd <unknown>\npxjava - #9 0x558ee35ba34e <unknown>\npxjava - #10 0x558ee38193e4 <unknown>\npxjava - #11 0x558ee381d3d7 <unknown>\npxjava - #12 0x558ee3827b20 <unknown>\npxjava - #13 0x558ee381e023 <unknown>\npxjava - #14 0x558ee37ec1aa <unknown>\npxjava - #15 0x558ee38426b8 <unknown>\npxjava - #16 0x558ee3842847 <unknown>\npxjava - #17 0x558ee3852243 <unknown>\npxjava - #18 0x7fe562161609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 211-sv-custom-inputs\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/211-sv-custom-inputs\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fcae9e3b\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fcae9e3b\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55abc4a40ca8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 211-sv-custom-inputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/211-sv-custom-inputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 211-sv-custom-inputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/211-sv-custom-inputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 211-sv-custom-inputs\n###"},{"app_name":"212-daterangepicker","status":"fail","result":"\n###\nRunning tests for app: 212-daterangepicker\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 212-daterangepicker\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:39577/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 17920\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55cdfb4754e3 <unknown>\npxjava - #1 0x55cdfb1a4c76 <unknown>\npxjava - #2 0x55cdfb1d204a <unknown>\npxjava - #3 0x55cdfb1cd4a1 <unknown>\npxjava - #4 0x55cdfb1ca029 <unknown>\npxjava - #5 0x55cdfb208ccc <unknown>\npxjava - #6 0x55cdfb20847f <unknown>\npxjava - #7 0x55cdfb1ffde3 <unknown>\npxjava - #8 0x55cdfb1d52dd <unknown>\npxjava - #9 0x55cdfb1d634e <unknown>\npxjava - #10 0x55cdfb4353e4 <unknown>\npxjava - #11 0x55cdfb4393d7 <unknown>\npxjava - #12 0x55cdfb443b20 <unknown>\npxjava - #13 0x55cdfb43a023 <unknown>\npxjava - #14 0x55cdfb4081aa <unknown>\npxjava - #15 0x55cdfb45e6b8 <unknown>\npxjava - #16 0x55cdfb45e847 <unknown>\npxjava - #17 0x55cdfb46e243 <unknown>\npxjava - #18 0x7f408f128609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 212-daterangepicker\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/212-daterangepicker\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f31f7124d\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f31f7124d\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x559e9cafb3a0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 212-daterangepicker - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/212-daterangepicker - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 212-daterangepicker - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/212-daterangepicker - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 212-daterangepicker\n###"},{"app_name":"213-tab-panels","status":"fail","result":"\n###\nRunning tests for app: 213-tab-panels\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 4       4 | mytest                                                          \n⠇ | 4       5 | mytest                                                          \n⠏ | 5       5 | mytest                                                          \n⠋ | 5       6 | mytest                                                          \n⠙ | 6       6 | mytest                                                          \n⠹ | 6       7 | mytest                                                          \n⠸ | 7       7 | mytest                                                          \n⠼ | 7       8 | mytest                                                          \n⠴ | 8       8 | mytest                                                          \n✖ | 8       8 | mytest [5.7s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:24:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:24:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:29:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/010.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:29:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:35:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/012.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:35:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:41:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/014.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:41:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:46:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/016.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:46:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.9 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:8:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:19:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:24:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:24:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:29:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/010.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:29:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:35:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/012.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:35:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:41:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/014.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:41:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:46:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/016.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:46:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 8 | WARN 0 | SKIP 0 | PASS 8 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 213-tab-panels\n###"},{"app_name":"214-render-script-attrs","status":"fail","result":"\n###\nRunning tests for app: 214-render-script-attrs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 214-render-script-attrs\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:8529/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 29080\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55894fc144e3 <unknown>\npxjava - #1 0x55894f943c76 <unknown>\npxjava - #2 0x55894f97104a <unknown>\npxjava - #3 0x55894f96c4a1 <unknown>\npxjava - #4 0x55894f969029 <unknown>\npxjava - #5 0x55894f9a7ccc <unknown>\npxjava - #6 0x55894f9a747f <unknown>\npxjava - #7 0x55894f99ede3 <unknown>\npxjava - #8 0x55894f9742dd <unknown>\npxjava - #9 0x55894f97534e <unknown>\npxjava - #10 0x55894fbd43e4 <unknown>\npxjava - #11 0x55894fbd83d7 <unknown>\npxjava - #12 0x55894fbe2b20 <unknown>\npxjava - #13 0x55894fbd9023 <unknown>\npxjava - #14 0x55894fba71aa <unknown>\npxjava - #15 0x55894fbfd6b8 <unknown>\npxjava - #16 0x55894fbfd847 <unknown>\npxjava - #17 0x55894fc0d243 <unknown>\npxjava - #18 0x7fb70512c609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 214-render-script-attrs\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/214-render-script-attrs\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f19f1f823\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f19f1f823\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55a5e7c2a6b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 214-render-script-attrs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/214-render-script-attrs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 214-render-script-attrs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/214-render-script-attrs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 214-render-script-attrs\n###"},{"app_name":"215-bslib-nav","status":"fail","result":"\n###\nRunning tests for app: 215-bslib-nav\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          ! Maximum screenshot convolution value `11.2039215686275` > `2` (threshold).\n• `old`:/home/runner/work/shinycoreci/shinycoreci/inst/apps/215-bslib-nav/tests/testthat/_snaps/linux-4.2/mytest/002.png\n• `new`:/tmp/Rtmp6DHO0m/st2-dad76bc20ab2/002.png\nℹ (To remove this message, increase `threshold`, or set `quiet = TRUE`)\n\n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          ! Maximum screenshot convolution value `14.9372549019608` > `2` (threshold).\n• `old`:/home/runner/work/shinycoreci/shinycoreci/inst/apps/215-bslib-nav/tests/testthat/_snaps/linux-4.2/mytest/004.png\n• `new`:/tmp/Rtmp6DHO0m/st2-dad76bc20ab2/004.png\nℹ (To remove this message, increase `threshold`, or set `quiet = TRUE`)\n\n⠸ | 2       2 | mytest                                                          \n✖ | 2       2 | mytest [4.1s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─expect_tab(\"b\") at test-mytest.R:19:2\n 2.   └─app$expect_screenshot(threshold = 2) at test-mytest.R:16:4\n 3.     └─shinytest2:::app_expect_screenshot_and_variant(...)\n 4.       └─shinytest2:::app_expect_screenshot(self, private, ...)\n 5.         └─shinytest2:::app__expect_snapshot_file(...)\n 6.           ├─base::withCallingHandlers(...)\n 7.           └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─expect_tab(\"c\") at test-mytest.R:20:2\n 2.   └─app$expect_screenshot(threshold = 2) at test-mytest.R:16:4\n 3.     └─shinytest2:::app_expect_screenshot_and_variant(...)\n 4.       └─shinytest2:::app_expect_screenshot(self, private, ...)\n 5.         └─shinytest2:::app__expect_snapshot_file(...)\n 6.           ├─base::withCallingHandlers(...)\n 7.           └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.2 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─expect_tab(\"b\") at test-mytest.R:19:2\n 2.   └─app$expect_screenshot(threshold = 2) at test-mytest.R:16:4\n 3.     └─shinytest2:::app_expect_screenshot_and_variant(...)\n 4.       └─shinytest2:::app_expect_screenshot(self, private, ...)\n 5.         └─shinytest2:::app__expect_snapshot_file(...)\n 6.           ├─base::withCallingHandlers(...)\n 7.           └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─expect_tab(\"c\") at test-mytest.R:20:2\n 2.   └─app$expect_screenshot(threshold = 2) at test-mytest.R:16:4\n 3.     └─shinytest2:::app_expect_screenshot_and_variant(...)\n 4.       └─shinytest2:::app_expect_screenshot(self, private, ...)\n 5.         └─shinytest2:::app__expect_snapshot_file(...)\n 6.           ├─base::withCallingHandlers(...)\n 7.           └─testthat::expect_snapshot_file(...)\n\n[ FAIL 2 | WARN 0 | SKIP 0 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 215-bslib-nav\n###"},{"app_name":"216-quosures","status":"pass","result":"\n###\nRunning tests for app: 216-quosures\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [4.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.3 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 216-quosures\n###"},{"app_name":"218-insert-ui-jquery","status":"pass","result":"\n###\nRunning tests for app: 218-insert-ui-jquery\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinytest2                                                      \n⠋ |         1 | shinytest2                                                      \n✔ |         1 | shinytest2 [1.9s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 1.9 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 218-insert-ui-jquery\n###"},{"app_name":"219-sliders-date","status":"pass","result":"\n###\nRunning tests for app: 219-sliders-date\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |   1     0 | mytest                                                          \n⠹ |   1     2 | mytest                                                          \n⠸ |   2     2 | mytest                                                          \n⠴ |   2     4 | mytest                                                          \n✔ |   2     4 | mytest [3.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): {shinytest2} recording: mytest\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/001_.png'\n\nWarning ('test-mytest.R:19:3'): {shinytest2} recording: mytest\nAdding new file snapshot: 'tests/testthat/_snaps/linux-4.2/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.2 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 219-sliders-date\n###"},{"app_name":"220-execute-hidden-plot","status":"fail","result":"\n###\nRunning tests for app: 220-execute-hidden-plot\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 220-execute-hidden-plot\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:29757/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 4658\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5583871204e3 <unknown>\npxjava - #1 0x558386e4fc76 <unknown>\npxjava - #2 0x558386e7d04a <unknown>\npxjava - #3 0x558386e784a1 <unknown>\npxjava - #4 0x558386e75029 <unknown>\npxjava - #5 0x558386eb3ccc <unknown>\npxjava - #6 0x558386eb347f <unknown>\npxjava - #7 0x558386eaade3 <unknown>\npxjava - #8 0x558386e802dd <unknown>\npxjava - #9 0x558386e8134e <unknown>\npxjava - #10 0x5583870e03e4 <unknown>\npxjava - #11 0x5583870e43d7 <unknown>\npxjava - #12 0x5583870eeb20 <unknown>\npxjava - #13 0x5583870e5023 <unknown>\npxjava - #14 0x5583870b31aa <unknown>\npxjava - #15 0x5583871096b8 <unknown>\npxjava - #16 0x558387109847 <unknown>\npxjava - #17 0x558387119243 <unknown>\npxjava - #18 0x7f8c8f56c609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 220-execute-hidden-plot\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/220-execute-hidden-plot\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f76b8711\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f76b8711\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(\"Execute hidden plot\")\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 54 1 54 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5607fa4186b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 220-execute-hidden-plot - shinyjster - chrome - Execute hidden plot\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/220-execute-hidden-plot - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 220-execute-hidden-plot - shinyjster - chrome - Execute hidden plot\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/220-execute-hidden-plot - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\n\nNo one gets it right on their first try\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 220-execute-hidden-plot\n###"},{"app_name":"221-async-script-dynamic-ui","status":"fail","result":"\n###\nRunning tests for app: 221-async-script-dynamic-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 221-async-script-dynamic-ui\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:37835/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 15078\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x559fb3f724e3 <unknown>\npxjava - #1 0x559fb3ca1c76 <unknown>\npxjava - #2 0x559fb3ccf04a <unknown>\npxjava - #3 0x559fb3cca4a1 <unknown>\npxjava - #4 0x559fb3cc7029 <unknown>\npxjava - #5 0x559fb3d05ccc <unknown>\npxjava - #6 0x559fb3d0547f <unknown>\npxjava - #7 0x559fb3cfcde3 <unknown>\npxjava - #8 0x559fb3cd22dd <unknown>\npxjava - #9 0x559fb3cd334e <unknown>\npxjava - #10 0x559fb3f323e4 <unknown>\npxjava - #11 0x559fb3f363d7 <unknown>\npxjava - #12 0x559fb3f40b20 <unknown>\npxjava - #13 0x559fb3f37023 <unknown>\npxjava - #14 0x559fb3f051aa <unknown>\npxjava - #15 0x559fb3f5b6b8 <unknown>\npxjava - #16 0x559fb3f5b847 <unknown>\npxjava - #17 0x559fb3f6b243 <unknown>\npxjava - #18 0x7f9a34e65609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 221-async-script-dynamic-ui\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/221-async-script-dynamic-ui\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f639d341f\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f639d341f\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 4 5 4 37 5 37 4 4\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5588233d36b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 221-async-script-dynamic-ui - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/221-async-script-dynamic-ui - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 221-async-script-dynamic-ui - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/221-async-script-dynamic-ui - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\n\nFrustration is a natural part of programming :)\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 221-async-script-dynamic-ui\n###"},{"app_name":"222-shinyoptions","status":"fail","result":"\n###\nRunning tests for app: 222-shinyoptions\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 222-shinyoptions\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:6199/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 8650\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x5579986b84e3 <unknown>\npxjava - #1 0x5579983e7c76 <unknown>\npxjava - #2 0x55799841504a <unknown>\npxjava - #3 0x5579984104a1 <unknown>\npxjava - #4 0x55799840d029 <unknown>\npxjava - #5 0x55799844bccc <unknown>\npxjava - #6 0x55799844b47f <unknown>\npxjava - #7 0x557998442de3 <unknown>\npxjava - #8 0x5579984182dd <unknown>\npxjava - #9 0x55799841934e <unknown>\npxjava - #10 0x5579986783e4 <unknown>\npxjava - #11 0x55799867c3d7 <unknown>\npxjava - #12 0x557998686b20 <unknown>\npxjava - #13 0x55799867d023 <unknown>\npxjava - #14 0x55799864b1aa <unknown>\npxjava - #15 0x5579986a16b8 <unknown>\npxjava - #16 0x5579986a1847 <unknown>\npxjava - #17 0x5579986b1243 <unknown>\npxjava - #18 0x7f26a36ae609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 222-shinyoptions\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/222-shinyoptions\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f16f3f8d7\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f16f3f8d7\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x559e260ee6b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 222-shinyoptions - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/222-shinyoptions - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 222-shinyoptions - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/222-shinyoptions - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 222-shinyoptions\n###"},{"app_name":"223-set-current-theme","status":"fail","result":"\n###\nRunning tests for app: 223-set-current-theme\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 223-set-current-theme\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:37770/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 18073\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55a73326e4e3 <unknown>\npxjava - #1 0x55a732f9dc76 <unknown>\npxjava - #2 0x55a732fcb04a <unknown>\npxjava - #3 0x55a732fc64a1 <unknown>\npxjava - #4 0x55a732fc3029 <unknown>\npxjava - #5 0x55a733001ccc <unknown>\npxjava - #6 0x55a73300147f <unknown>\npxjava - #7 0x55a732ff8de3 <unknown>\npxjava - #8 0x55a732fce2dd <unknown>\npxjava - #9 0x55a732fcf34e <unknown>\npxjava - #10 0x55a73322e3e4 <unknown>\npxjava - #11 0x55a7332323d7 <unknown>\npxjava - #12 0x55a73323cb20 <unknown>\npxjava - #13 0x55a733233023 <unknown>\npxjava - #14 0x55a7332011aa <unknown>\npxjava - #15 0x55a7332576b8 <unknown>\npxjava - #16 0x55a733257847 <unknown>\npxjava - #17 0x55a733267243 <unknown>\npxjava - #18 0x7fb4cd829609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 223-set-current-theme\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/223-set-current-theme\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7e55948a\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f7e55948a\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(browsers = c(\"chrome\", \"firefox\", \"edge\"))\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 74 1 74 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x562d6656c6b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 223-set-current-theme - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/223-set-current-theme - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 223-set-current-theme - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/223-set-current-theme - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 223-set-current-theme\n###"},{"app_name":"224-shinymeta","status":"fail","result":"\n###\nRunning tests for app: 224-shinymeta\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 224-shinymeta\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:48515/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 8860\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x558e20db24e3 <unknown>\npxjava - #1 0x558e20ae1c76 <unknown>\npxjava - #2 0x558e20b0f04a <unknown>\npxjava - #3 0x558e20b0a4a1 <unknown>\npxjava - #4 0x558e20b07029 <unknown>\npxjava - #5 0x558e20b45ccc <unknown>\npxjava - #6 0x558e20b4547f <unknown>\npxjava - #7 0x558e20b3cde3 <unknown>\npxjava - #8 0x558e20b122dd <unknown>\npxjava - #9 0x558e20b1334e <unknown>\npxjava - #10 0x558e20d723e4 <unknown>\npxjava - #11 0x558e20d763d7 <unknown>\npxjava - #12 0x558e20d80b20 <unknown>\npxjava - #13 0x558e20d77023 <unknown>\npxjava - #14 0x558e20d451aa <unknown>\npxjava - #15 0x558e20d9b6b8 <unknown>\npxjava - #16 0x558e20d9b847 <unknown>\npxjava - #17 0x558e20dab243 <unknown>\npxjava - #18 0x7fe37ff58609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 224-shinymeta\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/224-shinymeta\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f4dea85c2\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f4dea85c2\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(browsers = c(\"chrome\", \"firefox\"))\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 66 1 66 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x560480734ed0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   1   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 224-shinymeta - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/224-shinymeta - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 224-shinymeta - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/224-shinymeta - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 1 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 224-shinymeta\n###"},{"app_name":"225-snapshot-info-option","status":"pass","result":"\n###\nRunning tests for app: 225-snapshot-info-option\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | tests                                                           \n⠋ |         1 | tests                                                           \n✔ |         1 | tests [2.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.1 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 225-snapshot-info-option\n###"},{"app_name":"226-snapshot-info-url","status":"pass","result":"\n###\nRunning tests for app: 226-snapshot-info-url\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | tests                                                           \n⠋ |         1 | tests                                                           \n✔ |         1 | tests [2.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.1 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 226-snapshot-info-url\n###"},{"app_name":"301-bs-themes","status":"pass","result":"\n###\nRunning tests for app: 301-bs-themes\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | themes                                                          \n⠋ |     1   0 | themes                                                          \n✔ |     1   0 | themes [2.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.1 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-themes.R:11:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 301-bs-themes\n###"},{"app_name":"302-bootswatch-themes","status":"pass","result":"\n###\nRunning tests for app: 302-bootswatch-themes\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | themes                                                          \n⠋ |     1   0 | themes                                                          \n✔ |     1   0 | themes [1.8s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 1.8 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-themes.R:15:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 302-bootswatch-themes\n###"},{"app_name":"303-bslib-html-template","status":"fail","result":"\n###\nRunning tests for app: 303-bslib-html-template\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | mytest                                                          \n⠋ |         1 | mytest                                                          \n⠙ | 1       1 | mytest                                                          \n⠹ | 1       2 | mytest                                                          \n⠸ | 2       2 | mytest                                                          \n⠼ | 2       3 | mytest                                                          \n⠴ | 3       3 | mytest                                                          \n⠦ | 3       4 | mytest                                                          \n⠧ | 4       4 | mytest                                                          \n⠇ | 4       5 | mytest                                                          \n⠏ | 5       5 | mytest                                                          \n✖ | 5       5 | mytest [7.2s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:31:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:31:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:39:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:39:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:45:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/010.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:45:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.4 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:11:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:31:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:31:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:39:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:39:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:45:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/010.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:45:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 5 | WARN 0 | SKIP 0 | PASS 5 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 303-bslib-html-template\n###"},{"app_name":"304-bslib-card","status":"pass","result":"\n###\nRunning tests for app: 304-bslib-card\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinytest2                                                      \n⠋ |     1   0 | shinytest2                                                      \n✔ |     1   0 | shinytest2 [1.8s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 1.8 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-shinytest2.R:11:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\n🎉🎊🎉🎊🎉🎊🎉🎊🎉🎊🎉\n\nStopping tests for app: 304-bslib-card\n###"},{"app_name":"305-bslib-value-box","status":"pass","result":"\n###\nRunning tests for app: 305-bslib-value-box\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinytest2                                                      \n⠋ |     1   0 | shinytest2                                                      \n✔ |     1   0 | shinytest2 [1.6s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 1.6 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-shinytest2.R:11:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 305-bslib-value-box\n###"},{"app_name":"306-accordion-add-remove","status":"fail","result":"\n###\nRunning tests for app: 306-accordion-add-remove\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinytest2                                                      \n⠋ | 1       0 | shinytest2                                                      \n⠙ | 2       0 | shinytest2                                                      \n⠹ | 3       0 | shinytest2                                                      \n⠸ | 4       0 | shinytest2                                                      \n✖ | 4       0 | shinytest2 [13.2s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-shinytest2.R:23:3'): {shinytest2} recording: accordion-select\nSnapshot of `file` to 'shinytest2/accordion-select-001.png' has changed\nRun `testthat::snapshot_review('shinytest2/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-shinytest2.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-shinytest2.R:34:3'): {shinytest2} recording: accordion-select\nSnapshot of `file` to 'shinytest2/accordion-select-002.png' has changed\nRun `testthat::snapshot_review('shinytest2/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-shinytest2.R:34:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-shinytest2.R:43:3'): {shinytest2} recording: accordion-select\nSnapshot of `file` to 'shinytest2/accordion-select-003.png' has changed\nRun `testthat::snapshot_review('shinytest2/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-shinytest2.R:43:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-shinytest2.R:49:3'): {shinytest2} recording: accordion-select\nSnapshot of `file` to 'shinytest2/accordion-select-004.png' has changed\nRun `testthat::snapshot_review('shinytest2/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-shinytest2.R:49:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.3 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-shinytest2.R:23:3'): {shinytest2} recording: accordion-select\nSnapshot of `file` to 'shinytest2/accordion-select-001.png' has changed\nRun `testthat::snapshot_review('shinytest2/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-shinytest2.R:23:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-shinytest2.R:34:3'): {shinytest2} recording: accordion-select\nSnapshot of `file` to 'shinytest2/accordion-select-002.png' has changed\nRun `testthat::snapshot_review('shinytest2/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-shinytest2.R:34:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-shinytest2.R:43:3'): {shinytest2} recording: accordion-select\nSnapshot of `file` to 'shinytest2/accordion-select-003.png' has changed\nRun `testthat::snapshot_review('shinytest2/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-shinytest2.R:43:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-shinytest2.R:49:3'): {shinytest2} recording: accordion-select\nSnapshot of `file` to 'shinytest2/accordion-select-004.png' has changed\nRun `testthat::snapshot_review('shinytest2/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-shinytest2.R:49:2\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 0 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 306-accordion-add-remove\n###"},{"app_name":"307-accordion-replace","status":"fail","result":"\n###\nRunning tests for app: 307-accordion-replace\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 307-accordion-replace\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:41103/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 3886\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55a70a1014e3 <unknown>\npxjava - #1 0x55a709e30c76 <unknown>\npxjava - #2 0x55a709e5e04a <unknown>\npxjava - #3 0x55a709e594a1 <unknown>\npxjava - #4 0x55a709e56029 <unknown>\npxjava - #5 0x55a709e94ccc <unknown>\npxjava - #6 0x55a709e9447f <unknown>\npxjava - #7 0x55a709e8bde3 <unknown>\npxjava - #8 0x55a709e612dd <unknown>\npxjava - #9 0x55a709e6234e <unknown>\npxjava - #10 0x55a70a0c13e4 <unknown>\npxjava - #11 0x55a70a0c53d7 <unknown>\npxjava - #12 0x55a70a0cfb20 <unknown>\npxjava - #13 0x55a70a0c6023 <unknown>\npxjava - #14 0x55a70a0941aa <unknown>\npxjava - #15 0x55a70a0ea6b8 <unknown>\npxjava - #16 0x55a70a0ea847 <unknown>\npxjava - #17 0x55a70a0fa243 <unknown>\npxjava - #18 0x7ff868716609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 307-accordion-replace\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/307-accordion-replace\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fb810877\"),      list(envir = .GlobalEnv, quote | __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485fb810877\"), list(envir = .GlobalEnv,      quote = TRUE))| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(\"Execute hidden plot\")\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 54 1 54 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55abf619a6b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 307-accordion-replace - shinyjster - chrome - Execute hidden plot\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/307-accordion-replace - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 307-accordion-replace - shinyjster - chrome - Execute hidden plot\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/307-accordion-replace - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 307-accordion-replace\n###"},{"app_name":"308-sidebar-kitchen-sink","status":"pass","result":"\n###\nRunning tests for app: 308-sidebar-kitchen-sink\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinytest2                                                      \n⠋ |   1     0 | shinytest2                                                      \n⠙ |   1 1   0 | shinytest2                                                      \n✔ |   1 1   0 | shinytest2 [9.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-shinytest2.R:19:3'): {shinytest2} recording: 308-sidebar-kitchen-sink\n! Shiny inputs should have unique HTML id values.\nℹ The following HTML id values are not unique:\n• foo\nBacktrace:\n    ▆\n 1. └─AppDriver$new(...) at test-shinytest2.R:19:2\n 2.   └─shinytest2 (local) initialize(...)\n 3.     └─shinytest2:::app_initialize(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─shinytest2:::app_initialize_(self, private, ..., view = view)\n 6.         └─shinytest2:::app_check_unique_names(self, private)\n 7.           └─shinytest2:::app_warn(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.6 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• empty test (1): 'test-shinytest2.R:15:1'\n\n[ FAIL 0 | WARN 1 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 308-sidebar-kitchen-sink\n###"},{"app_name":"309-flexdashboard-tabs-navs","status":"fail","result":"\n###\nRunning tests for app: 309-flexdashboard-tabs-navs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinytest2                                                      \n⠋ | 1       0 | shinytest2                                                      \n⠙ | 2       0 | shinytest2                                                      \n⠹ | 3       0 | shinytest2                                                      \n✖ | 3       0 | shinytest2 [49.4s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinytest2.R:23:5'): 309-flexdashboard-tabs-navs with BS3\nError in `app_initialize(self, private, app_dir = app_dir, ..., load_timeout = load_timeout, \n    timeout = timeout, wait = wait, expect_values_screenshot_args = expect_values_screenshot_args, \n    screenshot_args = screenshot_args, check_names = check_names, \n    name = name, variant = variant, view = view, height = height, \n    width = width, seed = seed, clean_logs = clean_logs, shiny_args = shiny_args, \n    render_args = render_args, options = options)`: Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\n\n\nℹ You can inspect the failed AppDriver object via `rlang::last_error()$app`\nℹ AppDriver logs:\n{shinytest2} R  info   05:57:52.76 Start AppDriver initialization\n{shinytest2} R  info   05:57:52.76 Starting Shiny app\n{shinytest2} R  info   05:57:53.65 Creating new ChromoteSession\n{shinytest2} R  info   05:57:53.74 Setting window size: 1292x798\n{shinytest2} R  info   05:57:53.74 Setting window size to `798`x`1292`\n{shinytest2} R  info   05:57:53.74 Navigating to Shiny app\n{shinytest2} R  info   05:57:53.87 Injecting shiny-tracer.js\n{chromote}   JS info   05:57:53.89 shinytest2; jQuery not found\n{chromote}   JS info   05:57:53.90 shinytest2; Loaded\n{shinytest2} R  info   05:57:53.90 Waiting for Shiny to become ready\n{shinytest2} R  info   05:58:08.97 Error while initializing AppDriver:\n                                   Shiny app did not become stable in 15000ms.\n                                   Message: Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n                                   Caused by error in `chromote_wait_for_condition()`:\n                                   ! Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n{shiny}      R  stderr ----------- Loading required package: shiny\n{shiny}      R  stderr ----------- Running application in test mode.\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr ----------- Listening on http://127.0.0.1:4516\n{shiny}      R  stderr ----------- Warning: Error in compile_data: Error: Undefined variable: \"$primary\".\n{shiny}      R  stderr -----------         on line 9:68 of ../../../../../_temp/Library/shiny/www/shared/shiny_scss/bootstrap.scss\n{shiny}      R  stderr -----------         from line 11:9 of stdin\n{shiny}      R  stderr ----------- >> efix}primary-rgb, red($primary),green($primary),blue($primary)) !default;\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------    ------------------------------------------^\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------   15: <Anonymous>\n{shiny}      R  stderr -----------   13: rmarkdown::run\n{shiny}      R  stderr -----------   12: <Anonymous>\n{shiny}      R  stderr -----------   11: <Anonymous>\n{shiny}      R  stderr -----------   10: do.call\n{shiny}      R  stderr -----------    9: saveRDS\n{shiny}      R  stderr -----------    8: withCallingHandlers\n{shiny}      R  stderr -----------    7: doTryCatch\n{shiny}      R  stderr -----------    6: tryCatchOne\n{shiny}      R  stderr -----------    5: tryCatchList\n{shiny}      R  stderr -----------    2: tryCatchList\n{shiny}      R  stderr -----------    1: tryCatch\n\n\nCaused by error in `app_initialize_()`:\n! Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nBacktrace:\n     ▆\n  1. ├─AppDriver$new(...) at test-shinytest2.R:23:4\n  2. │ └─shinytest2 (local) initialize(...)\n  3. │   └─shinytest2:::app_initialize(...)\n  4. │     ├─base::withCallingHandlers(...)\n  5. │     └─shinytest2:::app_initialize_(self, private, ..., view = view)\n  6. │       ├─base::withCallingHandlers(...)\n  7. │       └─self$wait_for_js(...)\n  8. │         └─shinytest2:::app_wait_for_js(...)\n  9. │           └─shinytest2:::chromote_wait_for_condition(...)\n 10. │             └─rlang::abort(...)\n 11. │               └─rlang:::signal_abort(cnd, .file)\n 12. │                 └─base::signalCondition(cnd)\n 13. ├─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 14. │ └─shinytest2:::app_abort(...)\n 15. │   └─rlang::abort(..., app = self, call = call)\n 16. │     └─rlang:::signal_abort(cnd, .file)\n 17. │       └─base::signalCondition(cnd)\n 18. └─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 19.   └─shinytest2:::app_abort(...)\n 20.     └─rlang::abort(..., app = self, call = call)\n\nError ('test-shinytest2.R:23:5'): 309-flexdashboard-tabs-navs with BS4\nError in `app_initialize(self, private, app_dir = app_dir, ..., load_timeout = load_timeout, \n    timeout = timeout, wait = wait, expect_values_screenshot_args = expect_values_screenshot_args, \n    screenshot_args = screenshot_args, check_names = check_names, \n    name = name, variant = variant, view = view, height = height, \n    width = width, seed = seed, clean_logs = clean_logs, shiny_args = shiny_args, \n    render_args = render_args, options = options)`: Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\n\n\nℹ You can inspect the failed AppDriver object via `rlang::last_error()$app`\nℹ AppDriver logs:\n{shinytest2} R  info   05:58:09.18 Start AppDriver initialization\n{shinytest2} R  info   05:58:09.18 Starting Shiny app\n{shinytest2} R  info   05:58:10.01 Creating new ChromoteSession\n{shinytest2} R  info   05:58:10.05 Setting window size: 1292x798\n{shinytest2} R  info   05:58:10.05 Setting window size to `798`x`1292`\n{shinytest2} R  info   05:58:10.05 Navigating to Shiny app\n{shinytest2} R  info   05:58:10.18 Injecting shiny-tracer.js\n{chromote}   JS info   05:58:10.18 shinytest2; jQuery not found\n{chromote}   JS info   05:58:10.19 shinytest2; Loaded\n{shinytest2} R  info   05:58:10.19 Waiting for Shiny to become ready\n{shinytest2} R  info   05:58:25.23 Error while initializing AppDriver:\n                                   Shiny app did not become stable in 15000ms.\n                                   Message: Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n                                   Caused by error in `chromote_wait_for_condition()`:\n                                   ! Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n{shiny}      R  stderr ----------- Loading required package: shiny\n{shiny}      R  stderr ----------- Running application in test mode.\n{shiny}      R  stderr ----------- createTcpServer: address already in use\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr ----------- Listening on http://127.0.0.1:4745\n{shiny}      R  stderr ----------- Warning: Error in compile_data: Error: Undefined variable: \"$primary\".\n{shiny}      R  stderr -----------         on line 9:68 of ../../../../../_temp/Library/shiny/www/shared/shiny_scss/bootstrap.scss\n{shiny}      R  stderr -----------         from line 11:9 of stdin\n{shiny}      R  stderr ----------- >> efix}primary-rgb, red($primary),green($primary),blue($primary)) !default;\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------    ------------------------------------------^\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------   15: <Anonymous>\n{shiny}      R  stderr -----------   13: rmarkdown::run\n{shiny}      R  stderr -----------   12: <Anonymous>\n{shiny}      R  stderr -----------   11: <Anonymous>\n{shiny}      R  stderr -----------   10: do.call\n{shiny}      R  stderr -----------    9: saveRDS\n{shiny}      R  stderr -----------    8: withCallingHandlers\n{shiny}      R  stderr -----------    7: doTryCatch\n{shiny}      R  stderr -----------    6: tryCatchOne\n{shiny}      R  stderr -----------    5: tryCatchList\n{shiny}      R  stderr -----------    2: tryCatchList\n{shiny}      R  stderr -----------    1: tryCatch\n\n\nCaused by error in `app_initialize_()`:\n! Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nBacktrace:\n     ▆\n  1. ├─AppDriver$new(...) at test-shinytest2.R:23:4\n  2. │ └─shinytest2 (local) initialize(...)\n  3. │   └─shinytest2:::app_initialize(...)\n  4. │     ├─base::withCallingHandlers(...)\n  5. │     └─shinytest2:::app_initialize_(self, private, ..., view = view)\n  6. │       ├─base::withCallingHandlers(...)\n  7. │       └─self$wait_for_js(...)\n  8. │         └─shinytest2:::app_wait_for_js(...)\n  9. │           └─shinytest2:::chromote_wait_for_condition(...)\n 10. │             └─rlang::abort(...)\n 11. │               └─rlang:::signal_abort(cnd, .file)\n 12. │                 └─base::signalCondition(cnd)\n 13. ├─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 14. │ └─shinytest2:::app_abort(...)\n 15. │   └─rlang::abort(..., app = self, call = call)\n 16. │     └─rlang:::signal_abort(cnd, .file)\n 17. │       └─base::signalCondition(cnd)\n 18. └─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 19.   └─shinytest2:::app_abort(...)\n 20.     └─rlang::abort(..., app = self, call = call)\n\nError ('test-shinytest2.R:23:5'): 309-flexdashboard-tabs-navs with BS5\nError in `app_initialize(self, private, app_dir = app_dir, ..., load_timeout = load_timeout, \n    timeout = timeout, wait = wait, expect_values_screenshot_args = expect_values_screenshot_args, \n    screenshot_args = screenshot_args, check_names = check_names, \n    name = name, variant = variant, view = view, height = height, \n    width = width, seed = seed, clean_logs = clean_logs, shiny_args = shiny_args, \n    render_args = render_args, options = options)`: Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\n\n\nℹ You can inspect the failed AppDriver object via `rlang::last_error()$app`\nℹ AppDriver logs:\n{shinytest2} R  info   05:58:25.44 Start AppDriver initialization\n{shinytest2} R  info   05:58:25.44 Starting Shiny app\n{shinytest2} R  info   05:58:26.26 Creating new ChromoteSession\n{shinytest2} R  info   05:58:26.30 Setting window size: 1292x798\n{shinytest2} R  info   05:58:26.30 Setting window size to `798`x`1292`\n{shinytest2} R  info   05:58:26.31 Navigating to Shiny app\n{shinytest2} R  info   05:58:26.43 Injecting shiny-tracer.js\n{chromote}   JS info   05:58:26.44 shinytest2; jQuery not found\n{chromote}   JS info   05:58:26.44 shinytest2; Loaded\n{shinytest2} R  info   05:58:26.44 Waiting for Shiny to become ready\n{shinytest2} R  info   05:58:41.49 Error while initializing AppDriver:\n                                   Shiny app did not become stable in 15000ms.\n                                   Message: Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n                                   Caused by error in `chromote_wait_for_condition()`:\n                                   ! Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n{shiny}      R  stderr ----------- Loading required package: shiny\n{shiny}      R  stderr ----------- Running application in test mode.\n{shiny}      R  stderr ----------- createTcpServer: address already in use\n{shiny}      R  stderr ----------- createTcpServer: address already in use\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr ----------- Listening on http://127.0.0.1:3809\n{shiny}      R  stderr ----------- Warning: Error in compile_data: Error: Undefined variable: \"$primary\".\n{shiny}      R  stderr -----------         on line 9:68 of ../../../../../_temp/Library/shiny/www/shared/shiny_scss/bootstrap.scss\n{shiny}      R  stderr -----------         from line 11:9 of stdin\n{shiny}      R  stderr ----------- >> efix}primary-rgb, red($primary),green($primary),blue($primary)) !default;\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------    ------------------------------------------^\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------   15: <Anonymous>\n{shiny}      R  stderr -----------   13: rmarkdown::run\n{shiny}      R  stderr -----------   12: <Anonymous>\n{shiny}      R  stderr -----------   11: <Anonymous>\n{shiny}      R  stderr -----------   10: do.call\n{shiny}      R  stderr -----------    9: saveRDS\n{shiny}      R  stderr -----------    8: withCallingHandlers\n{shiny}      R  stderr -----------    7: doTryCatch\n{shiny}      R  stderr -----------    6: tryCatchOne\n{shiny}      R  stderr -----------    5: tryCatchList\n{shiny}      R  stderr -----------    2: tryCatchList\n{shiny}      R  stderr -----------    1: tryCatch\n\n\nCaused by error in `app_initialize_()`:\n! Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nBacktrace:\n     ▆\n  1. ├─AppDriver$new(...) at test-shinytest2.R:23:4\n  2. │ └─shinytest2 (local) initialize(...)\n  3. │   └─shinytest2:::app_initialize(...)\n  4. │     ├─base::withCallingHandlers(...)\n  5. │     └─shinytest2:::app_initialize_(self, private, ..., view = view)\n  6. │       ├─base::withCallingHandlers(...)\n  7. │       └─self$wait_for_js(...)\n  8. │         └─shinytest2:::app_wait_for_js(...)\n  9. │           └─shinytest2:::chromote_wait_for_condition(...)\n 10. │             └─rlang::abort(...)\n 11. │               └─rlang:::signal_abort(cnd, .file)\n 12. │                 └─base::signalCondition(cnd)\n 13. ├─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 14. │ └─shinytest2:::app_abort(...)\n 15. │   └─rlang::abort(..., app = self, call = call)\n 16. │     └─rlang:::signal_abort(cnd, .file)\n 17. │       └─base::signalCondition(cnd)\n 18. └─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 19.   └─shinytest2:::app_abort(...)\n 20.     └─rlang::abort(..., app = self, call = call)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 49.6 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinytest2.R:23:5'): 309-flexdashboard-tabs-navs with BS3\nError in `app_initialize(self, private, app_dir = app_dir, ..., load_timeout = load_timeout, \n    timeout = timeout, wait = wait, expect_values_screenshot_args = expect_values_screenshot_args, \n    screenshot_args = screenshot_args, check_names = check_names, \n    name = name, variant = variant, view = view, height = height, \n    width = width, seed = seed, clean_logs = clean_logs, shiny_args = shiny_args, \n    render_args = render_args, options = options)`: Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\n\n\nℹ You can inspect the failed AppDriver object via `rlang::last_error()$app`\nℹ AppDriver logs:\n{shinytest2} R  info   05:57:52.76 Start AppDriver initialization\n{shinytest2} R  info   05:57:52.76 Starting Shiny app\n{shinytest2} R  info   05:57:53.65 Creating new ChromoteSession\n{shinytest2} R  info   05:57:53.74 Setting window size: 1292x798\n{shinytest2} R  info   05:57:53.74 Setting window size to `798`x`1292`\n{shinytest2} R  info   05:57:53.74 Navigating to Shiny app\n{shinytest2} R  info   05:57:53.87 Injecting shiny-tracer.js\n{chromote}   JS info   05:57:53.89 shinytest2; jQuery not found\n{chromote}   JS info   05:57:53.90 shinytest2; Loaded\n{shinytest2} R  info   05:57:53.90 Waiting for Shiny to become ready\n{shinytest2} R  info   05:58:08.97 Error while initializing AppDriver:\n                                   Shiny app did not become stable in 15000ms.\n                                   Message: Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n                                   Caused by error in `chromote_wait_for_condition()`:\n                                   ! Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n{shiny}      R  stderr ----------- Loading required package: shiny\n{shiny}      R  stderr ----------- Running application in test mode.\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr ----------- Listening on http://127.0.0.1:4516\n{shiny}      R  stderr ----------- Warning: Error in compile_data: Error: Undefined variable: \"$primary\".\n{shiny}      R  stderr -----------         on line 9:68 of ../../../../../_temp/Library/shiny/www/shared/shiny_scss/bootstrap.scss\n{shiny}      R  stderr -----------         from line 11:9 of stdin\n{shiny}      R  stderr ----------- >> efix}primary-rgb, red($primary),green($primary),blue($primary)) !default;\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------    ------------------------------------------^\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------   15: <Anonymous>\n{shiny}      R  stderr -----------   13: rmarkdown::run\n{shiny}      R  stderr -----------   12: <Anonymous>\n{shiny}      R  stderr -----------   11: <Anonymous>\n{shiny}      R  stderr -----------   10: do.call\n{shiny}      R  stderr -----------    9: saveRDS\n{shiny}      R  stderr -----------    8: withCallingHandlers\n{shiny}      R  stderr -----------    7: doTryCatch\n{shiny}      R  stderr -----------    6: tryCatchOne\n{shiny}      R  stderr -----------    5: tryCatchList\n{shiny}      R  stderr -----------    2: tryCatchList\n{shiny}      R  stderr -----------    1: tryCatch\n\n\nCaused by error in `app_initialize_()`:\n! Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nBacktrace:\n     ▆\n  1. ├─AppDriver$new(...) at test-shinytest2.R:23:4\n  2. │ └─shinytest2 (local) initialize(...)\n  3. │   └─shinytest2:::app_initialize(...)\n  4. │     ├─base::withCallingHandlers(...)\n  5. │     └─shinytest2:::app_initialize_(self, private, ..., view = view)\n  6. │       ├─base::withCallingHandlers(...)\n  7. │       └─self$wait_for_js(...)\n  8. │         └─shinytest2:::app_wait_for_js(...)\n  9. │           └─shinytest2:::chromote_wait_for_condition(...)\n 10. │             └─rlang::abort(...)\n 11. │               └─rlang:::signal_abort(cnd, .file)\n 12. │                 └─base::signalCondition(cnd)\n 13. ├─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 14. │ └─shinytest2:::app_abort(...)\n 15. │   └─rlang::abort(..., app = self, call = call)\n 16. │     └─rlang:::signal_abort(cnd, .file)\n 17. │       └─base::signalCondition(cnd)\n 18. └─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 19.   └─shinytest2:::app_abort(...)\n 20.     └─rlang::abort(..., app = self, call = call)\n\nError ('test-shinytest2.R:23:5'): 309-flexdashboard-tabs-navs with BS4\nError in `app_initialize(self, private, app_dir = app_dir, ..., load_timeout = load_timeout, \n    timeout = timeout, wait = wait, expect_values_screenshot_args = expect_values_screenshot_args, \n    screenshot_args = screenshot_args, check_names = check_names, \n    name = name, variant = variant, view = view, height = height, \n    width = width, seed = seed, clean_logs = clean_logs, shiny_args = shiny_args, \n    render_args = render_args, options = options)`: Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\n\n\nℹ You can inspect the failed AppDriver object via `rlang::last_error()$app`\nℹ AppDriver logs:\n{shinytest2} R  info   05:58:09.18 Start AppDriver initialization\n{shinytest2} R  info   05:58:09.18 Starting Shiny app\n{shinytest2} R  info   05:58:10.01 Creating new ChromoteSession\n{shinytest2} R  info   05:58:10.05 Setting window size: 1292x798\n{shinytest2} R  info   05:58:10.05 Setting window size to `798`x`1292`\n{shinytest2} R  info   05:58:10.05 Navigating to Shiny app\n{shinytest2} R  info   05:58:10.18 Injecting shiny-tracer.js\n{chromote}   JS info   05:58:10.18 shinytest2; jQuery not found\n{chromote}   JS info   05:58:10.19 shinytest2; Loaded\n{shinytest2} R  info   05:58:10.19 Waiting for Shiny to become ready\n{shinytest2} R  info   05:58:25.23 Error while initializing AppDriver:\n                                   Shiny app did not become stable in 15000ms.\n                                   Message: Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n                                   Caused by error in `chromote_wait_for_condition()`:\n                                   ! Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n{shiny}      R  stderr ----------- Loading required package: shiny\n{shiny}      R  stderr ----------- Running application in test mode.\n{shiny}      R  stderr ----------- createTcpServer: address already in use\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr ----------- Listening on http://127.0.0.1:4745\n{shiny}      R  stderr ----------- Warning: Error in compile_data: Error: Undefined variable: \"$primary\".\n{shiny}      R  stderr -----------         on line 9:68 of ../../../../../_temp/Library/shiny/www/shared/shiny_scss/bootstrap.scss\n{shiny}      R  stderr -----------         from line 11:9 of stdin\n{shiny}      R  stderr ----------- >> efix}primary-rgb, red($primary),green($primary),blue($primary)) !default;\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------    ------------------------------------------^\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------   15: <Anonymous>\n{shiny}      R  stderr -----------   13: rmarkdown::run\n{shiny}      R  stderr -----------   12: <Anonymous>\n{shiny}      R  stderr -----------   11: <Anonymous>\n{shiny}      R  stderr -----------   10: do.call\n{shiny}      R  stderr -----------    9: saveRDS\n{shiny}      R  stderr -----------    8: withCallingHandlers\n{shiny}      R  stderr -----------    7: doTryCatch\n{shiny}      R  stderr -----------    6: tryCatchOne\n{shiny}      R  stderr -----------    5: tryCatchList\n{shiny}      R  stderr -----------    2: tryCatchList\n{shiny}      R  stderr -----------    1: tryCatch\n\n\nCaused by error in `app_initialize_()`:\n! Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nBacktrace:\n     ▆\n  1. ├─AppDriver$new(...) at test-shinytest2.R:23:4\n  2. │ └─shinytest2 (local) initialize(...)\n  3. │   └─shinytest2:::app_initialize(...)\n  4. │     ├─base::withCallingHandlers(...)\n  5. │     └─shinytest2:::app_initialize_(self, private, ..., view = view)\n  6. │       ├─base::withCallingHandlers(...)\n  7. │       └─self$wait_for_js(...)\n  8. │         └─shinytest2:::app_wait_for_js(...)\n  9. │           └─shinytest2:::chromote_wait_for_condition(...)\n 10. │             └─rlang::abort(...)\n 11. │               └─rlang:::signal_abort(cnd, .file)\n 12. │                 └─base::signalCondition(cnd)\n 13. ├─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 14. │ └─shinytest2:::app_abort(...)\n 15. │   └─rlang::abort(..., app = self, call = call)\n 16. │     └─rlang:::signal_abort(cnd, .file)\n 17. │       └─base::signalCondition(cnd)\n 18. └─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 19.   └─shinytest2:::app_abort(...)\n 20.     └─rlang::abort(..., app = self, call = call)\n\nError ('test-shinytest2.R:23:5'): 309-flexdashboard-tabs-navs with BS5\nError in `app_initialize(self, private, app_dir = app_dir, ..., load_timeout = load_timeout, \n    timeout = timeout, wait = wait, expect_values_screenshot_args = expect_values_screenshot_args, \n    screenshot_args = screenshot_args, check_names = check_names, \n    name = name, variant = variant, view = view, height = height, \n    width = width, seed = seed, clean_logs = clean_logs, shiny_args = shiny_args, \n    render_args = render_args, options = options)`: Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\n\n\nℹ You can inspect the failed AppDriver object via `rlang::last_error()$app`\nℹ AppDriver logs:\n{shinytest2} R  info   05:58:25.44 Start AppDriver initialization\n{shinytest2} R  info   05:58:25.44 Starting Shiny app\n{shinytest2} R  info   05:58:26.26 Creating new ChromoteSession\n{shinytest2} R  info   05:58:26.30 Setting window size: 1292x798\n{shinytest2} R  info   05:58:26.30 Setting window size to `798`x`1292`\n{shinytest2} R  info   05:58:26.31 Navigating to Shiny app\n{shinytest2} R  info   05:58:26.43 Injecting shiny-tracer.js\n{chromote}   JS info   05:58:26.44 shinytest2; jQuery not found\n{chromote}   JS info   05:58:26.44 shinytest2; Loaded\n{shinytest2} R  info   05:58:26.44 Waiting for Shiny to become ready\n{shinytest2} R  info   05:58:41.49 Error while initializing AppDriver:\n                                   Shiny app did not become stable in 15000ms.\n                                   Message: Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n                                   Caused by error in `chromote_wait_for_condition()`:\n                                   ! Timed out waiting for JavaScript script to return `true`\n                                   ℹ `timeout`: 15000\n                                   ℹ `script`:\n                                   window.shinytest2 && window.shinytest2.ready === true\n{shiny}      R  stderr ----------- Loading required package: shiny\n{shiny}      R  stderr ----------- Running application in test mode.\n{shiny}      R  stderr ----------- createTcpServer: address already in use\n{shiny}      R  stderr ----------- createTcpServer: address already in use\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr ----------- Listening on http://127.0.0.1:3809\n{shiny}      R  stderr ----------- Warning: Error in compile_data: Error: Undefined variable: \"$primary\".\n{shiny}      R  stderr -----------         on line 9:68 of ../../../../../_temp/Library/shiny/www/shared/shiny_scss/bootstrap.scss\n{shiny}      R  stderr -----------         from line 11:9 of stdin\n{shiny}      R  stderr ----------- >> efix}primary-rgb, red($primary),green($primary),blue($primary)) !default;\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------    ------------------------------------------^\n{shiny}      R  stderr ----------- \n{shiny}      R  stderr -----------   15: <Anonymous>\n{shiny}      R  stderr -----------   13: rmarkdown::run\n{shiny}      R  stderr -----------   12: <Anonymous>\n{shiny}      R  stderr -----------   11: <Anonymous>\n{shiny}      R  stderr -----------   10: do.call\n{shiny}      R  stderr -----------    9: saveRDS\n{shiny}      R  stderr -----------    8: withCallingHandlers\n{shiny}      R  stderr -----------    7: doTryCatch\n{shiny}      R  stderr -----------    6: tryCatchOne\n{shiny}      R  stderr -----------    5: tryCatchList\n{shiny}      R  stderr -----------    2: tryCatchList\n{shiny}      R  stderr -----------    1: tryCatch\n\n\nCaused by error in `app_initialize_()`:\n! Shiny app did not become stable in 15000ms.\nMessage: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nCaused by error in `chromote_wait_for_condition()`:\n! Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 15000\nℹ `script`:\nwindow.shinytest2 && window.shinytest2.ready === true\nBacktrace:\n     ▆\n  1. ├─AppDriver$new(...) at test-shinytest2.R:23:4\n  2. │ └─shinytest2 (local) initialize(...)\n  3. │   └─shinytest2:::app_initialize(...)\n  4. │     ├─base::withCallingHandlers(...)\n  5. │     └─shinytest2:::app_initialize_(self, private, ..., view = view)\n  6. │       ├─base::withCallingHandlers(...)\n  7. │       └─self$wait_for_js(...)\n  8. │         └─shinytest2:::app_wait_for_js(...)\n  9. │           └─shinytest2:::chromote_wait_for_condition(...)\n 10. │             └─rlang::abort(...)\n 11. │               └─rlang:::signal_abort(cnd, .file)\n 12. │                 └─base::signalCondition(cnd)\n 13. ├─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 14. │ └─shinytest2:::app_abort(...)\n 15. │   └─rlang::abort(..., app = self, call = call)\n 16. │     └─rlang:::signal_abort(cnd, .file)\n 17. │       └─base::signalCondition(cnd)\n 18. └─shinytest2 (local) `<fn>`(`<rlng_rrr>`)\n 19.   └─shinytest2:::app_abort(...)\n 20.     └─rlang::abort(..., app = self, call = call)\n\n[ FAIL 3 | WARN 0 | SKIP 0 | PASS 0 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 309-flexdashboard-tabs-navs\n###"},{"app_name":"310-bslib-sidebar-dynamic","status":"pass","result":"\n###\nRunning tests for app: 310-bslib-sidebar-dynamic\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | 310-bslib-sidebar-dynamic                                       \n⠋ |         1 | 310-bslib-sidebar-dynamic                                       \n⠇ |         9 | 310-bslib-sidebar-dynamic                                       \n⠏ |        10 | 310-bslib-sidebar-dynamic                                       \n⠦ |        17 | 310-bslib-sidebar-dynamic                                       \n⠸ |        24 | 310-bslib-sidebar-dynamic                                       \n⠋ |        31 | 310-bslib-sidebar-dynamic                                       \n⠇ |        39 | 310-bslib-sidebar-dynamic                                       \n⠧ |        48 | 310-bslib-sidebar-dynamic                                       \n⠼ |        55 | 310-bslib-sidebar-dynamic                                       \n⠹ |        63 | 310-bslib-sidebar-dynamic                                       \n⠋ |        71 | 310-bslib-sidebar-dynamic                                       \n✔ |        78 | 310-bslib-sidebar-dynamic [10.5s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.5 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 78 ]\n\nStopping tests for app: 310-bslib-sidebar-dynamic\n###"},{"app_name":"311-bslib-sidebar-toggle-methods","status":"pass","result":"\n###\nRunning tests for app: 311-bslib-sidebar-toggle-methods\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinytest2                                                      \n⠋ |         1 | shinytest2                                                      \n⠸ |         4 | shinytest2                                                      \n⠹ |        13 | shinytest2                                                      \n⠸ |        24 | shinytest2                                                      \n⠋ |        31 | shinytest2                                                      \n⠧ |        38 | shinytest2                                                      \n✔ |        44 | shinytest2 [8.4s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 8.4 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 44 ]\n\nStopping tests for app: 311-bslib-sidebar-toggle-methods\n###"},{"app_name":"313-bslib-card-tab-focus","status":"fail","result":"\n###\nRunning tests for app: 313-bslib-card-tab-focus\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | 313-bslib-card-tab-focus                                        \n⠋ |         1 | 313-bslib-card-tab-focus                                        \n⠴ |         6 | 313-bslib-card-tab-focus                                        \n⠋ |        11 | 313-bslib-card-tab-focus                                        \n⠴ |        16 | 313-bslib-card-tab-focus                                        \n⠼ |        25 | 313-bslib-card-tab-focus                                        \n⠏ |        30 | 313-bslib-card-tab-focus                                        \n⠴ |        36 | 313-bslib-card-tab-focus                                        \n⠋ |        41 | 313-bslib-card-tab-focus                                        \n⠼ |        45 | 313-bslib-card-tab-focus                                        \n⠇ |        49 | 313-bslib-card-tab-focus                                        \n⠼ | 1      54 | 313-bslib-card-tab-focus                                        \n⠦ | 3      54 | 313-bslib-card-tab-focus                                        \n⠇ | 5      54 | 313-bslib-card-tab-focus                                        \n⠼ | 5      60 | 313-bslib-card-tab-focus                                        \n⠸ | 5      69 | 313-bslib-card-tab-focus                                        \n⠇ | 5      74 | 313-bslib-card-tab-focus                                        \n⠋ | 5      76 | 313-bslib-card-tab-focus                                        \n⠧ | 5      83 | 313-bslib-card-tab-focus                                        \n⠼ | 5      90 | 313-bslib-card-tab-focus                                        \n⠏ | 5      95 | 313-bslib-card-tab-focus                                        \n⠼ | 5     100 | 313-bslib-card-tab-focus                                        \n⠦ | 5     102 | 313-bslib-card-tab-focus                                        \n✖ | 5     102 | 313-bslib-card-tab-focus [10.8s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-313-bslib-card-tab-focus.R:260:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('#dates input:first-child')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \"#dates input:first-child\") at test-313-bslib-card-tab-focus.R:260:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\nFailure ('test-313-bslib-card-tab-focus.R:262:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('#dates input:last-child')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \"#dates input:last-child\") at test-313-bslib-card-tab-focus.R:262:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\nFailure ('test-313-bslib-card-tab-focus.R:264:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('.bslib-full-screen-exit')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \".bslib-full-screen-exit\") at test-313-bslib-card-tab-focus.R:264:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\nFailure ('test-313-bslib-card-tab-focus.R:266:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('#letter-selectized')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \"#letter-selectized\") at test-313-bslib-card-tab-focus.R:266:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\nFailure ('test-313-bslib-card-tab-focus.R:274:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('#dates input:last-child')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \"#dates input:last-child\") at test-313-bslib-card-tab-focus.R:274:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 11.0 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-313-bslib-card-tab-focus.R:260:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('#dates input:first-child')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \"#dates input:first-child\") at test-313-bslib-card-tab-focus.R:260:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\nFailure ('test-313-bslib-card-tab-focus.R:262:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('#dates input:last-child')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \"#dates input:last-child\") at test-313-bslib-card-tab-focus.R:262:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\nFailure ('test-313-bslib-card-tab-focus.R:264:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('.bslib-full-screen-exit')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \".bslib-full-screen-exit\") at test-313-bslib-card-tab-focus.R:264:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\nFailure ('test-313-bslib-card-tab-focus.R:266:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('#letter-selectized')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \"#letter-selectized\") at test-313-bslib-card-tab-focus.R:266:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\nFailure ('test-313-bslib-card-tab-focus.R:274:3'): fullscreen interior card with inputs (forward tab cycle)\napp$get_js(\"document.activeElement == document.querySelector('#dates input:last-child')\") is not TRUE\n\n`actual`:   FALSE\n`expected`: TRUE \nBacktrace:\n    ▆\n 1. └─expect_focus(app, \"#dates input:last-child\") at test-313-bslib-card-tab-focus.R:274:2\n 2.   └─testthat::expect_true(app$get_js(!!js)) at test-313-bslib-card-tab-focus.R:30:2\n\n[ FAIL 5 | WARN 0 | SKIP 0 | PASS 102 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 313-bslib-card-tab-focus\n###"},{"app_name":"314-bslib-tooltips","status":"pass","result":"\n###\nRunning tests for app: 314-bslib-tooltips\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | 314-bslib-tooltips                                              \n⠋ |         1 | 314-bslib-tooltips                                              \n⠴ |         6 | 314-bslib-tooltips                                              \n⠏ |        10 | 314-bslib-tooltips                                              \n⠸ |     1  13 | 314-bslib-tooltips                                              \n✔ |     1  13 | 314-bslib-tooltips [5.2s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.2 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• empty test (1): 'test-314-bslib-tooltips.R:107:1'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 13 ]\n\nStopping tests for app: 314-bslib-tooltips\n###"},{"app_name":"315-bslib-input-switch","status":"fail","result":"\n###\nRunning tests for app: 315-bslib-input-switch\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | 315-bslib-input-switch                                          \n⠋ |         1 | 315-bslib-input-switch                                          \n⠙ |         2 | 315-bslib-input-switch                                          \n⠹ | 1       2 | 315-bslib-input-switch                                          \n⠴ | 4       2 | 315-bslib-input-switch                                          \n✖ | 4       2 | 315-bslib-input-switch [15.8s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-315-bslib-input-switch.R:47:3'): toggle_switch()\nError in `app_get_values(self, private, input = input, output = output, \n    export = export, ..., hash_images = hash_images)`: Shiny server returned 404 for values URL: http://127.0.0.1:3856/session/308c84a3e38dd94ce10461b2910d99d9/dataobj/shinytest?w=&nonce=272281c0e&input=check_spelling&&&format=rds&sortC=1\nℹ Is `shiny::runApp(test.mode = TRUE)` enabled?\nBacktrace:\n     ▆\n  1. ├─testthat::expect_false(app$get_value(input = \"check_spelling\")) at test-315-bslib-input-switch.R:47:2\n  2. │ └─testthat::quasi_label(enquo(object), label, arg = \"object\")\n  3. │   └─rlang::eval_bare(expr, quo_get_env(quo))\n  4. └─app$get_value(input = \"check_spelling\")\n  5.   └─shinytest2:::app_get_value(...)\n  6.     └─self$get_values(...)\n  7.       └─shinytest2:::app_get_values(...)\n  8.         └─shinytest2:::app_httr_get(...)\n  9.           └─shinytest2 (local) fn_404(req)\n 10.             └─shinytest2:::app_abort(...)\n 11.               └─rlang::abort(..., app = self, call = call)\n\nError ('test-315-bslib-input-switch.R:54:3'): toggle_switch(value = )\nError in `app_get_values(self, private, input = input, output = output, \n    export = export, ..., hash_images = hash_images)`: Shiny server returned 404 for values URL: http://127.0.0.1:3856/session/308c84a3e38dd94ce10461b2910d99d9/dataobj/shinytest?w=&nonce=272281c0e&input=auto_correction&&&format=rds&sortC=1\nℹ Is `shiny::runApp(test.mode = TRUE)` enabled?\nBacktrace:\n    ▆\n 1. └─set_input_if_not(\"auto_correction\", FALSE) at test-315-bslib-input-switch.R:54:2\n 2.   └─app$get_value(input = input) at test-315-bslib-input-switch.R:16:2\n 3.     └─shinytest2:::app_get_value(...)\n 4.       └─self$get_values(...)\n 5.         └─shinytest2:::app_get_values(...)\n 6.           └─shinytest2:::app_httr_get(...)\n 7.             └─shinytest2 (local) fn_404(req)\n 8.               └─shinytest2:::app_abort(...)\n 9.                 └─rlang::abort(..., app = self, call = call)\n\nError ('test-315-bslib-input-switch.R:64:3'): update_switch(value = )\nError in `app_get_values(self, private, input = input, output = output, \n    export = export, ..., hash_images = hash_images)`: Shiny server returned 404 for values URL: http://127.0.0.1:3856/session/308c84a3e38dd94ce10461b2910d99d9/dataobj/shinytest?w=&nonce=272281c0e&input=check_spelling&&&format=rds&sortC=1\nℹ Is `shiny::runApp(test.mode = TRUE)` enabled?\nBacktrace:\n    ▆\n 1. └─app$get_value(input = \"check_spelling\") at test-315-bslib-input-switch.R:64:2\n 2.   └─shinytest2:::app_get_value(...)\n 3.     └─self$get_values(...)\n 4.       └─shinytest2:::app_get_values(...)\n 5.         └─shinytest2:::app_httr_get(...)\n 6.           └─shinytest2 (local) fn_404(req)\n 7.             └─shinytest2:::app_abort(...)\n 8.               └─rlang::abort(..., app = self, call = call)\n\nError ('test-315-bslib-input-switch.R:78:3'): update_switch(label = )\nError in `chromote_wait_for_condition(self$get_chromote_session(), script, \n    timeout = timeout, interval = interval)`: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 4000\nℹ `script`:\ndocument\n        .querySelector('label[for=\"smart_punctuation\"]')\n        .innerText\n        .includes('Awesome')\nBacktrace:\n    ▆\n 1. └─app$set_inputs(smart_punct_label = \"Awesome Punctuation\")$wait_for_js(\"document\\n        .querySelector('label[for=\\\"smart_punctuation\\\"]')\\n        .innerText\\n        .includes('Awesome')\") at test-315-bslib-input-switch.R:78:2\n 2.   └─shinytest2:::app_wait_for_js(...)\n 3.     └─shinytest2:::chromote_wait_for_condition(self$get_chromote_session(), script, timeout = timeout, interval = interval)\n 4.       └─rlang::abort(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 16.1 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-315-bslib-input-switch.R:47:3'): toggle_switch()\nError in `app_get_values(self, private, input = input, output = output, \n    export = export, ..., hash_images = hash_images)`: Shiny server returned 404 for values URL: http://127.0.0.1:3856/session/308c84a3e38dd94ce10461b2910d99d9/dataobj/shinytest?w=&nonce=272281c0e&input=check_spelling&&&format=rds&sortC=1\nℹ Is `shiny::runApp(test.mode = TRUE)` enabled?\nBacktrace:\n     ▆\n  1. ├─testthat::expect_false(app$get_value(input = \"check_spelling\")) at test-315-bslib-input-switch.R:47:2\n  2. │ └─testthat::quasi_label(enquo(object), label, arg = \"object\")\n  3. │   └─rlang::eval_bare(expr, quo_get_env(quo))\n  4. └─app$get_value(input = \"check_spelling\")\n  5.   └─shinytest2:::app_get_value(...)\n  6.     └─self$get_values(...)\n  7.       └─shinytest2:::app_get_values(...)\n  8.         └─shinytest2:::app_httr_get(...)\n  9.           └─shinytest2 (local) fn_404(req)\n 10.             └─shinytest2:::app_abort(...)\n 11.               └─rlang::abort(..., app = self, call = call)\n\nError ('test-315-bslib-input-switch.R:54:3'): toggle_switch(value = )\nError in `app_get_values(self, private, input = input, output = output, \n    export = export, ..., hash_images = hash_images)`: Shiny server returned 404 for values URL: http://127.0.0.1:3856/session/308c84a3e38dd94ce10461b2910d99d9/dataobj/shinytest?w=&nonce=272281c0e&input=auto_correction&&&format=rds&sortC=1\nℹ Is `shiny::runApp(test.mode = TRUE)` enabled?\nBacktrace:\n    ▆\n 1. └─set_input_if_not(\"auto_correction\", FALSE) at test-315-bslib-input-switch.R:54:2\n 2.   └─app$get_value(input = input) at test-315-bslib-input-switch.R:16:2\n 3.     └─shinytest2:::app_get_value(...)\n 4.       └─self$get_values(...)\n 5.         └─shinytest2:::app_get_values(...)\n 6.           └─shinytest2:::app_httr_get(...)\n 7.             └─shinytest2 (local) fn_404(req)\n 8.               └─shinytest2:::app_abort(...)\n 9.                 └─rlang::abort(..., app = self, call = call)\n\nError ('test-315-bslib-input-switch.R:64:3'): update_switch(value = )\nError in `app_get_values(self, private, input = input, output = output, \n    export = export, ..., hash_images = hash_images)`: Shiny server returned 404 for values URL: http://127.0.0.1:3856/session/308c84a3e38dd94ce10461b2910d99d9/dataobj/shinytest?w=&nonce=272281c0e&input=check_spelling&&&format=rds&sortC=1\nℹ Is `shiny::runApp(test.mode = TRUE)` enabled?\nBacktrace:\n    ▆\n 1. └─app$get_value(input = \"check_spelling\") at test-315-bslib-input-switch.R:64:2\n 2.   └─shinytest2:::app_get_value(...)\n 3.     └─self$get_values(...)\n 4.       └─shinytest2:::app_get_values(...)\n 5.         └─shinytest2:::app_httr_get(...)\n 6.           └─shinytest2 (local) fn_404(req)\n 7.             └─shinytest2:::app_abort(...)\n 8.               └─rlang::abort(..., app = self, call = call)\n\nError ('test-315-bslib-input-switch.R:78:3'): update_switch(label = )\nError in `chromote_wait_for_condition(self$get_chromote_session(), script, \n    timeout = timeout, interval = interval)`: Timed out waiting for JavaScript script to return `true`\nℹ `timeout`: 4000\nℹ `script`:\ndocument\n        .querySelector('label[for=\"smart_punctuation\"]')\n        .innerText\n        .includes('Awesome')\nBacktrace:\n    ▆\n 1. └─app$set_inputs(smart_punct_label = \"Awesome Punctuation\")$wait_for_js(\"document\\n        .querySelector('label[for=\\\"smart_punctuation\\\"]')\\n        .innerText\\n        .includes('Awesome')\") at test-315-bslib-input-switch.R:78:2\n 2.   └─shinytest2:::app_wait_for_js(...)\n 3.     └─shinytest2:::chromote_wait_for_condition(self$get_chromote_session(), script, timeout = timeout, interval = interval)\n 4.       └─rlang::abort(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 2 ]\n\nNo one is perfect!\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 315-bslib-input-switch\n###"},{"app_name":"316-bslib-popovers","status":"fail","result":"\n###\nRunning tests for app: 316-bslib-popovers\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | 316-bslib-popovers                                              \n⠋ |         1 | 316-bslib-popovers                                              \n⠙ |     1   1 | 316-bslib-popovers                                              \n⠹ |     1   2 | 316-bslib-popovers                                              \n⠼ |     1   4 | 316-bslib-popovers                                              \n⠧ | 2   1   5 | 316-bslib-popovers                                              \n✖ | 3   1   5 | 316-bslib-popovers [9.9s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-316-bslib-popovers.R:234:3'): Can put input controls in the popover\napp$wait_for_value(input = \"num\", ignore = 4) not equal to 5.\n1/1 mismatches\n[1] 4 - 5 == -1\n\nFailure ('test-316-bslib-popovers.R:241:3'): Can put input controls in the popover\napp$wait_for_value(input = \"num\", ignore = 4) not equal to 5.\n1/1 mismatches\n[1] 4 - 5 == -1\n\nFailure ('test-316-bslib-popovers.R:243:3'): Can put input controls in the popover\napp$wait_for_value(input = \"num\", ignore = 5) not equal to 6.\n1/1 mismatches\n[1] 5 - 6 == -1\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.0 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• empty test (1): 'test-316-bslib-popovers.R:182:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-316-bslib-popovers.R:234:3'): Can put input controls in the popover\napp$wait_for_value(input = \"num\", ignore = 4) not equal to 5.\n1/1 mismatches\n[1] 4 - 5 == -1\n\nFailure ('test-316-bslib-popovers.R:241:3'): Can put input controls in the popover\napp$wait_for_value(input = \"num\", ignore = 4) not equal to 5.\n1/1 mismatches\n[1] 4 - 5 == -1\n\nFailure ('test-316-bslib-popovers.R:243:3'): Can put input controls in the popover\napp$wait_for_value(input = \"num\", ignore = 5) not equal to 6.\n1/1 mismatches\n[1] 5 - 6 == -1\n\n[ FAIL 3 | WARN 0 | SKIP 1 | PASS 5 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 316-bslib-popovers\n###"},{"app_name":"900-text-jster","status":"fail","result":"\n###\nRunning tests for app: 900-text-jster\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 900-text-jster\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:7645/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 1455\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55c1314674e3 <unknown>\npxjava - #1 0x55c131196c76 <unknown>\npxjava - #2 0x55c1311c404a <unknown>\npxjava - #3 0x55c1311bf4a1 <unknown>\npxjava - #4 0x55c1311bc029 <unknown>\npxjava - #5 0x55c1311faccc <unknown>\npxjava - #6 0x55c1311fa47f <unknown>\npxjava - #7 0x55c1311f1de3 <unknown>\npxjava - #8 0x55c1311c72dd <unknown>\npxjava - #9 0x55c1311c834e <unknown>\npxjava - #10 0x55c1314273e4 <unknown>\npxjava - #11 0x55c13142b3d7 <unknown>\npxjava - #12 0x55c131435b20 <unknown>\npxjava - #13 0x55c13142c023 <unknown>\npxjava - #14 0x55c1313fa1aa <unknown>\npxjava - #15 0x55c1314506b8 <unknown>\npxjava - #16 0x55c131450847 <unknown>\npxjava - #17 0x55c131460243 <unknown>\npxjava - #18 0x7f7b5a455609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 900-text-jster\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/900-text-jster\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5f0edeab\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5f0edeab\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x5634638a9e60> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 900-text-jster - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/900-text-jster - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 900-text-jster - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/900-text-jster - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 900-text-jster\n###"},{"app_name":"901-button-jster","status":"fail","result":"\n###\nRunning tests for app: 901-button-jster\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W S  OK | Context\n\n⠏ |         0 | shinyjster                                                      shinyjster - starting app: 901-button-jster\nRunning java -jar \\\n  /home/runner/work/_temp/Library/shinyjster/selenium/selenium.jar chrome \\\n  1200x1200 'http://127.0.0.1:19447/?shinyjster=1' 120 --headless\npxjava - Starting ChromeDriver 114.0.5735.90 (386bc09e8f4f2e025eddae123f36f6263096ae49-refs/branch-heads/5735@{#1052}) on port 11161\npxjava - Only local connections are allowed.\npxjava - Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.\npxjava - ChromeDriver was started successfully.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 114\npxjava - Current browser version is 116.0.5845.96 with binary path /usr/bin/google-chrome\npxjava - Build info: version: 'unknown', revision: 'unknown', time: 'unknown'\npxjava - System info: host: 'fv-az304-998', ip: '10.1.0.12', os.name: 'Linux', os.arch: 'amd64', os.version: '5.15.0-1042-azure', java.version: '11.0.20'\npxjava - Driver info: driver.version: ChromeDriver\npxjava - remote stacktrace: #0 0x55b9ce6644e3 <unknown>\npxjava - #1 0x55b9ce393c76 <unknown>\npxjava - #2 0x55b9ce3c104a <unknown>\npxjava - #3 0x55b9ce3bc4a1 <unknown>\npxjava - #4 0x55b9ce3b9029 <unknown>\npxjava - #5 0x55b9ce3f7ccc <unknown>\npxjava - #6 0x55b9ce3f747f <unknown>\npxjava - #7 0x55b9ce3eede3 <unknown>\npxjava - #8 0x55b9ce3c42dd <unknown>\npxjava - #9 0x55b9ce3c534e <unknown>\npxjava - #10 0x55b9ce6243e4 <unknown>\npxjava - #11 0x55b9ce6283d7 <unknown>\npxjava - #12 0x55b9ce632b20 <unknown>\npxjava - #13 0x55b9ce629023 <unknown>\npxjava - #14 0x55b9ce5f71aa <unknown>\npxjava - #15 0x55b9ce64d6b8 <unknown>\npxjava - #16 0x55b9ce64d847 <unknown>\npxjava - #17 0x55b9ce65d243 <unknown>\npxjava - #18 0x7f1c7be3f609 start_thread\npxjava - \npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\npxjava - \tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\npxjava - \tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\npxjava - \tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)\npxjava - \tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)\npxjava - \tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\npxjava - \tat java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\npxjava - \tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\npxjava - \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\npxjava - \tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:157)\npxjava - \t... 5 more\npxjava - Selenium Processx closed\n\nOutput:\nError in (function ()  : \n  Browser process exited with a non-zero status before Shiny closed. Status: 1\nshinyjster - stopping app: 901-button-jster\n\n⠋ |         1 | shinyjster                                                      List of 4\n $ appDir     : chr \"/home/runner/work/shinycoreci/shinycoreci/inst/apps/901-button-jster\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 3\n  .. ..$ message : chr \"invoke_wrapped: throwing std::runtime_error\"\n  .. ..$ call    : NULL\n  .. ..$ cppstack: NULL\n  .. ..- attr(*, \"class\")= chr [1:4] \"std::runtime_error\" \"C++Error\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 93\n  .. .. ..$ : language tryCatch(withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     NULL ...\n  .. .. ..$ : language saveRDS(do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5dd5aa68\"),      list(envir = .GlobalEnv, quote| __truncated__ ...\n  .. .. ..$ : language do.call(do.call, c(readRDS(\"/tmp/RtmpazLcp8/callr-fun-485f5dd5aa68\"), list(envir = .GlobalEnv,      quote = TRUE)| __truncated__\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      wrap = wrap))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, wrap = wrap)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env(env), wrap = wrap)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x55677e0976b0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language stop(list(message = \"invoke_wrapped: throwing std::runtime_error\", call = NULL,      cppstack = NULL))\n  .. .. ..$ : language (function (e)  { ...\n  .. .. ..- attr(*, \"parents\")= int [1:93] 0 1 2 3 2 5 6 0 0 0 ...\n $ browser    : chr \"chrome\"\n\n✖ | 1   2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError (???): 901-button-jster - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/901-button-jster - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): ???\n• Not testing Firefox due to WebDriver issues. Firefox fails to start (1): ???\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError (???): 901-button-jster - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /home/runner/work/shinycoreci/shinycoreci/inst/apps/901-button-jster - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 901-button-jster\n###"}],"platform":"linux","r_version":"4.2","session":{"version":"R version 4.2.3 (2023-03-15)","os":"Ubuntu 20.04.6 LTS","system":"x86_64, linux-gnu","ui":"X11","language":"(EN)","collate":"C.UTF-8","ctype":"C.UTF-8","tz":"UTC","date":"2023-08-31","pandoc":"2.7.3 @ /usr/bin/pandoc"},"gha_image_version":"20230821.1.0","sys_info":"── Session info ────────────────────────────────────────────────────────────────\n setting   value\n gha_image 20230821.1.0\n version   R version 4.2.3 (2023-03-15)\n os        Ubuntu 20.04.6 LTS\n system    x86_64, linux-gnu\n ui        X11\n language  (EN)\n collate   C.UTF-8\n ctype     C.UTF-8\n tz        UTC\n date      2023-08-31\n pandoc    2.7.3 @ /usr/bin/pandoc\n── Packages ────────────────────────────────────────────────────────────────────\n package           * version     date (UTC) lib source\n anytime             0.3.9       2020-08-27 [2] RSPM\n AsioHeaders         1.22.1-2    2022-12-08 [2] RSPM\n askpass             1.1         2019-01-13 [2] RSPM\n assertthat          0.2.1       2019-03-21 [2] RSPM\n backports           1.4.1       2021-12-13 [2] RSPM\n base64enc           0.1-3       2015-07-28 [2] RSPM\n BH                  1.81.0-1    2023-01-22 [2] RSPM\n bigD                0.2.0       2022-09-05 [2] RSPM\n bit                 4.0.5       2022-11-15 [2] RSPM\n bit64               4.0.5       2020-08-30 [2] RSPM\n bitops              1.0-7       2021-04-24 [2] RSPM\n blob                1.2.4       2023-03-17 [2] RSPM\n boot                1.3-28.1    2022-11-22 [4] CRAN (R 4.2.3)\n brio                1.1.3       2021-11-30 [2] RSPM\n broom               1.0.5       2023-06-09 [2] RSPM\n bsicons             0.1.1.9000  2023-08-18 [2] Github (rstudio/bsicons@1ee68f3)\n bslib               0.5.1.9000  2023-08-31 [2] Github (rstudio/bslib@8feafaa)\n cachem              1.0.8       2023-08-11 [2] Github (r-lib/cachem@62051fe)\n Cairo               1.6-1       2023-08-18 [2] RSPM\n callr               3.7.3       2022-11-02 [2] RSPM\n checkmate           2.2.0       2023-04-27 [2] RSPM\n chromote            0.1.2       2023-08-11 [2] RSPM\n class               7.3-21      2023-01-23 [4] CRAN (R 4.2.3)\n classInt            0.4-9       2023-02-28 [2] RSPM\n cli                 3.6.1       2023-03-23 [2] RSPM\n clipr               0.8.0       2022-02-22 [2] RSPM\n cluster             2.1.4       2022-08-22 [4] CRAN (R 4.2.3)\n codetools           0.2-19      2023-02-01 [4] CRAN (R 4.2.3)\n colorspace          2.1-0       2023-01-23 [2] RSPM\n commonmark          1.9.0       2023-03-17 [2] RSPM\n covr                3.6.2       2023-03-25 [2] RSPM\n cpp11               0.4.6       2023-08-10 [2] RSPM\n cranlogs            2.1.1       2019-04-29 [2] RSPM\n crayon              1.5.2       2022-09-29 [2] RSPM\n credentials         1.3.2       2021-11-29 [2] RSPM\n crosstalk           1.2.0.9000  2023-08-14 [2] Github (rstudio/crosstalk@d754a21)\n curl                5.0.2       2023-08-14 [2] RSPM\n data.table          1.14.8      2023-02-17 [2] RSPM\n DBI                 1.1.3       2022-06-18 [2] RSPM\n dbplyr              2.3.3       2023-07-07 [2] RSPM\n debugme             1.1.0       2017-10-22 [2] RSPM\n dendextend          1.17.1      2023-03-25 [2] RSPM\n desc                1.4.2       2022-09-08 [2] RSPM\n deSolve             1.36        2023-07-01 [2] RSPM\n DiagrammeR          1.0.10      2023-05-18 [2] RSPM\n diffobj             0.3.5       2021-10-05 [2] RSPM\n digest              0.6.33      2023-07-07 [2] RSPM\n downloader          0.4         2015-07-09 [2] RSPM\n dplyr               1.1.2       2023-04-20 [2] RSPM\n DT                  0.29.1      2023-08-30 [2] Github (rstudio/DT@2948e75)\n dygraphs            1.1.1.7     2023-08-11 [2] Github (rstudio/dygraphs@b096395)\n e1071               1.7-13      2023-02-01 [2] RSPM\n ellipsis            0.3.2       2021-04-29 [2] RSPM\n english             1.2-6       2021-08-21 [2] RSPM\n evaluate            0.21        2023-05-05 [2] RSPM\n fansi               1.0.4       2023-01-22 [2] RSPM\n farver              2.1.1       2022-07-06 [2] RSPM\n fastmap             1.1.1.9000  2023-08-11 [2] Github (r-lib/fastmap@147830b)\n flexdashboard       0.6.2.9000  2023-08-14 [2] Github (rstudio/flexdashboard@f71bc1f)\n fontawesome         0.5.2.9000  2023-08-24 [2] Github (rstudio/fontawesome@b056eca)\n forcats             1.0.0       2023-01-29 [2] RSPM\n foreign             0.8-84      2022-12-06 [4] CRAN (R 4.2.3)\n fs                  1.6.3       2023-07-20 [2] RSPM\n future              1.33.0      2023-07-01 [2] RSPM\n generics            0.1.3       2022-07-05 [2] RSPM\n gert                1.9.3       2023-08-07 [2] RSPM\n ggalluvial          0.12.5      2023-02-22 [2] RSPM\n GGally              2.1.2       2021-06-21 [2] RSPM\n gganimate           1.0.8       2022-09-08 [2] RSPM\n ggiraph             0.8.7       2023-03-17 [2] RSPM\n ggplot2             3.4.3       2023-08-14 [2] RSPM\n ggthemes            4.2.4       2021-01-20 [2] RSPM\n ggvis               0.4.8       2023-03-08 [2] RSPM\n gh                  1.4.0       2023-02-22 [2] RSPM\n gitcreds            0.1.2       2022-09-08 [2] RSPM\n globals             0.16.2      2022-11-21 [2] RSPM\n glue                1.6.2       2022-02-24 [2] RSPM\n gridExtra           2.3         2017-09-09 [2] RSPM\n gt                  0.9.0.9000  2023-08-31 [2] Github (rstudio/gt@9dcf4cf)\n gtable              0.3.4       2023-08-21 [2] RSPM\n here                1.0.1       2020-12-13 [2] RSPM\n hexbin              1.28.3      2023-03-21 [2] RSPM\n highcharter         0.9.4       2022-01-03 [2] RSPM\n highr               0.10        2022-12-22 [2] RSPM\n hms                 1.1.3       2023-03-21 [2] RSPM\n htmltools           0.5.6.9000  2023-08-15 [2] Github (rstudio/htmltools@251526c)\n htmlwidgets         1.6.2.9000  2023-08-15 [2] Github (ramnathv/htmlwidgets@d31dd27)\n httpgd              1.3.1       2023-01-30 [2] RSPM\n httpuv              1.6.11.9000 2023-08-17 [2] Github (rstudio/httpuv@99bfe9b)\n httr                1.4.7       2023-08-15 [2] RSPM\n httr2               0.2.3       2023-05-08 [2] RSPM\n hunspell            3.0.2       2022-09-04 [2] RSPM\n igraph              1.5.1       2023-08-10 [2] RSPM\n ini                 0.3.1       2018-05-20 [2] RSPM\n IRdisplay           1.1         2022-01-04 [2] RSPM\n isoband             0.2.7       2022-12-20 [2] RSPM\n jquerylib           0.1.4       2021-04-26 [2] RSPM\n jsonlite            1.8.7       2023-06-29 [2] RSPM\n juicyjuice          0.1.0       2022-11-10 [2] RSPM\n KernSmooth          2.23-20     2021-05-03 [4] CRAN (R 4.2.3)\n knitr               1.43        2023-05-25 [2] RSPM\n labeling            0.4.3       2023-08-29 [2] RSPM\n later               1.3.1.9000  2023-08-11 [2] Github (r-lib/later@e892756)\n lattice             0.20-45     2021-09-22 [4] CRAN (R 4.2.3)\n lazyeval            0.2.2       2019-03-15 [2] RSPM\n leaflet             2.1.2.9000  2023-08-15 [2] Github (rstudio/leaflet@421ee6b)\n leaflet.providers   1.13.0      2023-08-10 [2] RSPM\n lifecycle           1.0.3       2022-10-07 [2] RSPM\n listenv             0.9.0       2022-12-16 [2] RSPM\n listviewer          3.0.0       2019-11-02 [2] RSPM\n lobstr              1.1.2       2022-06-22 [2] RSPM\n lorem               1.0.0       2023-03-09 [2] RSPM\n lubridate           1.9.2       2023-02-10 [2] RSPM\n magick              2.7.5       2023-08-07 [2] RSPM\n magrittr            2.0.3       2022-03-30 [2] RSPM\n maps                3.4.1       2022-10-30 [2] RSPM\n maptools            1.1-8       2023-07-18 [2] RSPM\n markdown            1.8         2023-08-23 [2] RSPM\n MASS                7.3-58.2    2023-01-23 [4] CRAN (R 4.2.3)\n Matrix              1.5-3       2022-11-11 [4] CRAN (R 4.2.3)\n memoise             2.0.1       2021-11-26 [2] RSPM\n mgcv                1.8-42      2023-03-02 [4] CRAN (R 4.2.3)\n mime                0.12        2021-09-28 [2] RSPM\n munsell             0.5.0       2018-06-12 [2] RSPM\n networkD3           0.4         2017-03-18 [2] RSPM\n nlme                3.1-162     2023-01-31 [4] CRAN (R 4.2.3)\n NLP                 0.2-1       2020-10-14 [2] RSPM\n nnet                7.3-18      2022-09-28 [4] CRAN (R 4.2.3)\n openssl             2.1.0       2023-07-15 [2] RSPM\n packrat             0.9.1       2023-02-27 [2] RSPM\n pak                 0.5.1       2023-04-29 [3] local\n paletteer           1.5.0       2022-10-19 [2] RSPM\n palmerpenguins      0.1.1       2022-08-15 [2] RSPM\n parallelly          1.36.0      2023-05-26 [2] RSPM\n parsedate           1.3.1       2022-10-27 [2] RSPM\n pillar              1.9.0       2023-03-22 [2] RSPM\n pingr               2.0.2       2022-10-26 [2] RSPM\n pkgconfig           2.0.3       2019-09-22 [2] RSPM\n pkgload             1.3.2.1     2023-07-08 [2] RSPM\n plogr               0.2.0       2018-03-25 [2] RSPM\n plotly              4.10.2.9000 2023-08-11 [2] Github (ropensci/plotly@0469eab)\n plotlyGeoAssets     0.0.2       2019-01-08 [2] RSPM\n plyr                1.8.8       2022-11-11 [2] RSPM\n png                 0.1-8       2022-11-29 [2] RSPM\n pool                1.0.1.9000  2023-08-11 [2] Github (rstudio/pool@11ef163)\n praise              1.0.0       2015-08-11 [2] RSPM\n prettyunits         1.1.1       2020-01-24 [2] RSPM\n prismatic           1.1.1       2022-08-15 [2] RSPM\n processx            3.8.2       2023-06-30 [2] RSPM\n progress            1.2.2       2019-05-16 [2] RSPM\n promises            1.2.1.9000  2023-08-11 [2] Github (rstudio/promises@e4499d7)\n proxy               0.4-27      2022-06-09 [2] RSPM\n pryr                0.1.6       2023-01-17 [2] RSPM\n ps                  1.7.5       2023-04-18 [2] RSPM\n purrr               1.0.2       2023-08-10 [2] RSPM\n quantmod            0.4.25      2023-08-22 [2] RSPM\n R.cache             0.16.0      2022-07-21 [2] RSPM\n R.methodsS3         1.8.2       2022-06-13 [2] RSPM\n R.oo                1.25.0      2022-06-12 [2] RSPM\n R.utils             2.12.2      2022-11-11 [2] RSPM\n R6                  2.5.1       2021-08-19 [2] RSPM\n ragg                1.2.5       2023-01-12 [2] RSPM\n rappdirs            0.3.3       2021-01-31 [2] RSPM\n raster              3.6-23      2023-07-04 [2] RSPM\n RColorBrewer        1.1-3       2022-04-03 [2] RSPM\n Rcpp                1.0.11      2023-07-06 [2] RSPM\n RcppTOML            0.2.2       2023-01-29 [2] RSPM\n RCurl               1.98-1.12   2023-03-27 [2] RSPM\n reactable           0.4.4       2023-03-12 [2] RSPM\n reactlog            1.1.1       2023-08-11 [2] Github (rstudio/reactlog@83a4958)\n reactR              0.4.4       2021-02-22 [2] RSPM\n readr               2.1.4       2023-02-10 [2] RSPM\n rematch             1.0.1       2016-04-21 [2] RSPM\n rematch2            2.1.2       2020-05-01 [2] RSPM\n renv                1.0.2       2023-08-15 [2] RSPM\n repr                1.1.6       2023-01-26 [2] RSPM\n reshape             0.8.9       2022-04-12 [2] RSPM\n reshape2            1.4.4       2020-04-09 [2] RSPM\n reticulate          1.31        2023-08-10 [2] RSPM\n rex                 1.2.1       2021-11-26 [2] RSPM\n rgeos               0.6-4       2023-07-18 [2] RSPM\n rjson               0.2.21      2022-01-09 [2] RSPM\n RJSONIO             1.3-1.8     2023-01-31 [2] RSPM\n rlang               1.1.1       2023-04-28 [2] RSPM\n rlist               0.4.6.2     2021-09-03 [2] RSPM\n rmarkdown           2.24        2023-08-14 [2] RSPM\n RMySQL              0.10.25     2022-12-06 [2] RSPM\n rpart               4.1.19      2022-10-21 [4] CRAN (R 4.2.3)\n rprojroot           2.0.3       2022-04-02 [2] RSPM\n rsconnect           1.0.2       2023-08-17 [2] RSPM\n RSQLite             2.3.1       2023-04-03 [2] RSPM\n rstudioapi          0.15.0      2023-07-07 [2] RSPM\n rsvg                2.4.0       2022-11-21 [2] RSPM\n rversions           2.1.2       2022-08-31 [2] RSPM\n rvest               1.0.3       2022-08-19 [2] RSPM\n s2                  1.1.4       2023-05-17 [2] RSPM\n sass                0.4.7.9000  2023-08-11 [2] Github (rstudio/sass@4f42680)\n scales              1.2.1       2022-08-20 [2] RSPM\n selectr             0.4-2       2019-11-20 [2] RSPM\n servr               0.27        2023-05-02 [2] RSPM\n sessioninfo         1.2.2       2021-12-06 [2] RSPM\n sf                  1.0-14      2023-07-11 [2] RSPM\n shiny               1.7.5.9000  2023-08-29 [2] Github (rstudio/shiny@e87f942)\n shinyAce            0.4.2       2022-05-06 [2] RSPM\n shinycoreci         0.0.0.9008  2023-08-31 [2] local\n shinydashboard      0.7.2       2021-09-30 [2] RSPM\n shinyjs             2.1.0       2021-12-23 [2] RSPM\n shinyjster          0.0.0.9010  2023-08-11 [2] Github (schloerke/shinyjster@1807304)\n shinymeta           0.2.0.3     2023-08-11 [2] Github (rstudio/shinymeta@5af8086)\n shinytest           1.5.3       2023-08-11 [2] Github (rstudio/shinytest@22322f4)\n shinytest2          0.3.1       2023-08-29 [2] Github (rstudio/shinytest2@176131d)\n shinythemes         1.2.0       2023-08-11 [2] Github (rstudio/shinythemes@492b6aa)\n shinyvalidate       0.1.2       2023-08-11 [2] Github (rstudio/shinyvalidate@575f586)\n shinyWidgets        0.7.6       2023-01-08 [2] RSPM\n showimage           1.0.0       2018-01-24 [2] RSPM\n showtext            0.9-6       2023-05-03 [2] RSPM\n showtextdb          3.0         2020-06-04 [2] RSPM\n slam                0.1-50      2022-01-08 [2] RSPM\n sourcetools         0.1.7-1     2023-02-01 [2] RSPM\n sp                  2.0-0       2023-06-22 [2] RSPM\n spatial             7.3-16      2023-01-23 [4] CRAN (R 4.2.3)\n spelling            2.2.1       2023-03-22 [2] RSPM\n stringi             1.7.12      2023-01-11 [2] RSPM\n stringr             1.5.0       2022-12-02 [2] RSPM\n styler              1.10.2      2023-08-29 [2] RSPM\n survival            3.5-3       2023-02-12 [4] CRAN (R 4.2.3)\n svglite             2.1.1       2023-01-10 [2] RSPM\n sys                 3.4.2       2023-05-23 [2] RSPM\n sysfonts            0.8.8       2022-03-13 [2] RSPM\n systemfonts         1.0.4       2022-02-11 [2] RSPM\n terra               1.7-39      2023-06-23 [2] RSPM\n testit              0.13        2021-04-14 [2] RSPM\n testthat            3.1.10      2023-07-06 [2] RSPM\n textshaping         0.3.6       2021-10-13 [2] RSPM\n thematic            0.1.3.9000  2023-08-31 [2] Github (rstudio/thematic@8af5f8d)\n tibble              3.2.1       2023-03-20 [2] RSPM\n tidyr               1.3.0       2023-01-24 [2] RSPM\n tidyselect          1.2.0       2022-10-10 [2] RSPM\n timechange          0.2.0       2023-01-11 [2] RSPM\n tinytex             0.46        2023-08-09 [2] RSPM\n tm                  0.7-11      2023-02-05 [2] RSPM\n TTR                 0.24.3      2021-12-12 [2] RSPM\n tweenr              2.0.2       2022-09-06 [2] RSPM\n tzdb                0.4.0       2023-05-12 [2] RSPM\n units               0.8-3       2023-08-10 [2] RSPM\n usethis             2.2.2       2023-07-06 [2] RSPM\n utf8                1.2.3       2023-01-31 [2] RSPM\n uuid                1.1-1       2023-08-17 [2] RSPM\n V8                  4.3.3       2023-07-18 [2] RSPM\n vctrs               0.6.3       2023-06-14 [2] RSPM\n vdiffr              1.0.6       2023-08-25 [2] RSPM\n vembedr             0.1.5       2021-12-11 [2] RSPM\n viridis             0.6.4       2023-07-22 [2] RSPM\n viridisLite         0.4.2       2023-05-02 [2] RSPM\n visNetwork          2.1.2       2022-09-29 [2] RSPM\n vroom               1.6.3       2023-04-28 [2] RSPM\n waldo               0.5.1       2023-05-08 [2] RSPM\n webdriver           1.0.6.9001  2023-08-11 [2] Github (rstudio/webdriver@35d3805)\n webshot             0.5.5       2023-06-26 [2] RSPM\n webshot2            0.1.1       2023-08-11 [2] RSPM\n websocket           1.4.1.9000  2023-08-11 [2] Github (rstudio/websocket@2161ee7)\n whisker             0.4.1       2022-12-05 [2] RSPM\n withr               2.5.0       2022-03-03 [2] RSPM\n wk                  0.8.0       2023-08-25 [2] RSPM\n wordcloud           2.6         2018-08-24 [2] RSPM\n xfun                0.40        2023-08-09 [2] RSPM\n XML                 3.99-0.14   2023-03-19 [2] RSPM\n xml2                1.3.5       2023-07-06 [2] RSPM\n xtable              1.8-4       2019-04-21 [2] RSPM\n xts                 0.13.1      2023-04-16 [2] RSPM\n yaml                2.3.7       2023-01-23 [2] RSPM\n zip                 2.3.0       2023-04-17 [2] RSPM\n zoo                 1.8-12      2023-04-13 [2] RSPM\n\n [1] /home/runner/.local/share/R/shinycoreci/R-4_2_3\n [2] /home/runner/work/_temp/Library\n [3] /opt/R/4.2.3/lib/R/site-library\n [4] /opt/R/4.2.3/lib/R/library","branch_name":"main","branch_sha":"05cb467","pr_number":"","username":"${GITHUB_ACTOR}","gha_branch_name":"gha-05cb467-2023_08_31_05_04-4.2-Linux","version":2}