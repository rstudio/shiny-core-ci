[{"path":"https://rstudio.github.io/shinycoreci/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 Barret Schloerke Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rstudio.github.io/shinycoreci/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Barret Schloerke. Author, maintainer. Winston Chang. Author. Alan Dipert. Author. . Copyright holder, funder.","code":""},{"path":"https://rstudio.github.io/shinycoreci/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schloerke B, Chang W, Dipert (2022). shinycoreci: CI Testing shiny. R package version 0.0.0.9006, https://github.com/rstudio/shinycoreci.","code":"@Manual{,   title = {shinycoreci: CI Testing for shiny},   author = {Barret Schloerke and Winston Chang and Alan Dipert},   year = {2022},   note = {R package version 0.0.0.9006},   url = {https://github.com/rstudio/shinycoreci}, }"},{"path":[]},{"path":"https://rstudio.github.io/shinycoreci/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CI Testing for shiny","text":"Install development version GitHub : GitHub packages installed make sure latest package development working expected: r-lib/cachem r-lib/fastmap r-lib/later rstudio/bslib rstudio/crosstalk rstudio/DT rstudio/dygraphs rstudio/flexdashboard rstudio/fontawesome rstudio/htmltools rstudio/httpuv rstudio/pool rstudio/promises rstudio/reactlog rstudio/rsconnect rstudio/sass rstudio/shiny rstudio/shinymeta rstudio/shinytest rstudio/shinytest2 rstudio/shinythemes rstudio/shinyvalidate rstudio/thematic rstudio/webdriver rstudio/websocket schloerke/shinyjster Tools manual automated testing shiny apps.","code":"# install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch)) pak::pkg_install(\"rstudio/shinycoreci\")"},{"path":"https://rstudio.github.io/shinycoreci/index.html","id":"running-manual-tests","dir":"","previous_headings":"","what":"Running manual tests","title":"CI Testing for shiny","text":"First, clone shinycoreci-apps repo. Next, install remotes::install_github(\"rstudio/shinycoreci\"). may need add GITHUB_PAT R Environ file (See ?usethis::edit_r_environ ?usethis::browse_github_pat) RStudio IDE - shinycoreci::test_in_ide() RStudio Cloud - shinycoreci::test_in_ide() RStudio Server Pro - shinycoreci::test_in_ide() R Terminal / R GUI - shinycoreci::test_in_browser() () Web Browser - shinycoreci::test_in_browser() shinyapps.io - shinycoreci::test_in_shinyappsio() RStudio Connect - shinycoreci::test_in_connect() SSO - shinycoreci::test_in_sso(release = \"focal\") > require docker login. Run docker login terminal SSP - shinycoreci::test_in_ssp(release = \"centos7\") > require docker login. Run docker login terminal testing functions may run within IDE (except R Terminal / R GUI).","code":""},{"path":"https://rstudio.github.io/shinycoreci/index.html","id":"ide-example","dir":"","previous_headings":"Running manual tests","what":"IDE Example","title":"CI Testing for shiny","text":"","code":"# install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch))  # Install the latest from pak pak::pkg_install(\"rstudio/shinycoreci\") # Install shinyverse # Run all manual tests shinycoreci::test_in_ide()"},{"path":"https://rstudio.github.io/shinycoreci/index.html","id":"troubleshooting-test-failures","dir":"","previous_headings":"Running manual tests","what":"Troubleshooting test failures","title":"CI Testing for shiny","text":"Failures old versions R testing app passes recent version(s) R, fails suprising way old R version(s), may due old R package version. case, modify tests run sufficient version relevant package available (example). failures can’t replicated locally surprising failures often result timing issues (can difficult, impossible, replicate locally). testing app uses dynamic UI /doesn’t proper input/output bindings, shinytest probably needs know long wait value(s) update (case, use waitForValue(), example). Somewhat similarly, checking DOM values shinyjster, may need wait update DOM element(s) checking value(s), case can write recursive function keeps calling DOM ready (example). windows shinytest plots failed Windows virtual images update GitHub Actions, graphics device may behave exactly prior graphics device. Check see windows Image Version updated. (view , inspect top lines ./apps/sys-info-win-XX.txt change.) accept updated shinytest output build higher Image Version.","code":""},{"path":"https://rstudio.github.io/shinycoreci/index.html","id":"contribute-a-testing-app","dir":"","previous_headings":"","what":"Contribute a testing app","title":"CI Testing for shiny","text":"contributing testing app, try following: Also, possible, write “light-weight” tests (, try avoid shinytest2 $expect_screenshot() possible since prone false positive differences thus maintenance cost). app need manual testing, flag testing app manual testing shinycoreci::use_manual_app(). Add description app’s UI makes clear app testing . Note shinycoreci supports testthat testing framework. Call shinytest2::use_shinytest2(APP_DIR) use shinytest2 testthat shinytest: primarily useful taking screenshots shiny output binding(s) (interacting shiny input bindings). See example (note shinytest::recordTest() can used generate shinytest testing scripts). shinyjster: primarily useful asserting certain expectations DOM (JavaScript). See example (note shinyjster::shinyjster_js() needs placed UI shinyjster::shinyjster_server(input, output) needs placed server). testthat: primarily useful combination shiny::testServer() test server-side reactive logic application. See example. Call shinycoreci::use_tests_testthat(app_dir) provide file scaffolding necessary run testthat tests","code":""},{"path":"https://rstudio.github.io/shinycoreci/index.html","id":"pruning-old-git-branches","dir":"","previous_headings":"","what":"Pruning old git branches","title":"CI Testing for shiny","text":"help us store manage test results, git branches automatically created test run. branches automatically removed GitHub 1 week activity, may want periodically remove local machine well:","code":"git fetch --prune"},{"path":"https://rstudio.github.io/shinycoreci/index.html","id":"what-workflows-are-available","dir":"","previous_headings":"","what":"What workflows are available?","title":"CI Testing for shiny","text":"repo contains several GitHub Actions workflows: runTests: Run automated tests (via shiny::runTests()). Docker: Create SSO SSP docker images Deploy: Deploy testing apps shinyapps.io beta.rstudioconnect.com runTests workflow runs automatically every code change shinycoreci-apps well every night (around midnight UTC). workflows may triggered via shinycoreci::trigger_docker() shinycoreci::trigger_deploy()","code":""},{"path":"https://rstudio.github.io/shinycoreci/index.html","id":"faq","dir":"","previous_headings":"","what":"FAQ:","title":"CI Testing for shiny","text":"run odd pak installation issue: Run pak::cache_clean() clear cache try original command ","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/accept_snaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Accept all snapshot changes — accept_snaps","title":"Accept all snapshot changes — accept_snaps","text":"Accepts snapshot changes every shiny application inst/apps.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/accept_snaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accept all snapshot changes — accept_snaps","text":"","code":"accept_snaps(repo_dir = \".\")"},{"path":"https://rstudio.github.io/shinycoreci/reference/accept_snaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accept all snapshot changes — accept_snaps","text":"repo_dir Root repo folder path","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/assert_test_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert test_in_local() output — assert_test_output","title":"Assert test_in_local() output — assert_test_output","text":"Method called test_in_local() called assert = TRUE.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/assert_test_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert test_in_local() output — assert_test_output","text":"","code":"assert_test_output(output)"},{"path":"https://rstudio.github.io/shinycoreci/reference/assert_test_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert test_in_local() output — assert_test_output","text":"output value received test_in_local()","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear cache for test chart and package info — clear_cache","title":"Clear cache for test chart and package info — clear_cache","text":"Clear cache test chart package info","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear cache for test chart and package info — clear_cache","text":"","code":"clear_cache()"},{"path":"https://rstudio.github.io/shinycoreci/reference/connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Connect Shiny applications publically available — connect_set_public","title":"Make Connect Shiny applications publically available — connect_set_public","text":"corresponding rsconnect account already exist calling connect_set_public.  can done calling rsconnect::connectApiUser add appropriate account information.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Connect Shiny applications publically available — connect_set_public","text":"","code":"connect_set_public(   apps = apps_shiny,   account = \"barret\",   server = \"beta.rstudioconnect.com\" )  connect_urls(   apps = apps_shiny,   account = \"barret\",   server = \"beta.rstudioconnect.com\" )"},{"path":"https://rstudio.github.io/shinycoreci/reference/connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Connect Shiny applications publically available — connect_set_public","text":"apps character vector fully defined shiny application folders account args supplied [rsconnect::deployApp] server args supplied [rsconnect::deployApp]","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/connect.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Make Connect Shiny applications publically available — connect_set_public","text":"connect_set_public: Set Shiny apps public Connect server connect_urls: Retrieve urls Connect server using Shiny applications provided dir","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Connect Shiny applications publically available — connect_set_public","text":"","code":"if (FALSE) {   rsconnect::addConnectServer(url = 'https://SERVER.com/API', name = 'CustomName')   rsconnect::connectApiUser('barret', 'CustomName', apiKey = 'SuperSecretKey')   deploy_apps(account = 'barret', server = 'CustomName')   connect_set_public(account = 'barret', server = 'CustomName')   urls <- connect_urls(account = 'barret', server = 'CustomName') }"},{"path":"https://rstudio.github.io/shinycoreci/reference/deploy_apps.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy apps to a server — deploy_apps","title":"Deploy apps to a server — deploy_apps","text":"Run terminal (RStudio IDE) issues installing packages.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/deploy_apps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy apps to a server — deploy_apps","text":"","code":"deploy_apps(   apps = apps_shiny,   account = \"testing-apps\",   server = \"shinyapps.io\",   ...,   install = TRUE,   extra_packages = NULL,   cores = 1,   retry = 2,   retrying_ = FALSE )"},{"path":"https://rstudio.github.io/shinycoreci/reference/deploy_apps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy apps to a server — deploy_apps","text":"apps character vector fully defined shiny application folders account, server args supplied [rsconnect::deployApp] ... ignored install TRUE, install shinyverse default libpath extra_packages character vector extra packages install cores number cores use deploying retry TRUE, try failure apps . (happens .) retrying_ internal use ","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/deploy_apps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deploy apps to a server — deploy_apps","text":"Installation use default libpaths.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/docker.html","id":null,"dir":"Reference","previous_headings":"","what":"Docker Testing — docker_run_sso","title":"Docker Testing — docker_run_sso","text":"Docker Testing","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/docker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Docker Testing — docker_run_sso","text":"","code":"docker_run_sso(   release = c(\"focal\", \"bionic\", \"centos7\"),   port = switch(release, centos7 = 7878, 3838),   r_version = c(\"4.1\", \"4.0\", \"3.6\", \"3.5\"),   tag = NULL,   launch_browser = TRUE )  docker_run_ssp(   release = c(\"focal\", \"bionic\", \"centos7\"),   port = switch(release, centos7 = 8989, 4949),   r_version = c(\"4.1\", \"4.0\", \"3.6\", \"3.5\"),   tag = NULL,   launch_browser = TRUE )"},{"path":"https://rstudio.github.io/shinycoreci/reference/docker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Docker Testing — docker_run_sso","text":"release Distro release name, \"focal\" ubuntu \"7\" centos port port server function locally r_version R version use. Ex: \"3.6\" tag Extra tag information docker image. prepend - value given. launch_browser Logical variable determines browser open specified port location","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/docker.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Docker Testing — docker_run_sso","text":"docker_run_sso: Run SSO docker container docker_run_ssp: Run SSP docker container","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/docker_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up docker files — docker_clean","title":"Clean up docker files — docker_clean","text":"Clean docker files","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/docker_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up docker files — docker_clean","text":"","code":"docker_clean(stopped_containers = TRUE, untagged_images = TRUE)"},{"path":"https://rstudio.github.io/shinycoreci/reference/docker_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up docker files — docker_clean","text":"stopped_containers boolean determines stopped containers removed untagged_images boolean determines untagged images removed","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/find_deps_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Find package dependencies installed — find_deps_installed","title":"Find package dependencies installed — find_deps_installed","text":"Find package dependencies installed","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/find_deps_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find package dependencies installed — find_deps_installed","text":"","code":"find_deps_installed()"},{"path":"https://rstudio.github.io/shinycoreci/reference/fix_snaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix all _snaps files and merge all gha- branches — fix_snaps","title":"Fix all _snaps files and merge all gha- branches — fix_snaps","text":"method apply patches corresponding GitHub branches R Operating System combination. Changes committed pushed back GitHub. user need perform action manually.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/fix_snaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix all _snaps files and merge all gha- branches — fix_snaps","text":"","code":"fix_snaps(   sha = git_sha(repo_dir),   ...,   ask_apps = FALSE,   ask_branches = TRUE,   ask_if_not_main = TRUE,   repo_dir = \".\" )"},{"path":"https://rstudio.github.io/shinycoreci/reference/fix_snaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix all _snaps files and merge all gha- branches — fix_snaps","text":"sha git sha base branch look ... Extra arguments passed shinytest::viewTestDiff ask_apps, ask_branches Logical allows particular apps branches inspected ask_if_not_main Logical check main base branch repo_dir Root repo folder path","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/fix_snaps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix all _snaps files and merge all gha- branches — fix_snaps","text":"Note: function fix shinyjster failures. Outline steps performed: Validate current git branch main Validate git changes untracked files current base branch Validate .new _snaps files Create patch files corresponding gha- branch ./patches Ask branches applied. Filter patch files accordingly Ask app changes kept Apply patch files Call accept_snaps() app folders Undo changes app selected Prompt user commit push changes back GitHub","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/platform.html","id":null,"dir":"Reference","previous_headings":"","what":"Execution platform — platform","title":"Execution platform — platform","text":"Execution platform","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/platform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execution platform — platform","text":"","code":"platform()"},{"path":"https://rstudio.github.io/shinycoreci/reference/platform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execution platform — platform","text":"one c(\"win\", \"mac\", \"linux\")","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/platform_rversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Platform and R Version — platform_rversion","title":"Platform and R Version — platform_rversion","text":"Platform R Version","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/platform_rversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Platform and R Version — platform_rversion","text":"","code":"platform_rversion(platform_val = platform(), r_version = r_version_short())"},{"path":"https://rstudio.github.io/shinycoreci/reference/platform_rversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Platform and R Version — platform_rversion","text":"platform_val See platform() r_version See r_version_short()","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/r_version_short.html","id":null,"dir":"Reference","previous_headings":"","what":"R Version — r_version_short","title":"R Version — r_version_short","text":"R Version","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/r_version_short.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R Version — r_version_short","text":"","code":"r_version_short()"},{"path":"https://rstudio.github.io/shinycoreci/reference/r_version_short.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R Version — r_version_short","text":"Major minor number . Ex: \"4.0\"","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/shinyverse_libpath.html","id":null,"dir":"Reference","previous_headings":"","what":"Shinyverse libpath — shinyverse_libpath","title":"Shinyverse libpath — shinyverse_libpath","text":"Methods get reset shinyverse libpath.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/shinyverse_libpath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shinyverse libpath — shinyverse_libpath","text":"","code":"shinyverse_libpath()  shinyverse_clean_libpath()"},{"path":"https://rstudio.github.io/shinycoreci/reference/shinyverse_libpath.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Shinyverse libpath — shinyverse_libpath","text":"shinyverse_libpath: Library path persist across installations. different path different R versions shinyverse_clean_libpath: Removes cached R library","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test-results.html","id":null,"dir":"Reference","previous_headings":"","what":"View (and save) test_in_local() output — save_test_results","title":"View (and save) test_in_local() output — save_test_results","text":"Use view_test_results() preview test results generated save_test_results() (saving ever done GHA workflow).","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test-results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View (and save) test_in_local() output — save_test_results","text":"","code":"save_test_results(output, gha_branch_name, pr_number, username, repo_dir = \".\")"},{"path":"https://rstudio.github.io/shinycoreci/reference/test-results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View (and save) test_in_local() output — save_test_results","text":"output output test_in_local(). gha_branch_name identifier determined GHA workflow pr_number pull request number. username username github profile. repo_dir Location local shinycoreci repo","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_browser.html","id":null,"dir":"Reference","previous_headings":"","what":"Test apps within the terminal — test_in_browser","title":"Test apps within the terminal — test_in_browser","text":"Automatically runs next app fresh callr::r_bg session.  stop, close shiny application window.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_browser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test apps within the terminal — test_in_browser","text":"","code":"test_in_browser(   app_name = apps[1],   apps = apps_manual,   ...,   port = 8080,   port_background = NULL,   host = \"127.0.0.1\",   local_pkgs = FALSE )"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_browser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test apps within the terminal — test_in_browser","text":"app_name app number name start . numeric, match leading number testing application apps List apps test ... ignored port port foreground app process port_background port background app process host host foreground background app processes local_pkgs TRUE, local packages used instead isolated shinyverse installation.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_browser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test apps within the terminal — test_in_browser","text":"","code":"if (FALSE) test_in_browser()"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_deployed.html","id":null,"dir":"Reference","previous_headings":"","what":"Test deployed apps — test_in_connect","title":"Test deployed apps — test_in_connect","text":"Automatically runs next app fresh callr::r_bg session.  stop, close shiny application window.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_deployed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test deployed apps — test_in_connect","text":"","code":"test_in_connect(   app_name = apps[1],   apps = apps_manual,   ...,   urls = default_connect_urls,   server = attr(urls, \"server\"),   account = attr(urls, \"account\"),   port = 8080,   host = \"127.0.0.1\" )  test_in_shinyappsio(   app_name = apps[1],   apps = apps_manual,   port = 8080,   host = \"127.0.0.1\",   account = \"testing-apps\",   server = \"shinyapps.io\" )"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_deployed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test deployed apps — test_in_connect","text":"app_name app number name start . numeric, match leading number testing application apps List apps test ... ignored urls Named vector urls visit. output [connect_urls]. default set server, account, dir, apps server, account Parameters supplied [rsconnect::deployApp] port port foreground app process host host foreground app processes","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_deployed.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Test deployed apps — test_in_connect","text":"test_in_connect: Test connect applications given server account test_in_shinyappsio: Test connect applications given server account","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_deployed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test deployed apps — test_in_connect","text":"","code":"if (FALSE) test_in_connect(dir = \"apps\") if (FALSE) test_in_test_in_shinyapps_io(dir = \"apps\")"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ide.html","id":null,"dir":"Reference","previous_headings":"","what":"Test apps within RStudio IDE — test_in_ide","title":"Test apps within RStudio IDE — test_in_ide","text":"Automatically runs next app fresh RStudio session closing current app. stop,  send interrupt signal (esc ctrl+c) app twice rapid succession.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test apps within RStudio IDE — test_in_ide","text":"","code":"test_in_ide(   app_name = apps[1],   apps = apps_manual,   ...,   port = 8000,   host = \"127.0.0.1\",   delay = 1,   local_pkgs = FALSE,   viewer = NULL,   refresh_ = FALSE )"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test apps within RStudio IDE — test_in_ide","text":"app_name app number name start . numeric, match leading number testing application apps List apps test ... ignored port port foreground app process host host foreground background app processes delay Time wait applications. [1] local_pkgs TRUE, local packages used instead isolated shinyverse installation. viewer RStudio IDE viewer use.  [\"pane\"] refresh_ internal use. TRUE, packages reinstalled.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ide.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test apps within RStudio IDE — test_in_ide","text":"Kill testing hitting esc RStudio. options() need set, set file.  See usethis::edit_r_profile()","code":".Rprofile"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test apps within RStudio IDE — test_in_ide","text":"","code":"if (FALSE) test_in_ide(dir = \"apps\")"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Test apps using shiny::runTests() using local libpath — test_in_local","title":"Test apps using shiny::runTests() using local libpath — test_in_local","text":"Test apps using shiny::runTests() using local libpath","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test apps using shiny::runTests() using local libpath — test_in_local","text":"","code":"test_in_local(   apps = apps_with_tests(repo_dir),   ...,   install = TRUE,   assert = TRUE,   timeout = 10 * 60,   retries = 2,   repo_dir = \".\" )"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test apps using shiny::runTests() using local libpath — test_in_local","text":"apps applications within dir run ... ignored install TRUE, installs shinyverse default libpath running tests assert logical value determine assert_test_output() called result timeout Length time allowed application's full test suit can run determining failure retries number attempts retry declaring test failure repo_dir Location local shinycoreci repo","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ssossp.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Apps in SSO/SSP — test_in_sso","title":"Test Apps in SSO/SSP — test_in_sso","text":"Automatically launches docker background process.  docker ready, shiny application launched help move applications.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ssossp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Apps in SSO/SSP — test_in_sso","text":"","code":"test_in_sso(   app_name = apps[1],   apps = apps_manual,   ...,   release = c(\"focal\", \"bionic\", \"centos7\"),   r_version = c(\"4.1\", \"4.0\", \"3.6\", \"3.5\"),   tag = NULL,   port = 8080,   port_background = switch(release, centos7 = 7878, 3838),   host = \"127.0.0.1\" )  test_in_ssp(   app_name = apps[1],   apps = apps_manual,   release = c(\"focal\", \"bionic\", \"centos7\"),   r_version = c(\"4.1\", \"4.0\", \"3.6\", \"3.5\"),   tag = NULL,   port = 8080,   port_background = switch(release, centos7 = 8989, 4949),   host = \"127.0.0.1\" )"},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ssossp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Apps in SSO/SSP — test_in_sso","text":"app_name app number name start . numeric, match leading number testing application apps List apps test ... ignored release Distro release name, \"focal\" ubuntu \"7\" centos r_version R version use. Ex: \"3.6\" tag Extra tag information docker image. prepend - value given. port Port shiny application port_background Port connect Docker container host host foreground background app processes","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ssossp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test Apps in SSO/SSP — test_in_sso","text":"docker application stop shiny application exits.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ssossp.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Test Apps in SSO/SSP — test_in_sso","text":"test_in_sso: Test SSO Shiny applications test_in_ssp: Test SSP Shiny applications","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/test_in_ssossp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Apps in SSO/SSP — test_in_sso","text":"","code":"if (FALSE) test_in_sso() if (FALSE) test_in_ssp()"},{"path":"https://rstudio.github.io/shinycoreci/reference/trigger.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a repository event. — trigger","title":"Generate a repository event. — trigger","text":"function uses GitHub API create repository dispatch event can trigger workflows.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/trigger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a repository event. — trigger","text":"","code":"trigger(   event_type,   repo = \"rstudio/shinycoreci\",   client_payload = list(),   auth_token = Sys.getenv(\"GITHUB_PAT\") )  trigger_tests(   repo = \"rstudio/shinycoreci\",   auth_token = Sys.getenv(\"GITHUB_PAT\") )  trigger_deploy(   repo = \"rstudio/shinycoreci\",   auth_token = Sys.getenv(\"GITHUB_PAT\") )  trigger_docker(   repo = \"rstudio/shinycoreci\",   auth_token = Sys.getenv(\"GITHUB_PAT\") )"},{"path":"https://rstudio.github.io/shinycoreci/reference/trigger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a repository event. — trigger","text":"event_type name event create repository repo GitHub repo create event ; defaults rstudio/shinycoreci client_payload JSON object make available workflow github.event.client_payload object auth_token GitHub Personal Access Token; defaults Sys.getenv(\"GITHUB_PAT\")","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/use_manual_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag an app to be manually tested — use_manual_app","title":"Flag an app to be manually tested — use_manual_app","text":"apps_* methods inspect application determine testing possible.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/use_manual_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag an app to be manually tested — use_manual_app","text":"","code":"use_manual_app(app_dir)"},{"path":"https://rstudio.github.io/shinycoreci/reference/use_manual_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag an app to be manually tested — use_manual_app","text":"app_dir Shiny application directory containing app.R, ui.R, server.R, index.Rmd","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/use_shinyjster.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Shinyjster test file — use_shinyjster","title":"Create Shinyjster test file — use_shinyjster","text":"creates testing file test shinyjster applicable browser.","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/use_shinyjster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Shinyjster test file — use_shinyjster","text":"","code":"use_shinyjster(app_dir)"},{"path":"https://rstudio.github.io/shinycoreci/reference/use_shinyjster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Shinyjster test file — use_shinyjster","text":"app_dir Location shiny application test","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/view_test_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"View Shinytest Diff — view_test_diff","title":"View Shinytest Diff — view_test_diff","text":"View Shinytest Diff","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/view_test_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View Shinytest Diff — view_test_diff","text":"","code":"view_test_diff(suffix = platform_rversion(), dir = \"apps\", ...)"},{"path":"https://rstudio.github.io/shinycoreci/reference/view_test_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View Shinytest Diff — view_test_diff","text":"suffix Test output suffix compare dir Root folder path ... Extra arguments passed shinytest::viewTestDiff","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/view_test_images.html","id":null,"dir":"Reference","previous_headings":"","what":"View Shinytest Images — view_test_images","title":"View Shinytest Images — view_test_images","text":"View Shinytest Images","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/view_test_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View Shinytest Images — view_test_images","text":"","code":"view_test_images(repo_dir = \".\")"},{"path":"https://rstudio.github.io/shinycoreci/reference/view_test_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View Shinytest Images — view_test_images","text":"repo_dir directory shinycoreci repo","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/write_sysinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Write system information to a file — write_sysinfo","title":"Write system information to a file — write_sysinfo","text":"Write system information file","code":""},{"path":"https://rstudio.github.io/shinycoreci/reference/write_sysinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write system information to a file — write_sysinfo","text":"","code":"write_sysinfo(file = stdout())"},{"path":"https://rstudio.github.io/shinycoreci/reference/write_sysinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write system information to a file — write_sysinfo","text":"file Name file, file object write (defaults stdout).","code":""},{"path":"https://rstudio.github.io/shinycoreci/todo.html","id":null,"dir":"","previous_headings":"","what":"Actions","title":"Actions","text":"Run update inst/internal/apps Deploying Connect push back connect urls Port actions rstudio/shinycoreci-apps Add validation usage shinycoreci::[^:] ./inst/internal/apps","code":""},{"path":"https://rstudio.github.io/shinycoreci/todo.html","id":"apps","dir":"","previous_headings":"","what":"Apps","title":"Actions","text":"App 217 needs use .Platform$OS.type == \"windows\" determining windows support Replace usage shinycoreci::platform_rversion() shinytest2::platform_variant() Replace shinycoreciapps::testthat_shinyjster() shinyjster::testthat_shinyjster() Convert logic 169 use testthat Move skip logic inside tests 181-report-image 182-report-png 183-report-cairo 184-report-ragg 193-reactlog-dynamic-ui 301-bs-themes 302-bootswatch-themes Reduce app name size files 100bytes Fixed building test folders. ;-)","code":""},{"path":"https://rstudio.github.io/shinycoreci/todo.html","id":"done","dir":"","previous_headings":"","what":"Done","title":"Actions","text":"deploy_apps() view_test_images() test_in_browser() test_in_connect() test_in_shinyappsio() test_in_ide() Test terminal test_in_ci() formerly test_run_tests() Changed data structure. Add version Move testthat_shinyjster() {shinyjster} avoid bad installs ./docker.R","code":""},{"path":"https://rstudio.github.io/shinycoreci/todo.html","id":"after-merge","dir":"","previous_headings":"","what":"After merge","title":"Actions","text":"fix_all_gha_branches() view_test_diff() view_test_results() Remove test_path data structure; Use version parse old files Test test_in_ide() IDE test results printed log test_in_sso() / test_in_ssp()","code":""},{"path":"https://rstudio.github.io/shinycoreci/todo.html","id":"docker-notes","dir":"","previous_headings":"","what":"Docker Notes","title":"Actions","text":"Use Rocky Linux 8 instead centos7","code":""}]
